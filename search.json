[{"path":"www.github.com/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 propertee authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"www.github.com/articles/LinearModelVarianceEstimation.html","id":"combined-model","dir":"Articles","previous_headings":"","what":"Combined model","title":"Variance Estimation Testing Using A Simple Linear Specification","text":"Consider two sets background variables treatment assignments, \\(x\\) \\(z\\) dimension \\(p_x\\) \\(p_z\\), respectively, treated nonrandom fixed conditioning. allow correlation variables, assume matrix \\(\\begin{pmatrix} X & Z \\end{pmatrix}' \\begin{pmatrix} X & Z \\end{pmatrix}\\) inverse (think results work generalized inverses, exist makes dimesionality coefficients little tricky). \\[Y = \\alpha'x + \\beta'z + \\epsilon, \\quad E(\\epsilon) = 0, \\text{Var}(\\epsilon) = \\sigma^2\\] Standard results give us \\[ \\begin{pmatrix} \\hat \\alpha_1 \\\\ \\hat \\beta_1 \\end{pmatrix} = \\begin{pmatrix} X'X & X'Z \\\\ Z'X & Z'Z \\end{pmatrix}^{-1} \\begin{pmatrix} X'y \\\\ Z'y \\end{pmatrix} \\] variance estimators \\[\\sigma^2 \\begin{pmatrix} X'X & X'Z \\\\ Z'X & Z'Z \\end{pmatrix}^{-1}\\] Results blocked matrices (e.g., Matrix Cookbook) give variance just \\(\\hat \\beta\\) \\[\\text{Var}(\\hat \\beta_1) = \\sigma^2 \\left[Z'Z - Z' X (X'X)^{-1} X'Z\\right]^{-1}\\] Write \\(H = - X (X'X)^{-1} X'\\), matrix creates residuals regression \\(x\\) alone. , \\[\\text{Var}(\\hat \\beta_1) = \\sigma^2 \\left[Z'H Z\\right]^{-1}\\] \\(\\hat \\beta_1\\) arises coefficient regression \\(HY\\) \\(HZ\\) (-called Frisch-Waugh-Lovell Theorem). consequence, \\[\\hat \\beta_1 = (Z'HZ)^{-1}(Z'Hy) .\\]","code":""},{"path":"www.github.com/articles/LinearModelVarianceEstimation.html","id":"two-regressions","dir":"Articles","previous_headings":"","what":"Two regressions","title":"Variance Estimation Testing Using A Simple Linear Specification","text":"Let \\(\\hat \\alpha_2\\) \\(\\hat \\beta_2\\) estimators first regression \\(Y\\) \\(x\\) alone regressing \\(Y - \\hat \\alpha_2'x\\), \\(YH\\) \\(H\\) defined , \\(Z\\). Standard results give \\[\\hat \\alpha_2 = (X'X)^{-1} X' y\\] \\[\\hat \\beta_2 = (Z'Z)^{-1} Z' (y - X \\hat \\alpha_2)  = (Z'Z)^{-1} Z'(y - X (X'X)^{-1} X' y) = (Z'Z)^{-1} Z' H y\\] \\(Z\\) \\(X\\) taken nonrandom, may pass \\(\\hat \\beta_1\\) \\(\\hat \\beta_2\\) via nonrandom linear transformations, follows: \\[\\hat \\beta_1 = (Z'HZ)^{-1}(Z'Z) \\hat \\beta_2;\\quad \\hat \\beta_2 = (Z'Z)^{-1}(Z'HZ) \\hat \\beta_1 .\\] Accordingly \\[ \\operatorname{Cov}(\\hat \\beta_1) = (Z'HZ)^{-1}(Z'Z) \\operatorname{Cov}(\\hat \\beta_{2})(Z'Z) (Z'HZ)^{-1}\\] may serve basis tests.","code":""},{"path":"www.github.com/articles/LinearModelVarianceEstimation.html","id":"todo","dir":"Articles","previous_headings":"","what":"TODO","title":"Variance Estimation Testing Using A Simple Linear Specification","text":"Implement tests.","code":""},{"path":"www.github.com/articles/RDD.html","id":"data-and-design","dir":"Articles","previous_headings":"","what":"Data and Design","title":"Regression Discontinuity Designs","text":"data example randomly simulated using synthpop package R based data originally collected Lindo, Sanders, Oreopoulos (2010; hereafter LSO). (original real data can found ; code simulate fake data can found .) major public university, students cumulative grade point average (GPA) pre-specified cutoff placed academic probation (AP). Students AP given extra support, threatened suspension GPAs improve. See LSO details. Along LSO, consider students end first year university. university consisted three campuses, AP cutoff varied campus. simplify matters, centered student’s first year GPA campus’s cutoff, creating new variable \\(R_i\\equiv GPA_i -c_{campus[]}\\), \\(GPA_i\\) student \\(\\)’s first-year GPA, \\(c_{campus[]}\\) AP cutoff student \\(\\)’s campus. student \\(\\) placed AP \\(R_i<0\\) avoids AP \\(R_i\\ge 0\\). attempt estimate average effect AP placement nextGPA, students’ subsequent GPA (either summer following academic semester). figure plots average nextGPA students distinct R values (.e. centered first-year GPA). cutoff AP, 0, denoted dotted line. sizes points proportional natural log numbers students unique value R.","code":"data(lsoSynth) figDat <- aggregate(lsoSynth[,c('nextGPA','lhsgrade_pct')],by=list(R=lsoSynth$R),                     FUN=mean,na.rm=TRUE) figDat$n <- as.vector(table(lsoSynth$R))  with(figDat,      plot(R,nextGPA,cex=log(n+1)/3,main='Average Subsequent GPA\\n as a function of 1st-Year GPA,\\n Centered at AP Cutoff')) abline(v=0,lty=2)"},{"path":[]},{"path":"www.github.com/articles/RDD.html","id":"regression-discontinuity-designs","dir":"Articles","previous_headings":"Background","what":"Regression Discontinuity Designs","title":"Regression Discontinuity Designs","text":"characterizes discontinuity (RD) designs, including LSO study, treatment assigned function numeric “running variable” \\(R\\), along prespecified cutoff value \\(c\\), treatment assigned subjects \\(\\) \\(R_i>c\\), \\(R_i<c\\). \\(Z_i\\) denote’s \\(\\)’s treatment assignment, write \\(Z_i=\\mathbf{1}\\{R_i<c\\}\\) \\(\\mathbf{1}\\{R_i<c\\}\\), \\(\\mathbf{1}\\{x\\}\\) indicator function–equal 1 \\(x\\) true 0 otherwise. LSO study, \\(\\) indexes students, centered first-year GPA $R_i $ running variable, treatment study AP placement. $ Z_i={R_i<0} $. (“fuzzy” RD designs, \\(R\\)’s value relative \\(c\\) doesn’t completely determine treatment, merely affects probability treatment, subjects , say, \\(R_i>c\\) likely treated \\(R_i<c\\); fuzzy RD designs, \\(Z_i=\\mathbf{1}\\{R_i>c\\}\\) typically modeled instrument treatment receipt.) RD designs hold privileged place causal inference, unlike observational study designs, mechanism treatment assignment known. , \\(R\\) confounder. hand, since \\(Z\\) completely determined \\(R\\), subjects values \\(R\\) different values \\(Z\\), common observational study techniques, matching \\(R\\), impossible. Instead, necessary adjust \\(R\\) modeling–typically regression.","code":""},{"path":"www.github.com/articles/RDD.html","id":"analyzing-rd-designs-with-ancova","dir":"Articles","previous_headings":"Background","what":"Analyzing RD Designs with ANCOVA","title":"Regression Discontinuity Designs","text":"Traditionally, typical way analyze data RD designs ANCOVA, fitting regression model \\[Y_i=\\beta_0+\\beta_1R_i+\\beta_2Z_i+\\epsilon_i\\] \\(Y_i\\) outcome interest measured subject \\(\\) (example nextGPA), \\(\\epsilon_i\\) random regression error. , regression coefficient \\(Z\\), \\(\\beta_2\\), taken estimate treatment effect. Common methodological updates ANCOVA approach include interaction term \\(Z_i\\) \\(R_i\\), substitution semi-parametric regression, local linear polynomial models, linear ordinary least squares. suitable conditions, ANCOVA model said estimate “Local Average Treatment Effect” (LATE). \\(Y_1\\) \\(Y_0\\) potential outcomes \\(Y\\), LATE defined \\[\\displaystyle\\lim_{r\\rightarrow c^+} E(Y_1|R=r)-\\displaystyle\\lim_{r\\rightarrow c^-} E(Y_0|R=r)\\] equivalently \\[\\displaystyle\\lim_{\\Delta\\rightarrow 0^+} E(Y_1-Y_0 |R\\(c-\\Delta,c+\\Delta))\\] \\(E\\) denotes expectation–, LATE limit average treatment effects subjects \\(R\\) ever-shrinking regions around \\(c\\). Among considerations, LATE target suggests data analysts restrict attention subjects \\(R\\) falling within bandwidth \\(b>0\\) \\(c\\), e.g. fitting model subjects \\(\\) within “window analysis” \\(\\mathcal{W}=\\{:R_i\\(c-b,c+b)\\}\\). number methods proposed select \\(b\\), including cross validation, non-parametric modeling second derivative \\(f(r)=E(Y|R=r)\\), specification tests.","code":""},{"path":"www.github.com/articles/RDD.html","id":"the-propertee-approach-to-rd-designs","dir":"Articles","previous_headings":"Background","what":"The propertee Approach to RD Designs","title":"Regression Discontinuity Designs","text":"propertee approach RD designs breaks data analysis three steps: Conduct specification tests choose bandwidth \\(b>0\\), along , possibly, data exclusions, resulting analysis sample \\(W\\). Fit covariance model \\(Y_{i0}=g(R_i,x_i;\\beta)\\), modeling \\(Y_{i0}\\) function running variable \\(R_i\\) (optionally) covariates \\(\\mathbf{x}_i\\). Fitting covariance model control subjects, designs, entail extrapolation model fit subjects \\(R_i\\(c-b,c)\\) subjects \\(R_i\\(c,c+b)\\), vice-versa, undesirable. Instead, fit covariance model full analysis sample \\(\\mathcal{W}\\), including treated untreated subjects. However, since interested modeling \\(Y_0\\), \\(Y_1\\) \\(Y\\), rather fitting \\(g(\\cdot)\\), fit extended model \\[\\tilde{g}(R_i,x_i,Z_i;\\beta,\\gamma)=g(R_i,x_i;\\beta)+\\gamma Z_i\\] including term treatment assignment. estimate \\(\\gamma\\) , essence, provisional estimate treatment effect. Let \\(\\widehat{Y}_{i0}=g(R_i,x_i;\\hat{\\beta})\\), using model \\(Y_0\\)—including term \\(Z\\)—along \\(\\hat{\\beta}\\) estimated step 2. estimate average treatment effect subjects \\(W\\) using difference means estimator: \\[ d_{\\hat{\\beta}}=\\frac{\\sum_{\\W} Z_i(Y_i-\\widehat{Y}_{i0})}{\\sum_{\\W} Z_i}-\\frac{\\sum_{\\W} (1-Z_i)(Y_i-\\widehat{Y}_{i0})}{\\sum_{\\W} (1-Z_i)} \\] estimator \\(d_{\\hat{\\beta}}\\) consistent model \\(g(R_i,x_i;\\beta_0)\\), \\(\\beta_0\\) probability limit \\(\\hat{\\beta}\\), successfully removes confounding due \\(R\\), .e. \\(Y_0-g(R_i,x_i;\\beta_0) \\perp \\!\\!\\! \\perp Z\\) \\(\\\\mathcal{W}\\).","code":""},{"path":[]},{"path":"www.github.com/articles/RDD.html","id":"determining-the-window-of-analysis","dir":"Articles","previous_headings":"Analyzing an RD design in propertee","what":"Determining the window of analysis","title":"Regression Discontinuity Designs","text":"extensive literature determining appropriate window analysis RD design. See, instance, Imbens Kalyanaraman (2012) Sales Hansen (2020). stage analysis beyond scope vignette, require propertee package. purpose example, focus analysis \\(\\mathcal{W}=\\{:R_i\\[-0.5,0.5]\\}\\).","code":""},{"path":"www.github.com/articles/RDD.html","id":"initializing-the-rd-design-object","dir":"Articles","previous_headings":"Analyzing an RD design in propertee","what":"Initializing the RD Design Object","title":"Regression Discontinuity Designs","text":"general, propertee design objects require users specify unit assignment variable, corresponds level treatment assignment–words, units assigned conditions. necessary combining results across different models datasets, estimating correct design-based standard errors. lsoSynth, clusters, individual students assigned academic probation individual basis. dataset include ID variable, variable takes unique value row . use row-names. Defining RD design requires, minimum, identifying running variable(s) \\(R\\), well \\(R\\) determines treatment assignment. example,","code":"lsoSynth$id <- rownames(lsoSynth) lsoSynth$Z <- lsoSynth$R<0  lsoSynthW <- subset(lsoSynth,abs(R)<=0.5)  #lsoSynthW$id <- 1:nrow(lsoSynthW) des <- rd_design(Z ~ forcing(R) + unitid(id), data=lsoSynth, subset=abs(lsoSynth$R) <= 0.5)"},{"path":"www.github.com/articles/RDD.html","id":"modeling-y_c-as-a-function-of-r","dir":"Articles","previous_headings":"Analyzing an RD design in propertee","what":"Modeling \\(Y_C\\) as a function of \\(R\\)","title":"Regression Discontinuity Designs","text":"consider two potential models \\(\\tilde{g}(\\cdot)\\) \\(Y_C\\) function \\(R\\). First, standard OLS model: second bounded-influence polynomial model type recommended Sales & Hansen (2020): [Put something evaluating ?]","code":"### this doesn't work: g1 <- lm(nextGPA ~ R + Z, data = lsoSynth, weights = ett(des) ##this works, but it's annoying to enter in the subset expression a 2nd time: g1 <- lm(nextGPA ~ R + Z, data = lsoSynth, subset = abs(R) <= 0.5) g2 <- if(requireNamespace(\"robustbase\", quietly = TRUE)){   robustbase::lmrob(nextGPA~poly(R,5)+Z,data=lsoSynthW) } else g1"},{"path":"www.github.com/articles/RDD.html","id":"estimating-effects","dir":"Articles","previous_headings":"Analyzing an RD design in propertee","what":"Estimating Effects","title":"Regression Discontinuity Designs","text":"","code":"yhat1 <- predict(g1,data.frame(R=forcings(des)[[1]],Z=FALSE)) yhat2 <- predict(g2,data.frame(R=forcings(des)[[1]],Z=FALSE))  plot(yhat1,yhat2) ### method 1:  mean(lsoSynthW$nextGPA[lsoSynthW$Z]-yhat1[lsoSynthW$Z])-   mean(lsoSynthW$nextGPA[!lsoSynthW$Z]-yhat1[!lsoSynthW$Z]) #> [1] 0.2553202 #### method 2: coef(lm(nextGPA~Z, offset=yhat1,data=lsoSynthW))['ZTRUE'] #>     ZTRUE  #> 0.2553202 ### method 1:  mean(lsoSynthW$nextGPA[lsoSynthW$Z]-yhat2[lsoSynthW$Z])-   mean(lsoSynthW$nextGPA[!lsoSynthW$Z]-yhat2[!lsoSynthW$Z]) #> [1] 0.2295554 #### method 2: coef(lm(nextGPA~Z, offset=yhat2,data=lsoSynthW))['ZTRUE'] #>     ZTRUE  #> 0.2295554"},{"path":[]},{"path":"www.github.com/articles/intro-to-propertee.html","id":"main-features","dir":"Articles","previous_headings":"","what":"Main Features","title":"Introduction to propertee","text":"propertee package, Prognostic Regression Offsets Propagation ERrors (Treatment Effect Estimation), facilitates direct adjustment experiments observational studies design-informed standard errors flexible options covariance adjustment. uses explicit specification study design provide probability assignment weights standard errors appropriately reflect design. covariance adjustment Hajek (one-way) fixed effects estimates, enables offsetting outcome predictions dedicated covariance model, standard error calculations propagating error appropriate covariance model. main workflow consists two main steps one optional step: Generate Design object encodes study design, including unit assignment, treatment status unit assignment, optionally block information. accomplished obs_design(), rct_design() rd_design() functions. Optionally, fit covariate adjustment model. Fit model estimate treatment effect, accounting design information, optionally covariate adjustment. done via lmitt() function.","code":""},{"path":"www.github.com/articles/intro-to-propertee.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example Data","title":"Introduction to propertee","text":"example dataset comes state Tennessee’s Student-Teacher Achievement Ratio (STAR) experiment. Students randomly assigned three possible classroom conditions: small (13 17 students per teacher), regular class (22 25 students per teacher), regular--aide class (22 25 students full-time teacher’s aide). simplicity first example, examine single binary treatment - “small” classrooms versus “regular” “regular+aide” classrooms. basic example, see propertee makes easy handle non-binary treatment variables introducing dichotomys. outcome interest reading score end kindergarten. students blocked schools via schoolidk variable: Students assigned units, need unique identifier per student. currently exist, can easily generated:","code":"data(STARdata) table(STARdata$stark) #>  #>      regular        small regular+aide  #>         2194         1900         2231 STARdata$starkbinary <- STARdata$stark == \"small\" table(STARdata$starkbinary) #>  #> FALSE  TRUE  #>  4425  1900 summary(STARdata$readk) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>   315.0   414.0   433.0   436.7   453.0   627.0    5809 length(unique(STARdata$schoolidk)) #> [1] 80 head(table(STARdata$schoolidk)) #>  #>   1   2   3   4   5   6  #>  74  54 100  60  61  54 STARdata$studentid <- seq_len(nrow(STARdata)) head(STARdata$studentid) #> [1] 1 2 3 4 5 6"},{"path":[]},{"path":"www.github.com/articles/intro-to-propertee.html","id":"defining-the-design","dir":"Articles","previous_headings":"A Basic Example","what":"Defining the Design","title":"Introduction to propertee","text":"three _design functions (rct_design(), obj_design(), rd_design()) operate similarly. first argument important, encodes design information use formula. left-hand side formula identifies treatment variable. right-hand side formula consists following potential pieces information: unit_of_assignment(): identifies variable(s) indicate units assignment. required designs. alias uoa() can used place. block(): identifies variable(s) contain block information. Optional. forcing(): regression discontinuity designs (rd_design()), identifies variable(s) contain forcing information. define Design example: one variable needed identify unit assignment, block, forcing, can included. example, perhaps schoolidk may unique within district, potentially unique across districts. ’d use something like block(districtid, schoolidk) _design function.","code":"des <- obs_design(starkbinary ~ unit_of_assignment(studentid) + block(schoolidk),                   data = STARdata, na.fail = FALSE) summary(des) #> Observational Study #>  #>  Structure          Variables   #>  ---------          ---------   #>  Treatment          starkbinary #>  Unit of Assignment studentid   #>  Block              schoolidk   #>  #> Number of units per Treatment group:  #>  Txt Grp Num Units #>    FALSE      4425 #>     TRUE      1900"},{"path":"www.github.com/articles/intro-to-propertee.html","id":"estimating-the-treatment-effect","dir":"Articles","previous_headings":"A Basic Example","what":"Estimating the treatment effect","title":"Introduction to propertee","text":"main function estimating treatment effects lmitt() function. takes three main required arguments: formula specifying outcome desired treatment effect. data set containing outcome information. Design. Note data set need data set generated Design; however need include variables identify units assignment. (variable names differ, = argument can used link , though recommend renaming reduce likelihood issues.) example, may one dataset containing school-level information, separate dataset containing student-level information. Assume school unit assignment. course merge two data-sets, propertee can instead use school-level data define Design, student-level data estimate treatment effect. formula entering lmitt() can take one two forms: estimate main treatment effect outcome variable y, estimate subgroup specific treatment effects level x outcome y, x categorical. continuous x, main effect treatment-x interaction effect estimated. Therefore, estimate treatment effect example, can run: data includes ethnicity; can estimate subgroup effects ethnicity:","code":"y ~ 1 y ~ x te <- lmitt(readk ~ 1, data = STARdata, design = des) #> The Design object contains block-level information, but it is not used in this model. Block information is used when weights are defined via `ate()` or `ett()` or if the `absorb=TRUE` argument is passed. summary(te) #>  #> Call: #> lmitt(readk ~ 1, data = STARdata, design = des) #>  #>  Treatment Effects : #>                  Estimate Std. Error t value Pr(>|t|)     #> starkbinary.TRUE   5.4632     0.9207   5.934 3.13e-09 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Std. Error calculated via type \"CR0\" te_s <- lmitt(readk ~ ethnicity, data = STARdata, design = des) #> The Design object contains block-level information, but it is not used in this model. Block information is used when weights are defined via `ate()` or `ett()` or if the `absorb=TRUE` argument is passed. summary(te_s) #> Warning: The following subgroups do not have sufficient degrees of freedom for #> standard error estimates and will be returned as NA: ethnicityamindian #>  #> Call: #> lmitt(readk ~ ethnicity, data = STARdata, design = des) #>  #>  Treatment Effects : #>                                    Estimate Std. Error t value Pr(>|t|)     #> starkbinary.TRUE_ethnicitycauc        4.717      1.147   4.112 3.97e-05 *** #> starkbinary.TRUE_ethnicityafam        6.607      1.468   4.500 6.94e-06 *** #> starkbinary.TRUE_ethnicityasian      -9.939     21.021  -0.473   0.6364     #> starkbinary.TRUE_ethnicityhispanic   35.667     18.635   1.914   0.0557 .   #> starkbinary.TRUE_ethnicityamindian   19.000         NA      NA       NA     #> starkbinary.TRUE_ethnicityother      13.333     26.857   0.496   0.6196     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Std. Error calculated via type \"CR0\""},{"path":"www.github.com/articles/intro-to-propertee.html","id":"including-design-weights","dir":"Articles","previous_headings":"A Basic Example","what":"Including design weights","title":"Introduction to propertee","text":"Design weights can easily included estimation. propertee supports average treatment effect (ATE) effect treatment treated (ETT) weights. include one weights, simply include weights = \"ate\" weights = \"ett\" argument lmitt(): Internally, call ate() ett() functions can used directly. included inside lmitt(), need specify additional arguments ate() ett(), enabling easy functions weights. example weight variable, say wgt, include weights = wgt*ate() lmitt() call.","code":"lmitt(readk ~ 1, data = STARdata, design = des, weights = \"ate\") #> starkbinary.TRUE  #>         6.116683 lmitt(readk ~ 1, data = STARdata, design = des, weights = \"ett\") #> starkbinary.TRUE  #>         5.650771 head(ate(des, data = STARdata)) #> [1] 0.000000 3.965517 4.705882 0.000000 1.445946 0.000000"},{"path":"www.github.com/articles/intro-to-propertee.html","id":"covariance-adjustment-models","dir":"Articles","previous_headings":"A Basic Example","what":"Covariance Adjustment models","title":"Introduction to propertee","text":", lmitt() allow covariates; e.g. something like lmitt(y ~ 1 + control_var,... fail. adjust covariates, separate covariate model fit. model supports predict() function work. cov_adj() function can used process covariance adjustment model produce required values; output can passed offset=. Similarly weight functions, cov_adj() attempts locate correct arguments (case, mainly data= argument) use model command; cov_adj() fall back using data covariance model, safer use newdata= argument calling cov_adj() outside model. Also, similarly weights, cov_adj() can used normal modeling commands well.","code":"camod <- lm(readk ~ gender + birth + lunchk, data = STARdata) lmitt(readk ~ 1, data = STARdata, design = des,       weights = \"ate\", offset = cov_adj(camod)) #> Warning in validityMethod(object): Some covariance adjustments are NA; be #> careful of dropping these observations when fitting the ITT effect model #> starkbinary.TRUE  #>         6.050889 head(cov_adj(camod, newdata = STARdata)) #> [1]       NA 448.8500 450.2802       NA 425.4395       NA lm(readk ~ starkbinary, data = STARdata, weights = ate(des),    offset = cov_adj(camod)) #> Warning in validityMethod(object): Some covariance adjustments are NA; be #> careful of dropping these observations when fitting the ITT effect model #>  #> Call: #> lm(formula = readk ~ starkbinary, data = STARdata, weights = ate(des),  #>     offset = cov_adj(camod)) #>  #> Coefficients: #>     (Intercept)  starkbinaryTRUE   #>          -1.684            6.051"},{"path":"www.github.com/articles/intro-to-propertee.html","id":"absorbing-blocks","dir":"Articles","previous_headings":"A Basic Example","what":"Absorbing Blocks","title":"Introduction to propertee","text":"fixed effects blocks desired, can absorbed away avoid estimating, absorb=TRUE argument can passed.","code":"lmitt(readk ~ 1, data = STARdata, design = des, absorb = TRUE) #> starkbinary.TRUE  #>          5.14933"},{"path":"www.github.com/articles/non-binary-treatment.html","id":"binary-treatment","dir":"Articles","previous_headings":"","what":"Binary Treatment","title":"Non-binary Treatment Specification","text":"creating Design, handling binary treatment variables straightforward. treatment variable either numeric values 0/1, logical, lmitt() estimate treatment effect difference outcome treated group (1 TRUE) versus control group (0 FALSE).","code":""},{"path":"www.github.com/articles/non-binary-treatment.html","id":"missing-treatment-status","dir":"Articles","previous_headings":"Binary Treatment","what":"Missing treatment status","title":"Non-binary Treatment Specification","text":"cases (binary non-binary), missing values allowed units assignment missing treatment values excluded models fit via lmitt().","code":""},{"path":"www.github.com/articles/non-binary-treatment.html","id":"non-binary-treatment","dir":"Articles","previous_headings":"","what":"Non-binary Treatment","title":"Non-binary Treatment Specification","text":"However, _design() functions can take (reasonable) form treatment assignment. treatment variable numeric non-binary values, treated continuous treatment effect lmitt(y ~ 1, ... estimate single coefficient treatment. treatment variable character, treated multi-level treatment variable lmitt(y ~ 1, ... estimate treatment effects reference category. reference category first level defined according R’s comparison characters. factor ordered objects tricky deal , Design can created factor ordered treatment variables, lmitt() refuse estimate model unless also provided dichotomy (see ).","code":""},{"path":"www.github.com/articles/non-binary-treatment.html","id":"dichotomzing-a-non-binary-treatment","dir":"Articles","previous_headings":"Non-binary Treatment","what":"Dichotomzing a Non-binary Treatment","title":"Non-binary Treatment Specification","text":"Studies may offer treatment units different times provide treatment units varying intensities. Researchers may interested estimating treatment effects different times given certain threshold provided treatment, however. propertee accommodates wishes storing time intensity treatment treated units Design, offering dichotomy= argument weights calculation functions ett()/ate() assginment creation function assigned() dichotomy presented formula, left-hand side logical statement defining inclusion treatment group, right-hand side logical statement defining inclusion control group. example, dose represents intensity given treatment, set threshold 200, say, mg: units assignment dose 200 treated units, units assignment dose 200 control units. . can used define either group inverse . example, dichotomy defined either units assignment assigned either treatment control assumed NA treatment status ignored estimation treatment effects. dichotomy, units assignment range (100,300) ignored.","code":"dose > 200 ~ dose <= 200 dose > 200 ~ . . ~ dose <= 200 dose >= 300 ~ dose <= 100"},{"path":"www.github.com/articles/non-binary-treatment.html","id":"an-example","dir":"Articles","previous_headings":"Non-binary Treatment","what":"An Example","title":"Non-binary Treatment Specification","text":"","code":"data(simdata) table(simdata$dose) #>  #>  50 100 200 250 300  #>  10  10  10  10  10 des1 <- rct_design(dose ~ uoa(uoa1, uoa2), data = simdata) summary(des1) #> Randomized Control Trial #>  #>  Structure          Variables  #>  ---------          ---------  #>  Treatment          dose       #>  Unit of Assignment uoa1, uoa2 #>  #> Number of units per Treatment group:  #>  Txt Grp Num Units #>       50         2 #>      100         2 #>      200         2 #>      ...           #> 2 smaller treatment groups excluded. #> Use `dtable` function to view full results. head(ate(des1, data = simdata, dichotomy = dose >= 300 ~ dose <= 100)) #> [1] 1.5 1.5 1.5 1.5 0.0 0.0 head(assigned(des1, data = simdata, dichotomy = dose >= 300 ~ dose <= 100)) #> [1]  0  0  0  0 NA NA"},{"path":"www.github.com/articles/not-for-cran/geex_vs_propertee.html","id":"overview","dir":"Articles > Not-for-cran","previous_headings":"","what":"Overview","title":"propertee vs. geex","text":"provide basic validation model-based sandwich standard errors provided comparing estimates package (Saul Hudgens, 2020). two examples, one one without clustering, estimate standard error intent--treat (ITT) effect estimate adjusted covariates using prior covariance model. M-estimation framework, prior covariance model defines one set estimating equations, covariate-adjusted intent--treat effect estimate defines another. One can stack togther use package obtain joint estimates model coefficients ITT effect, one can fit covariance model first, use package feed necessary information first-stage estimating equations variance estimation ITT effect estimate. demonstrate equivalence two appraoches .","code":""},{"path":"www.github.com/articles/not-for-cran/geex_vs_propertee.html","id":"example-with-non-clustered-data","dir":"Articles > Not-for-cran","previous_headings":"","what":"Example with non-clustered data","title":"propertee vs. geex","text":"","code":"set.seed(980) n <- 60 cmod_df <- data.frame(   \"uid\" = seq_len(n),   \"z\" = c(rep(0, 3 * n/4), rep(1, n/4)),   \"x1\" = rnorm(n, sd = 2),   \"x2\" = rep(c(rep(0, n/4), rep(1, n/4)), 2) ) eps <- rnorm(nrow(cmod_df)) theta <- c(75, 0.1, -0.5, 2.5) cmod_df$y <- model.matrix(~ x1 + x2 + z, cmod_df) %*% theta + eps  cmod_df$in_q <- c(rep(0, n/2), rep(1, n/2)) q_df <- cmod_df[cmod_df$in_q == 1,]  cmod <- lm(y ~ x1 + x2, cmod_df) des <- rct_design(z ~ unitid(uid), q_df) damod <- lmitt(y ~ 1, design = des, data = q_df, weights = ate(des), offset = cov_adj(cmod))  estFun <- function(data){   function(theta) {     # covariance model eqns     Xstar <- model.matrix(y ~ x1 + x2, data)     cmod_eqns <- drop(data$y - Xstar %*% theta[1:3]) * Xstar      # itt model eqns     X <- model.matrix(y ~ x1 + x2, data)     Z <- model.matrix(y ~ z, data)     if (data$in_q == 1) {       damod_eqns <- drop(data$weight * (data$y - X %*% theta[1:3] - Z %*% theta[4:5])) * Z     } else {       damod_eqns <- rep(0, 2)     }      out <- c(cmod_eqns, damod_eqns)     return(out)   } }  geexRes <- geex::m_estimate(estFun,                             data = cbind(cmod_df,                                          \"weight\" = c(rep(1, n/2), ate(des, data = q_df))),                             root_control = geex::setup_root_control(start = rep(0.1,5))) print(paste(\"geex estimate of var(tau_hat):\", round(geexRes@vcov[5,5], 8))) print(paste(\"propertee estimate of var(tau_hat):\",             round(vcov_tee(damod, type = \"CR0\", cadjust = FALSE)[2,2], 8)))"},{"path":"www.github.com/articles/not-for-cran/geex_vs_propertee.html","id":"example-with-clustered-data","dir":"Articles > Not-for-cran","previous_headings":"","what":"Example with clustered data","title":"propertee vs. geex","text":"","code":"set.seed(50) nc <- 4 mi <- 20 cmod_df <- data.frame(   \"cid\" = rep(seq_len(4), each = mi),   \"uid\" = rep(seq_len(mi), nc),   \"z\" = c(rep(0, 3 * mi), rep(1, mi)),   \"x1\" = rbinom(nc * mi, 1, 0.5),   \"x2\" = rnorm(nc * mi) )  theta <- c(75, 7.5, -1, 2.5) error_sd <- round(runif(nc, 1, 3), 1) icc <- 0.2 eps <- rnorm(nrow(cmod_df)) Sigma <- matrix(0, nrow = nrow(cmod_df), ncol = nrow(cmod_df)) for (i in (seq_len(nc) - 1)) {   msk <- cmod_df$cid == (i + 1)   Sigma[msk, msk] <- diag(error_sd[i + 1] - icc, nrow = sum(msk)) + icc } A <- chol(Sigma) eps <- t(A) %*% eps cmod_df$y <- model.matrix(~ x1 + x2 + z, cmod_df) %*% theta + eps  cmod_df$in_q <- c(rep(0, mi), rep(1, 3 * mi)) q_df <- cmod_df[cmod_df$in_q == 1,]  cmod <- lm(y ~ x1 + x2, cmod_df) des <- rct_design(z ~ cluster(cid), q_df) damod <- lmitt(y ~ 1, design = des, data = q_df, weights = ate(des), offset = cov_adj(cmod))  clusterEstFunc <- function(data){   function(theta) {     # covariance model eqns     Xstar <- model.matrix(y ~ x1 + x2, data)     cmod_agg_func <- ifelse(dim(Xstar)[2] > 1, colSums, sum)     cmod_eqns <- cmod_agg_func(drop(data$y - Xstar %*% theta[1:3]) * Xstar)      # itt model eqns     X <- model.matrix(y ~ x1 + x2, data)     Z <- model.matrix(y ~ z, data)     damod_agg_func <- ifelse(dim(Z)[2] > 1, colSums, sum)     if (unique(data$in_q) == 1) {       damod_eqns <- damod_agg_func(         drop(data$weight * (data$y - X %*% theta[1:3] - Z %*% theta[4:5])) * Z)     } else {       damod_eqns <- rep(0, 2)     }      out <- c(cmod_eqns, damod_eqns)     return(out)   } }  geexRes <- geex::m_estimate(clusterEstFunc,                             data = cbind(cmod_df,                                          \"weight\" = c(rep(1, mi), ate(des, data = q_df))),                             units = \"cid\",                             root_control = geex::setup_root_control(start = rep(0.1,5)))  print(paste(\"geex estimate of var(tau_hat):\", round(geexRes@vcov[5,5], 8))) print(paste(\"propertee estimate of var(tau_hat):\",             round(vcov_tee(damod, type = \"CR0\", cadjust = FALSE)[2,2], 8)))"},{"path":"www.github.com/articles/not-for-cran/geex_vs_propertee.html","id":"references","dir":"Articles > Not-for-cran","previous_headings":"","what":"References","title":"propertee vs. geex","text":"Saul BC, Hudgens MG (2020). “Calculus M-Estimation R geex.” Journal Statistical Software, 92(2), 1–15. doi: 10.18637/jss.v092.i02.","code":""},{"path":"www.github.com/articles/sandwich_infrastructure.html","id":"context","dir":"Articles","previous_headings":"","what":"Context","title":"Data structures to support standard error calculations for direct adjustment assisted by a prior covariance model","text":"user specified comparative study design separately fitted covariance model. E.g.: data frames C Q_ describe covariance quasiexperimental samples, potentially different levels aggregation. instance C might give student data Q_ table classrooms. samples describe may disjoint, identical overlapping. Next uses lm() (propertee’s lm()-wrapper, lmitt()) calculate directly adjusted1 estimates intention--treat effect: Q may Q_, Q_ may describe aggregates units described Q; offset similar predict(cmod, newdata=Q, type=\"response\") given; weights Horwitz-Thompson, inverse probability assignment type. point m class lm, additional information tucked away m[['model']]: data frame special columns (weights) offset(cov_adj(cmod)). propertee package implements S4 class WeightedDesign extends base numeric vector type encodes information beyond unit weights necessary standard error calculations, arranges m[['model']][['(weights)']] type. note describes two classes appropriate m[['model']][['offset(cov_adj(cmod))']]: SandwichLayer, fallback option PreSandwichLayer, use call cov_adj() producing object able locate necessary information. Standard errors obtained subsequent steps, e.g. “uoa1” “uoa2” column names clusters(des), altuoa1 altuoa2 corresponding column names C, keys_data_frame rows aligned C columns including “uoa1” “uoa2”. Either way, m coerced class teeMod, acquired @Design slot information des, m[['model']] column offset(cov_adj(cmod)) class SandwichLayer. Together objects contain necessary additional information perform standard error calculations : attend structure design, recorded des; propagate errors fitting covariance model cmod standard errors reported treat * gender coefficients.","code":"des <- obs_design(treat ~ strata(district) + cluster(school, classroom),                   data =Q_) cmod <- glm(promotion ~ pretest + gender,             family=binomial(), data = C) m <- lm(promotion ~ treat * gender, data = Q,         offset = cov_adj(cmod),         weights = ate(des)) coef(m) # spits out effect estimates vcov(as.teeMod(m)) m <- as.teeMod(m,                        by=list(cmod=c(uoa1=altuoa1, uoa2=altuoa2))                ) vcov(m) m <- as.teeMod(m,                        by=keys_data_frame) vcov(m)"},{"path":"www.github.com/articles/sandwich_infrastructure.html","id":"formal-class-structure-proposal","dir":"Articles","previous_headings":"","what":"Formal class structure proposal","title":"Data structures to support standard error calculations for direct adjustment assisted by a prior covariance model","text":"Like existing class WeightedDesign, PreSandwichLayer SandwichLayer classes extend base numeric vector type, numeric vectors (predictions) @.Data slots. PreSandwichLayer SandwichLayer also @prediction_gradient slot, numeric matrix dimension Regarding .SandwichLayer(): Turning PreSandwichLayer, x, SandwichLayer amounts providing mapping rows model.matrix(x) sandwich::estfun(x) units assignment recorded des. mapping recorded @keys data frame, many rows model.matrix(x) columns storing unit--assignment (clustering) information well Boolean variable indicating whether unit assignments found des. mapping can effected via expand.model.frame(x, vars, <...>). =NULL, vars vector names unit--assignment variables given design, desvars say. Otherwise named character vector giving crosswalk, second argument expand.model.frame() [desvars], names switched column names inthe data frame expand.model.frame() returns favor desvars. order vcov.teeMod(m) work, following functions must methods applicable m@fitted_covariance_model: model.matrix(), sandwich::estfun(), sandwich::bread(). similar requirements sandwich::vcovHC().","code":"c(nrow(@.Data), length(coef(fitted_covariance_model)))"},{"path":"www.github.com/articles/sandwich_infrastructure.html","id":"basis-in-known-extensions-of-huber-white-setup-to-chained-estimators","dir":"Articles","previous_headings":"","what":"Basis in known extensions of Huber-White setup to chained estimators","title":"Data structures to support standard error calculations for direct adjustment assisted by a prior covariance model","text":"reference formulas stacked estimating equations Carroll, Ruppert, Stefanski Crainiceanu (2006, p.373), covariance model psi functions (estimating equations) \\(\\phi(\\tilde{\\mathbf{Y}}, \\alpha)\\) parameters \\(\\alpha\\), Fisher information estimating-equation covariance matrices \\(A_{11}\\) \\(B_{11}\\) respectively; direct adjustment model’s \\(\\psi(\\tilde{\\mathbf{Y}}, \\tau, \\alpha)\\), treat coefficients \\(\\tau\\), sandwich components \\(A_{22}\\) \\(B_{22}\\). (symbols “\\(\\phi()\\)”, “\\(\\psi()\\)” “\\(\\alpha\\)” used Carroll et al use , “\\(\\tau\\)” corresponds script-\\({B}\\).) take \\(\\) range units assignment (clusters) elements2. Carroll et al development missing \\(n^{-1}\\) factors right equations defining \\(A_{n,\\, 11}, \\ldots, B_{n,\\, 22}\\). avoid ambiguities mapping external subroutines’ understanding “\\(n\\)”3, let’s address error leaving displays -, striking leading \\(n^{-1}\\) factors display (.34) subsequent expression \\(\\mathrm{var}(\\hat{{B}})\\): .e., turn B matrices sums means. Carroll et al’s formulas \\(A_{11}\\), \\(A_{21}\\) \\(A_{22}\\) apply, although design-based standard errors call different calculations \\(B_{11}\\), \\(B_{12}\\) \\(B_{22}\\). (get around putting multidecker sandwich together, ’ll need cognizant fact Bs means sums, ready compensate fact divided different \\(ns\\) figuring means \\(A_{11}\\) \\(A_{22}\\), example.) Denote clusters/units assignment represented covariance quasiexperimental samples \\({C}\\) \\({Q}\\) respectively.","code":""},{"path":"www.github.com/articles/sandwich_infrastructure.html","id":"required-materials-for-se-calculations","dir":"Articles","previous_headings":"","what":"Required materials for SE calculations","title":"Data structures to support standard error calculations for direct adjustment assisted by a prior covariance model","text":"estimate variances covariances \\(\\tau\\), ’ll need assemble following materials. Sufficient information \\({C}\\) \\({Q}\\) identify intersection \\({C}\\cap{Q}\\), needed estimate \\(B_{21}\\); Matrices estimating functions \\(\\{\\phi(\\tilde{\\mathbf{Y}}_i; \\hat{\\alpha}): \\{C}\\cap{Q}\\}\\) \\(\\{\\psi(\\tilde{\\mathbf{Y}}_i, \\hat{\\tau}, \\hat{\\alpha}): \\{C}\\cap{Q}\\}\\), needed \\(B_{21}\\); quasiexperimental sample \\({Q}\\), matrices \\[\\nabla_{\\alpha} \\{\\sum_{j \\}\\psi(\\tilde{\\mathbf{Y}}_j, \\hat{\\tau}, {\\alpha}): \\{Q}\\} \\vert_{\\alpha=\\hat\\alpha},\\] corresponding \\(A_{21}\\), “\\(j \\\\)” means “elements \\(j\\) cluster \\(\\)” “\\(\\sum_{j \\} \\psi(\\tilde{\\mathbf{Y}}_j, \\hat{\\tau}, {\\alpha})\\)” interpreted mean “\\(\\psi(\\tilde{\\mathbf{Y}}_i, \\hat{\\tau}, {\\alpha})\\)” clustering; Estimates direct adjustment model’s “bread matrix” \\((n_{Q}^{-1} A_{22})^{-1} = \\{\\frac{1}{\\# {Q}}\\nabla_\\tau \\sum_{\\{Q}} \\mathbb{E}[\\psi(\\tilde{\\mathbf{Y}}_i, \\tau, \\hat{\\alpha})] \\vert_{\\tau=\\hat\\tau}\\}^{-1}\\), .e. inverse Fisher information w.r.t. \\(\\tau\\) , along “meat matrix” \\(n_{Q}^{-1} B_{22} = n_{Q}^{-1} \\mathrm{Cov}[\\sum_{\\{Q}} \\psi(\\tilde{\\mathbf{Y}}_i, {\\tau}, {\\alpha})]_{({\\tau}, {\\alpha})=(\\hat{\\tau}, \\hat{\\alpha})}\\); covariance model’s bread matrix \\((n_{C}^{-1} \\hat{}_{11})^{-1} = \\{n_{C}^{-1}\\sum_{\\{C}} \\nabla_\\alpha [\\phi(\\tilde{\\mathbf{Y}}_i; {\\alpha})]_{\\alpha=\\hat\\alpha}\\}^{-1}\\); covariance estimation conventional “model-based” setup , estimates covariance model’s B matrix \\(n_{C}^{-1}B_{11} = n_{C}^{-1} \\mathrm{Cov}[\\sum_{\\{C}}\\phi(\\tilde{\\mathbf{Y}}_i; {\\alpha})]_{\\alpha=\\hat\\alpha}\\) (“clustered” covariance estimate). (5), observed information \\(n_{C}^{-1}\\sum_{\\{C}} \\nabla_\\alpha [\\phi(\\tilde{\\mathbf{Y}}_i; {\\alpha})]_{\\alpha=\\hat\\alpha}\\) preferred “observed expected” information, \\(n_{C}^{-1}\\sum_{\\{C}} \\nabla_\\alpha \\mathbb{E} [\\phi(\\tilde{\\mathbf{Y}}_i; {\\alpha})]_{\\alpha=\\hat\\alpha}\\), observed information agnostic whether expectation calculated conditioning potential outcomes, ie finite population perspective, conditioning treatment assignment, model based perspective. special case quantile regression4, observed information isn’t ordinarily used standard error calculations, may take get. Regarding (6), \\(B_{11}\\) needed design-based standard errors, setting observations outside quasiexperimental sample contribute covariance model’s B matrix. quasiexperimental sample observations , ’ll access direct adjustment model fit. also \\(\\{\\phi(\\tilde{\\mathbf{Y}}_i; \\hat{\\alpha}): \\{Q}\\}\\) \\(\\{\\psi(\\tilde{\\mathbf{Y}}_i, \\hat{\\tau}, \\hat{\\alpha}): \\{Q}\\}\\), can use materials estimate \\(B_{12}\\) \\(B_{22}\\).","code":""},{"path":"www.github.com/articles/sandwich_infrastructure.html","id":"software-implementation-comments-on-16-above-including-contents-of-sandwichveganlayerlayerkit-objects","dir":"Articles","previous_headings":"","what":"Software implementation comments on 1–6 above, including contents of {Sandwich/Vegan}{Layer/LayerKit} objects","title":"Data structures to support standard error calculations for direct adjustment assisted by a prior covariance model","text":"1. SandwichLayer object s_l_o carries keys data frame identify rows model.matrix(s_l_o) units assignment (named separate Design object). association can many-one (one-many); required named units appear design. covmod won’t aware cluster associations, assembling info runtime calls trickery, well means users override trickery directly provide key variables design need. falsy value in_Q column keys indicates observation appearing Design object. 2. Estimating functions may need aggregated (summed) cluster level calculation \\(B_{21}\\). dedicated function calculate \\(B_{21}\\) cluster-aggregated estimating function matrices. 3. PreSandwichLayer SandwichLayer @prediction_gradient slot numeric matrix. matrix many rows entries .Data vector, many columns estimating equations. @prediction_gradient slot carries \\(\\{\\nabla_\\alpha f_{\\alpha}(\\tilde{\\mathbf{Y}}_j)|_\\alpha=\\hat\\alpha\\}\\), \\(j\\) ranges rows Q – elements clusters distinction exists – \\(f_\\alpha(\\mathbf{Y})\\) represents prediction data \\(\\mathbf{Y}\\) fitted model class(cov_mod) parameters \\(\\alpha\\). \\(\\psi()\\)’s use “predictions” covariance model, , first derivative covariance model predictions applied data \\({Q}\\) provide sufficient information covariance model complete calculation \\(\\{\\nabla_{\\alpha}  \\psi(\\tilde{\\mathbf{Y}}_i, \\hat{\\tau}, {\\alpha}) \\vert_{\\alpha=\\hat\\alpha}: \\{Q}\\}\\). glm similarly typed objects cmod, predictions joint function family(cmod) model.matrix generated process creating predictions cmod. 4. SandwichLayer class isn’t implicated (4). can take extant calculations direct adjustment model’s information matrix, proviso keep track whatever scaling calculations may applied. design-based SEs ’ll need B matrix calculation. model-based SEs can plug extant routines \\(B_{22}\\) also, careful ensure clustering units assignment (named Design object). Scaling matrices default conventions sandwich package. (haven’t considered whether use HC0–3 etc \\(B_{22}\\) calls corresponding adjustment estimation \\(B_{21}\\) /\\(B_{11}\\), whether heuristics animating adjustments make sense context.) 5. sandwich::bread() used retrieve \\(A_{11}^{-1}\\). can take extant calculations covariance model’s information matrix, defaulting scaling conventions implemented sandwich package. 6. sandwich::meatCL() used retrieve \\(B_{11}\\). now try implement HC0 & HC1. (haven’t considered whether use HC0–3 etc \\(B_{11}\\) calls corresponding adjustment estimation \\(B_{21}\\) /\\(B_{22}\\), whether heuristics animating adjustments make sense context.)","code":""},{"path":[]},{"path":"www.github.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Josh Errickson. Maintainer, author. Josh Wasserman. Author. Mark Fredrickson. Contributor. Adam Sales. Contributor. Xinhe Wang. Contributor. Ben Hansen. Author.","code":""},{"path":"www.github.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Errickson J, Wasserman J, Hansen B (2024). propertee: Design-Informed Direct Adjustment Optional Prior Covariance Adjustment. R package version 0.4.1, https://github.com/benbhansen-stats/propertee.","code":"@Manual{,   title = {propertee: Design-Informed Direct Adjustment with Optional Prior Covariance Adjustment},   author = {Josh Errickson and Josh Wasserman and Ben Hansen},   year = {2024},   note = {R package version 0.4.1},   url = {https://github.com/benbhansen-stats/propertee}, }"},{"path":"www.github.com/index.html","id":"propertee-prognostic-regression-offsets-with-propagation-of-errors-for-treatment-effect-estimation-","dir":"","previous_headings":"","what":"Design-Informed Direct Adjustment with Optional Prior Covariance Adjustment","title":"Design-Informed Direct Adjustment with Optional Prior Covariance Adjustment","text":"propertee enables flexible direct adjustment design-informed standard errors optional prior covariance adjustment. Random trials often utilize units assignment blocking assigning treatment status way simplify implementation. design information must utilized future analyses. Using propertee, user can generate Design object keep track design structure. (Also supported observational studies (obs_design) regression discontinuity designs (rdd_design requires forcing() variable well.) order pass design information model using weights= argument, functions ett() ate() used convert Design numeric vector Design object attribute. Note Design created teacher level data (teacherdata), analysis carried student level (studentdata); ate() (alternative ett()) expand weights appropriately. Optionally, can also include covariance adjustment model cov_adj() function.","code":"des <- rct_design(txt ~ unit_of_assignment(teacher) + block(school), data = teacherdata) lm(y ~ txt, data = studentdata, weights = ate(des)) covadjmod <- lm(y ~ x1 + x2 + ..., data = studentdata, subset = !txt) lm(y ~ txt, studentdata, weights = ett(des),    offset = cov_adj(covadjmod, data = studentdata) )"},{"path":"www.github.com/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Design-Informed Direct Adjustment with Optional Prior Covariance Adjustment","text":"may use RStudio develop propertee, opening propertee.Rproj file. suggest ensure required dependencies installed running prefer changes include unit tests demonstrating problem showing new feature added. test suite uses testthat package write run tests. (Please ensure latest version testthat (least v0.11.0), older versions stored tests different directory, may test properly.) See tests/testthat directory examples. can run test suite via Build -> Test Package. New features include inline Roxygen documentation. can generate .Rd documents Roxygen code using Build -> Document, using Make describe . Finally, can use Build -> Build Reload Build -> Clean Rebuild load updated version propertee current RStudio session. Alternatively, install developed version permanently, use Build -> Build Binary Version, followed can revert back current CRAN version prefer use RStudio, can develop using Make. make test: Run full test suite. make document: Update documentation Roxygen inline comments. make interactive: Start interactive session propertee loaded. (make interactive-emacs starts session inside emacs.) make check: Run R CMD check package make build: Build binary package. make vignette: Builds vignettes vignettes/ directory make clean: Removes files built make vignette, make document make    check. generally necessary, can useful debugging. change ready, make pull request github.","code":"devtools::install_deps(dependencies = TRUE) install.packages(\"../propertee_VERSION.tgz\", repo=NULL) remove.packages(\"propertee\") install.packages(\"propertee\")"},{"path":"www.github.com/index.html","id":"white-space-changes","dir":"","previous_headings":"Contributing","what":"White space changes","title":"Design-Informed Direct Adjustment with Optional Prior Covariance Adjustment","text":"ease searches commit history: Commit white space changes occur lines substantive changes. Avoid committing trailing white spaces. RStudio, options enable automatically removing white space end lines trailing whitespaces Settings, Code -> Saving. emacs, can remove white spaces ends lines M-x delete-trailing-whitespace. automatically whenever save, add following init file: remove trailing lines saving, can also add :","code":"(add-hook 'before-save-hook (lambda ()                              (delete-trailing-whitespace))) (setq delete-trailing-lines t)"},{"path":"www.github.com/index.html","id":"referring-to-functions","dir":"","previous_headings":"Contributing","what":"Referring to functions","title":"Design-Informed Direct Adjustment with Optional Prior Covariance Adjustment","text":"documentation refers another function (internal package otherwise), please include trailing (), help pkgdown provide appropriate link (see https://pkgdown.r-lib.org/articles/linking.html). E.g. \\code{lm()} \\code{cov_adj()} \\code{lme4::lmer()}.","code":""},{"path":"www.github.com/index.html","id":"vignettes-or-simulations","dir":"","previous_headings":"Contributing","what":"Vignettes or simulations","title":"Design-Informed Direct Adjustment with Optional Prior Covariance Adjustment","text":"Vignettes simulations go /vignettes/ folder. Anything built R check (especially anything builds slowly, introduces dependencies specified DESCRIPTION) go /vignettes/--cran. (--cran folder .Rbuildignore file.) Note .Rmd files /vignettes/ get built building reference site. exclude .Rmd file, needs start “_“. E.g. myslowvignette.Rmd -> _myslowvignette.Rmd.","code":""},{"path":"www.github.com/reference/AssignedAliases.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain Treatment from Design — assigned","title":"Obtain Treatment from Design — assigned","text":"passing lm object lmitt(), extract use treatment variable specified Design.","code":""},{"path":"www.github.com/reference/AssignedAliases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain Treatment from Design — assigned","text":"","code":"assigned(design = NULL, data = NULL, dichotomy = NULL)  adopters(design = NULL, data = NULL, dichotomy = NULL)  a.(design = NULL, data = NULL, dichotomy = NULL)  z.(design = NULL, data = NULL, dichotomy = NULL)"},{"path":"www.github.com/reference/AssignedAliases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain Treatment from Design — assigned","text":"design Optional Design. Design identified model (usually neither weights (ate() ett()) covariate adjustment model (cov_adj()) found), Design can passed diretly. data Optional data set. default assigned() attempt identify appropriate data, fails (want overwrite ), can pass data . dichotomy optional; formula defining dichotomy treatment variable already 0/1. See details information. ett() ate() called within lmitt() call specifies dichotomy argument, dichotomy used argument specified.","code":""},{"path":"www.github.com/reference/AssignedAliases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain Treatment from Design — assigned","text":"treatment variable placed regression formula.","code":""},{"path":"www.github.com/reference/AssignedAliases.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain Treatment from Design — assigned","text":"passing lm object lmitt(), treatment variable formula passed lm() needs identifiable. Rather placing treatment variable directly formula, use one functions, allow lmitt() identify treatment variable. keep formula lm() call concise, instead passing design data arguments functions, one can pass WeightedDesign object weights argument lm() call SandwichLayer object offset argument. Alternatively, can pass design data arguments. assigned() can used situation, useful scenarios treatment variable non-binary Design contains Dichotomy. example, say q 3-level ordinal treatment variable, binary comparison interest captured dichotomy = q == 3 ~ q < 3. fit model including q predictor, e.g. lm(y ~ q, ...), lm treat q full ordinal variable. hand, calling lm(y ~ assigned(), weights = ate(des), ...), assigned() generate appropriate binary variable allow estimation treatment effects. called outside model call without data argument, extract treatment design. goal, treatment() function better suited purpose.","code":""},{"path":"www.github.com/reference/AssignedAliases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain Treatment from Design — assigned","text":"","code":"data(simdata) des <- obs_design(z ~ uoa(uoa1, uoa2), data = simdata) mod <- lm(y ~ assigned(), data = simdata, weights = ate(des)) lmittmod <- lmitt(mod) summary(lmittmod) #>  #> Call: #> lmitt(mod) #>  #>  Coefficients : #>             Estimate Std. Error t value Pr(>|t|) #> (Intercept)  -0.0090     0.1734  -0.052    0.959 #> assigned()    0.1205     0.2301   0.524    0.603 #> Std. Error calculated via type \"CR0\" #>"},{"path":"www.github.com/reference/DesignSpecials.html","id":null,"dir":"Reference","previous_headings":"","what":"Special terms in Design creation formula — unit_of_assignment","title":"Special terms in Design creation formula — unit_of_assignment","text":"special functions used definition Design objects. identify units assignment, blocks forcing variables. never used outside formula argument obs_design(), rct_design(), rd_design().","code":""},{"path":"www.github.com/reference/DesignSpecials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Special terms in Design creation formula — unit_of_assignment","text":"","code":"unit_of_assignment(...)  unitid(...)  cluster(...)  uoa(...)  block(...)  forcing(...)"},{"path":"www.github.com/reference/DesignSpecials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Special terms in Design creation formula — unit_of_assignment","text":"... number variables length.","code":""},{"path":"www.github.com/reference/DesignSpecials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Special terms in Design creation formula — unit_of_assignment","text":"variables appropriate labels. use outside inclusion formula argument obs_design(), rct_design(), rd_design()","code":""},{"path":"www.github.com/reference/DesignSpecials.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Special terms in Design creation formula — unit_of_assignment","text":"functions use outside formula creating Design. unit_of_assignment, uoa, cluster unitid synonyms; must include one one Design. choice use impact analysis, output name stored element Design. Accessors/ replacers (units_of_assignment(), unitids(), clusters()) respect choice made point creation Design, appropriate function work. See rct_design(), obs_design(), rd_design() examples usage.","code":""},{"path":"www.github.com/reference/Design_extractreplace.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessors and Replacers for Design objects — treatment","title":"Accessors and Replacers for Design objects — treatment","text":"Allows access elements define Design, enabling extraction replacement.","code":""},{"path":"www.github.com/reference/Design_extractreplace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessors and Replacers for Design objects — treatment","text":"","code":"treatment(x, newdata = NULL, dichotomy = NULL, by = NULL, ...)  # S4 method for Design treatment(x, newdata = NULL, dichotomy = NULL, by = NULL, ...)  treatment(x) <- value  # S4 method for Design treatment(x) <- value  units_of_assignment(x, newdata = NULL, by = NULL)  # S4 method for Design units_of_assignment(x, newdata = NULL, by = NULL)  units_of_assignment(x) <- value  # S4 method for Design units_of_assignment(x) <- value  clusters(x, newdata = NULL, by = NULL)  # S4 method for Design clusters(x, newdata = NULL, by = NULL)  clusters(x) <- value  # S4 method for Design clusters(x) <- value  unitids(x)  # S4 method for Design unitids(x)  unitids(x) <- value  # S4 method for Design unitids(x) <- value  blocks(x, newdata = NULL, by = NULL)  # S4 method for Design blocks(x, newdata = NULL, by = NULL)  blocks(x) <- value  # S4 method for Design blocks(x) <- value  has_blocks(x)  forcings(x, newdata = NULL, by = NULL)  # S4 method for Design forcings(x, newdata = NULL, by = NULL)  forcings(x) <- value  # S4 method for Design forcings(x) <- value"},{"path":"www.github.com/reference/Design_extractreplace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessors and Replacers for Design objects — treatment","text":"x Design object newdata optional; additional data.frame. passed, unit assignment variable found newdata, requested variable type unit newdata returned. See argument name unit assignment differs. dichotomy optional; formula specifying dichotomize non-binary treatment variable. See Details section ett() att() help pages information specifying formula optional; named vector list connecting names unit assignment/unitid/cluster variables x unit assignment/unitid/cluster variables data. Names represent variables x; values represent variables newdata. needed variable names differ. ... ignored. value replacement. Either vector/matrix appropriate dimension, named data.frame renaming variable well. See Details.","code":""},{"path":"www.github.com/reference/Design_extractreplace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessors and Replacers for Design objects — treatment","text":"data.frame containing requested variable, updated Design. treatment() works slightly differently, see Details.","code":""},{"path":"www.github.com/reference/Design_extractreplace.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accessors and Replacers for Design objects — treatment","text":"treatment(), argument binary FALSE, treatment variable passed Design returned one-column data.frame regardless whether binary x dichotomy dichotomy passed, binary one-column data.frame returned. binary TRUE, unless Design binary treatment, treatment() error. binary \"ifany\", return original treatment case. one-column data.frame returned treatment() named entered Design creation, dichotomy passed, column name \"__z\" try avoid name conflicts. value using replacers, replacement must number rows Design (number units assignment). number columns can differ (e.g. Design defined two variable uniquely identifying blocks, can replace single variable uniquely identifying blocks, long respects restrictions.) replacement value data.frame, name columns used new variable names. replacement matrix vector, original names retained. reducing number variables (e.g., moving two variables uniquely identifying single variable), appropriate number variable names retained. increasing number variables, data.frame names must provided.","code":""},{"path":"www.github.com/reference/Design_extractreplace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Accessors and Replacers for Design objects — treatment","text":"","code":"data(simdata) des <- obs_design(z ~ unit_of_assignment(uoa1, uoa2), data = simdata) blocks(des) # empty #> data frame with 0 columns and 10 rows blocks(des) <- data.frame(blks = c(1, 1, 2, 2, 3, 3, 4, 4, 5, 5)) blocks(des) #>    blks #> 1     1 #> 2     1 #> 3     2 #> 4     2 #> 5     3 #> 6     3 #> 7     4 #> 8     4 #> 9     5 #> 10    5 blocks(des) <- c(5, 5, 4, 4, 3, 3, 2, 2, 1, 1) blocks(des) # notice that variable is not renamed #>    blks #> 1     5 #> 2     5 #> 3     4 #> 4     4 #> 5     3 #> 6     3 #> 7     2 #> 8     2 #> 9     1 #> 10    1"},{"path":"www.github.com/reference/Design_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a Design object with the given specifications. — rct_design","title":"Generates a Design object with the given specifications. — rct_design","text":"Generate randomized control treatment Design (rct_design()), observational Design (obs_design()), regression discontinuity Design (rd_design()).","code":""},{"path":"www.github.com/reference/Design_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a Design object with the given specifications. — rct_design","text":"","code":"rct_design(formula, data, subset = NULL, na.fail = TRUE)  rd_design(formula, data, subset = NULL, na.fail = TRUE)  obs_design(formula, data, subset = NULL, na.fail = TRUE)"},{"path":"www.github.com/reference/Design_objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a Design object with the given specifications. — rct_design","text":"formula formula defining Design components. See Details specification. data data set build Design. Note data need used estimate treatment effect; rather data passed contain information units treatment assignment (opposed units analysis). subset optional, subset data creating Design object na.fail TRUE (default), missing data found variables specified formula (excluding treatment) trigger error. FALSE, non-complete cases dropped creation Design","code":""},{"path":"www.github.com/reference/Design_objects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a Design object with the given specifications. — rct_design","text":"Design object requested type use analysis.","code":""},{"path":"www.github.com/reference/Design_objects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates a Design object with the given specifications. — rct_design","text":"formula must include exactly one unit_of_assignment() identify units assignment (one variables). (uoa, cluster, unitid synonyms unit_of_assignment; choice impact analysis.) defining rd_design, formula must also include forcing() entry. formula may optionally include block() well. can take multiple variables, e.g. pass household ID individual ID unit assignment, use uoa(hhid,   iid) uoa(hhid) + uoa(iid). treatment variable passed left-hand side formula can either logical, numeric, character. anything else, attempts conversion one types (example, factor ordered converted numeric levels numeric, otherwise character). treatment logical numeric values 0 1, order generate weights ate() ett(), dichotomy argument must used functions identify treatment control groups. See ett() details specifying dichotomy.","code":""},{"path":"www.github.com/reference/Design_objects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a Design object with the given specifications. — rct_design","text":"","code":"data(simdata) des <- rct_design(z ~ unit_of_assignment(uoa1, uoa2) + block(bid),                   data = simdata)  data(schooldata) des <- obs_design(treatment ~ unit_of_assignment(schoolid) + block(state),                   data = schooldata)"},{"path":"www.github.com/reference/Design_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Design Structure Information — get_structure","title":"Design Structure Information — get_structure","text":"Obtaining data.frame encodes design information.","code":""},{"path":"www.github.com/reference/Design_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Design Structure Information — get_structure","text":"","code":"get_structure(design)  # S4 method for DesignStructure show(object)"},{"path":"www.github.com/reference/Design_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Design Structure Information — get_structure","text":"design Design object object DesignStructure object, typically output get_structure()","code":""},{"path":"www.github.com/reference/Design_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Design Structure Information — get_structure","text":"DesignStructure object containing structure design data.frame.","code":""},{"path":"www.github.com/reference/Design_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Design Structure Information — get_structure","text":"","code":"data(simdata) des <- rct_design(z ~ uoa(uoa1, uoa2) + block(bid), data = simdata) get_structure(des) #>    z uoa1 uoa2 bid #> 1  0    1    1   1 #> 2  0    1    2   1 #> 3  0    2    1   1 #> 4  1    2    2   1 #> 5  0    3    1   2 #> 6  0    3    2   2 #> 7  1    4    1   2 #> 8  0    4    2   3 #> 9  1    5    1   3 #> 10 1    5    2   3"},{"path":"www.github.com/reference/Design_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing Design objects — summary.Design","title":"Summarizing Design objects — summary.Design","text":"summary() method class Design.","code":""},{"path":"www.github.com/reference/Design_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing Design objects — summary.Design","text":"","code":"# S3 method for Design summary(object, ..., treatment_binary = TRUE)  # S3 method for summary.Design print(x, ..., max_unit_print = 3)"},{"path":"www.github.com/reference/Design_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing Design objects — summary.Design","text":"object Design object, usually result call rct_design(), obs_design(), rd_design(). ... Ignored treatment_binary treatment dichotomized object contains dichotomy? Ignored object contain dichotomy. x summary.Design object, usually result call summary.Design() max_unit_print Maximum number treatment levels print treatment table","code":""},{"path":"www.github.com/reference/Design_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing Design objects — summary.Design","text":"Design summary.Designobject, invisibly","code":""},{"path":"www.github.com/reference/Design_var_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Variable Names from Design — var_table","title":"Extract Variable Names from Design — var_table","text":"Methods extract variable names elements structure Design (e.g. treatment, unit analysis, etc)","code":""},{"path":"www.github.com/reference/Design_var_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Variable Names from Design — var_table","text":"","code":"var_table(design, compress = TRUE, report_all = FALSE)  var_names(design, type)"},{"path":"www.github.com/reference/Design_var_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Variable Names from Design — var_table","text":"design Design object compress multiple variables compressed comma-separated string? Default TRUE. FALSE, multiple columns can created instead. report_all report possible structures even exist Design? Default FALSE. type one \"t\", \"u\", \"b\", \"f\"; \"treatment\", \"unit_of_assignment\", \"block\", \"forcing\" respectively","code":""},{"path":"www.github.com/reference/Design_var_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Variable Names from Design — var_table","text":"var_table() returns requested table. var_names() returns vector variable names.","code":""},{"path":"www.github.com/reference/Design_var_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Variable Names from Design — var_table","text":"compress TRUE, result always two columns. FALSE, result number columns equal largest number variables particular role, plus one. E.g., call rct_design(z ~ unitid(, b, c, d) ... 4+1=5 columns output matrix compress = FALSE. report_all TRUE, matrix guaranteed 3 rows (design RCT Obs) 4 rows (design RD), empty variable entries appropriate. FALSE, matrix minimum 2 rows (treatment unit assignment/unitid/cluster), additional rows blocks forcing included Design.","code":""},{"path":"www.github.com/reference/Design_var_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Variable Names from Design — var_table","text":"","code":"des <- rct_design(z ~ uoa(uoa1, uoa2) + block(bid), data = simdata) var_table(des) #>      Structure            Variables    #> [1,] \"Treatment\"          \"z\"          #> [2,] \"Unit of Assignment\" \"uoa1, uoa2\" #> [3,] \"Block\"              \"bid\"        var_table(des, compress = FALSE) #>      Structure            Variable 1 Variable 2 #> [1,] \"Treatment\"          \"z\"        NA         #> [2,] \"Unit of Assignment\" \"uoa1\"     \"uoa2\"     #> [3,] \"Block\"              \"bid\"      NA         var_names(des, \"t\") #> [1] \"z\" var_names(des, \"u\") #> [1] \"uoa1\" \"uoa2\" var_names(des, \"b\") #> [1] \"bid\""},{"path":"www.github.com/reference/PreSandwichLayer.show.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a PreSandwichLayer or SandwichLayer — show,PreSandwichLayer-method","title":"Show a PreSandwichLayer or SandwichLayer — show,PreSandwichLayer-method","text":"Display information PreSandwichLayer SandwichLayer object","code":""},{"path":"www.github.com/reference/PreSandwichLayer.show.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a PreSandwichLayer or SandwichLayer — show,PreSandwichLayer-method","text":"","code":"# S4 method for PreSandwichLayer show(object)"},{"path":"www.github.com/reference/PreSandwichLayer.show.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a PreSandwichLayer or SandwichLayer — show,PreSandwichLayer-method","text":"object PreSandwichLayer SandwichLayer object","code":""},{"path":"www.github.com/reference/PreSandwichLayer.show.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a PreSandwichLayer or SandwichLayer — show,PreSandwichLayer-method","text":"invisible copy object","code":""},{"path":"www.github.com/reference/PreSandwichLayer.subset.html","id":null,"dir":"Reference","previous_headings":"","what":"PreSandwichLayer and SandwichLayer subsetting — subset,PreSandwichLayer-method","title":"PreSandwichLayer and SandwichLayer subsetting — subset,PreSandwichLayer-method","text":"Return subset PreSandwichLayer SandwichLayer meets conditions.","code":""},{"path":"www.github.com/reference/PreSandwichLayer.subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PreSandwichLayer and SandwichLayer subsetting — subset,PreSandwichLayer-method","text":"","code":"# S4 method for PreSandwichLayer subset(x, subset)  # S4 method for PreSandwichLayer [(x, i)"},{"path":"www.github.com/reference/PreSandwichLayer.subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PreSandwichLayer and SandwichLayer subsetting — subset,PreSandwichLayer-method","text":"x PreSandwichLayer SandwichLayer object subset Logical vector identifying values keep drop indices specifying elements extract replace. See help(\"[\") details.","code":""},{"path":"www.github.com/reference/PreSandwichLayer.subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PreSandwichLayer and SandwichLayer subsetting — subset,PreSandwichLayer-method","text":"x subset subset ","code":""},{"path":"www.github.com/reference/STARdata.html","id":null,"dir":"Reference","previous_headings":"","what":"STAR data — STARdata","title":"STAR data — STARdata","text":"Tennessee’s Student-Teacher Achievement Ratio (STAR) data set. copy data AER::STAR.","code":""},{"path":"www.github.com/reference/STARdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"STAR data — STARdata","text":"","code":"STARdata"},{"path":"www.github.com/reference/STARdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"STAR data — STARdata","text":"data.frame 11,598 rows 47 columns.","code":""},{"path":"www.github.com/reference/WeightCreators.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Direct Adjusted Weights for Treatment Effect Estimation — ett","title":"Generate Direct Adjusted Weights for Treatment Effect Estimation — ett","text":"primarily used inside models. See Details. ate() creates weights estimate Average Treatment Effect ett() creates weights estimate Effect Treatment Treated.","code":""},{"path":"www.github.com/reference/WeightCreators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Direct Adjusted Weights for Treatment Effect Estimation — ett","text":"","code":"ett(design = NULL, dichotomy = NULL, by = NULL, data = NULL)  ate(design = NULL, dichotomy = NULL, by = NULL, data = NULL)"},{"path":"www.github.com/reference/WeightCreators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Direct Adjusted Weights for Treatment Effect Estimation — ett","text":"design optional; Design object created one rct_design(), rd_design(), obs_design(). dichotomy optional; formula defining dichotomy treatment variable already 0/1. See details information. ett() ate() called within lmitt() call specifies dichotomy argument, dichotomy used argument specified. optional; named vector list connecting names unit assignment/ variables design unit assignment/unitid/cluster variables data. Names represent variables Design; values represent variables data. needed variable names differ. data optional; data analysis performed . May excluded functions included weights argument model.","code":""},{"path":"www.github.com/reference/WeightCreators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Direct Adjusted Weights for Treatment Effect Estimation — ett","text":"WeightedDesign object, vector numeric weights","code":""},{"path":"www.github.com/reference/WeightCreators.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Direct Adjusted Weights for Treatment Effect Estimation — ett","text":"functions primarily used weight argument lmitt() orlm(). arguments optional used within functions. used , design data must provided. Design blocks, weights generated function ratio number treated units block versus total number units block. blocks ratio 0 1 (, units block treatment status), weights 0. effect removes target population block basis estimating either means treatment means control. block missing given observation, weight 0 applied. dichotomy specified formula consisting conditional statement left-hand side (identifying treatment levels associated \"treatment\") right hand side (identifying treatment levels associated \"control\"). example, treatment variable called dose doses 250 considered treatment, might write: dichotomy(des) <- dose > 250 ~ dose <= 250 period (.) can used assign units assignment. example, written treatment regime either dichotomy(des) <- dose > 250 ~ . dichotomy(des) <- . ~ dose <= 250 dichotomy formula supports Relational Operators (see Comparison), Logical Operators (see Logic), %% (see match()). conditionals need assign values treatment control treatment, example, dose > 300 ~ dose < 200 assign 200 <= dose <= 300 either treatment control. equivalent manually generating binary variable NA whenever dose 200 300. Standard errors reflect sizes comparison groups specified dichotomy. Code computation weights contributed Tim Lycurgus.","code":""},{"path":"www.github.com/reference/WeightCreators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Direct Adjusted Weights for Treatment Effect Estimation — ett","text":"","code":"data(simdata) des <- rct_design(z ~ unit_of_assignment(uoa1, uoa2), data = simdata) summary(lmitt(y ~ 1, data = simdata, design = des, weights = ate())) #>  #> Call: #> lmitt(y ~ 1, data = simdata, design = des, weights = ate()) #>  #>  Treatment Effects : #>    Estimate Std. Error t value Pr(>|t|) #> z.   0.1205     0.2301   0.524    0.603 #> Std. Error calculated via type \"CR0\" #>"},{"path":"www.github.com/reference/WeightedDesign.subset.html","id":null,"dir":"Reference","previous_headings":"","what":"WeightedDesign subsetting — subset,WeightedDesign-method","title":"WeightedDesign subsetting — subset,WeightedDesign-method","text":"Provides functionality subset weights WeightedDesign object.","code":""},{"path":"www.github.com/reference/WeightedDesign.subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WeightedDesign subsetting — subset,WeightedDesign-method","text":"","code":"# S4 method for WeightedDesign subset(x, subset)  # S4 method for WeightedDesign [(x, i)"},{"path":"www.github.com/reference/WeightedDesign.subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WeightedDesign subsetting — subset,WeightedDesign-method","text":"x WeightedDesign object subset Logical vector identifying values keep drop indices specifying elements extract replace. See help(\"[\") details.","code":""},{"path":"www.github.com/reference/WeightedDesign.subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"WeightedDesign subsetting — subset,WeightedDesign-method","text":"WeightedDesign object subsetted version x.","code":""},{"path":"www.github.com/reference/WeightedDesignOps.html","id":null,"dir":"Reference","previous_headings":"","what":"WeightedDesign Operations — +,WeightedDesign,numeric-method","title":"WeightedDesign Operations — +,WeightedDesign,numeric-method","text":"Algebraic operators WeightedDesign objects numeric vectors. WeightedDesigns support addition subtraction.","code":""},{"path":"www.github.com/reference/WeightedDesignOps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WeightedDesign Operations — +,WeightedDesign,numeric-method","text":"","code":"# S4 method for WeightedDesign,numeric +(e1, e2)  # S4 method for numeric,WeightedDesign +(e1, e2)  # S4 method for WeightedDesign,numeric -(e1, e2)  # S4 method for numeric,WeightedDesign -(e1, e2)  # S4 method for WeightedDesign,numeric *(e1, e2)  # S4 method for numeric,WeightedDesign *(e1, e2)  # S4 method for WeightedDesign,numeric /(e1, e2)  # S4 method for numeric,WeightedDesign /(e1, e2)"},{"path":"www.github.com/reference/WeightedDesignOps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WeightedDesign Operations — +,WeightedDesign,numeric-method","text":"e1, e2 WeightedDesign numeric objects","code":""},{"path":"www.github.com/reference/WeightedDesignOps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"WeightedDesign Operations — +,WeightedDesign,numeric-method","text":"WeightedDesign object","code":""},{"path":"www.github.com/reference/WeightedDesignOps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"WeightedDesign Operations — +,WeightedDesign,numeric-method","text":"primarily used either combine weights via multiplication, invert weights. Addition subtraction supported produce errors.","code":""},{"path":"www.github.com/reference/areg.center.html","id":null,"dir":"Reference","previous_headings":"","what":"Group-center akin to Stata's areg — areg.center","title":"Group-center akin to Stata's areg — areg.center","text":"Stata documentation: areg begins recalculating Y X mean 0 within groups specified absorb(). overall mean variable added back .","code":""},{"path":"www.github.com/reference/areg.center.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group-center akin to Stata's areg — areg.center","text":"","code":"areg.center(mm, grp, wts = NULL, grand_mean_center = FALSE)"},{"path":"www.github.com/reference/areg.center.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group-center akin to Stata's areg — areg.center","text":"mm Matrix variables center grp Group center wts Optional weights grand_mean_center Optional center output mean(var)","code":""},{"path":"www.github.com/reference/areg.center.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group-center akin to Stata's areg — areg.center","text":"Vector group-centered values","code":""},{"path":"www.github.com/reference/as.SandwichLayer.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a PreSandwichLayer to a SandwichLayer with a Design object — as.SandwichLayer","title":"Convert a PreSandwichLayer to a SandwichLayer with a Design object — as.SandwichLayer","text":".SandwichLayer() uses Design object passed design argument populate slots SandwichLayer object PreSandwichLayer sufficient information .","code":""},{"path":"www.github.com/reference/as.SandwichLayer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a PreSandwichLayer to a SandwichLayer with a Design object — as.SandwichLayer","text":"","code":"as.SandwichLayer(x, design, by = NULL, Q_data = NULL)"},{"path":"www.github.com/reference/as.SandwichLayer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a PreSandwichLayer to a SandwichLayer with a Design object — as.SandwichLayer","text":"x PreSandwichLayer object design Design object optional; string named vector unique identifier columns data used create design data used fit covariance adjustment model. Default NULL, case unit assignment columns used identification (even uniquely identify units observation). named vector provided, names represent variables data used create design, values represent variables covariance adjustment data. Q_data dataframe direct adjustment sample, needed generate keys slot SandwichLayer object. Defaults NULL, case NULL, data used create design used, NULL, appropriate data call stack (passed arguments cov_adj() lmitt.formula(), example) used.","code":""},{"path":"www.github.com/reference/as.SandwichLayer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a PreSandwichLayer to a SandwichLayer with a Design object — as.SandwichLayer","text":"SandwichLayer object","code":""},{"path":"www.github.com/reference/as_lmitt.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert lm object into teeMod — as.lmitt","title":"Convert lm object into teeMod — as.lmitt","text":"Converts output lm() teeMod object can used properly account standard errors.","code":""},{"path":"www.github.com/reference/as_lmitt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert lm object into teeMod — as.lmitt","text":"","code":"as.lmitt(x, design = NULL)  as.teeMod(x, design = NULL)"},{"path":"www.github.com/reference/as_lmitt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert lm object into teeMod — as.lmitt","text":"x lm object weights containing WeightedDesign, offset cov_adj(). design Optional, explicitly specify Design used. Design specified elsewhere x (e.g. passed argument ate(), ett(), cov_adj() assigned()) found automatically need passed well. (different Design objects passed (either lm weights covariance adjustment, argument), error produced.)","code":""},{"path":"www.github.com/reference/as_lmitt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert lm object into teeMod — as.lmitt","text":"teeMod object","code":""},{"path":"www.github.com/reference/as_lmitt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert lm object into teeMod — as.lmitt","text":"formula x created must include treatment identifier (e.g. assigned()).","code":""},{"path":"www.github.com/reference/bread.teeMod.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract bread matrix from a teeMod model fit — bread.teeMod","title":"Extract bread matrix from a teeMod model fit — bread.teeMod","text":"S3method sandwich::bread extracts bread direct adjustment model sandwich covariance matrix.","code":""},{"path":"www.github.com/reference/bread.teeMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract bread matrix from a teeMod model fit — bread.teeMod","text":"","code":"# S3 method for teeMod bread(x, ...)"},{"path":"www.github.com/reference/bread.teeMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract bread matrix from a teeMod model fit — bread.teeMod","text":"x fitted teeMod model ... arguments passed methods","code":""},{"path":"www.github.com/reference/bread.teeMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract bread matrix from a teeMod model fit — bread.teeMod","text":"\\(2\\times 2\\) matrix corresponding intercept treatment variable direct adjustment model","code":""},{"path":"www.github.com/reference/bread.teeMod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract bread matrix from a teeMod model fit — bread.teeMod","text":"function thin wrapper around .get_tilde_a22_inverse().","code":""},{"path":"www.github.com/reference/c-WeightedDesign-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate weights — c,WeightedDesign-method","title":"Concatenate weights — c,WeightedDesign-method","text":"Given several variations weights generated single Design, combine single weight.","code":""},{"path":"www.github.com/reference/c-WeightedDesign-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate weights — c,WeightedDesign-method","text":"","code":"# S4 method for WeightedDesign c(x, ..., warn_dichotomy_not_equal = FALSE)"},{"path":"www.github.com/reference/c-WeightedDesign-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate weights — c,WeightedDesign-method","text":"x, .. WeightedDesign object, typically created ate() ett() ... number additional WeightedDesign objects equivalent Design x eachother warn_dichotomy_not_equal FALSE (default), WeightedDesigns considered equivalent even dichotomy differs. TRUE, warning produced.","code":""},{"path":"www.github.com/reference/c-WeightedDesign-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate weights — c,WeightedDesign-method","text":"numeric vector weights concatenated input order.","code":""},{"path":"www.github.com/reference/c-WeightedDesign-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Concatenate weights — c,WeightedDesign-method","text":"Concatenating WeightedDesign objects c() requires individual WeightedDesign objects come Design target (e.g created ate() created ett(), mixing--matching). arguments c() must WeightedDesign. WeightedDesign objects may concatenated together even without @dichotomy slot. procedure prompts warning differing dichotomies argument warn_dichotomy_not_equal set TRUE.","code":""},{"path":"www.github.com/reference/c-WeightedDesign-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate weights — c,WeightedDesign-method","text":"","code":"data(simdata) des <- rct_design(z ~ unit_of_assignment(uoa1, uoa2), data = simdata) w1 <- ate(des, data = simdata[1:30,]) w2 <- ate(des, data = simdata[31:40,]) w3 <- ate(des, data = simdata[41:50,]) c_w <- c(w1, w2, w3) c(length(w1), length(w2), length(w3), length(c_w)) #> [1] 30 10 10 50  des <- rct_design(dose ~ unit_of_assignment(uoa1, uoa2), data = simdata) w1 <- ate(des, data = simdata[1:10, ], dichotomy = dose >= 300 ~ .) w2 <- ate(des, data = simdata[11:30, ], dichotomy = dose >= 200 ~ .) w3 <- ate(des, data = simdata[31:50, ], dichotomy = dose >= 100 ~ .) c_w <- c(w1, w2, w3)"},{"path":"www.github.com/reference/confint.teeMod.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence intervals with standard errors provided by vcov.teeMod() — confint.teeMod","title":"Confidence intervals with standard errors provided by vcov.teeMod() — confint.teeMod","text":"S3method stats::confint uses standard errors computed using vcov.teeMod(). Additional arguments passed function, cluster type, specify arguments vcov.teeMod() call.","code":""},{"path":"www.github.com/reference/confint.teeMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence intervals with standard errors provided by vcov.teeMod() — confint.teeMod","text":"","code":"# S3 method for teeMod confint(object, parm, level = 0.95, ...)"},{"path":"www.github.com/reference/confint.teeMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence intervals with standard errors provided by vcov.teeMod() — confint.teeMod","text":"object fitted teeMod model parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level confidence level required. ... additional arguments pass vcov.teeMod()","code":""},{"path":"www.github.com/reference/confint.teeMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence intervals with standard errors provided by vcov.teeMod() — confint.teeMod","text":"matrix (vector) columns giving lower upper confidence limits parameter. labelled (1-level)/2 1 - (1-level)/2 % (default 2.5% 97.5%)","code":""},{"path":"www.github.com/reference/confint.teeMod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence intervals with standard errors provided by vcov.teeMod() — confint.teeMod","text":"Rather call stats::confint.lm(), confint.teeMod() calls .confint_lm(), function internal propertee package ensures additional arguments ... confint.teeMod() call passed internal vcov() call.","code":""},{"path":"www.github.com/reference/cov_adj.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance adjustment of teeMod model estimates — cov_adj","title":"Covariance adjustment of teeMod model estimates — cov_adj","text":"cov_adj() takes fitted covariance model returns information necessary adjusting direct adjustment model estimates associated standard errors covariates. Standard errors reflect adjustments made outcomes well contributions sampling variability arising estimates covariance adjustment model coefficients.","code":""},{"path":"www.github.com/reference/cov_adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance adjustment of teeMod model estimates — cov_adj","text":"","code":"cov_adj(model, newdata = NULL, design = NULL, by = NULL)"},{"path":"www.github.com/reference/cov_adj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance adjustment of teeMod model estimates — cov_adj","text":"model model inherits glm, lm, robustbase::lmrob object newdata dataframe new data. Default NULL, case dataframe sought higher call stack. design Design object. Default NULL, case Design object sought higher call stack. optional; string named vector unique identifier columns data used create design data used fit covariance adjustment model. Default NULL, case unit assignment columns used identification (even uniquely identify units observation). named vector provided, names represent variables data used create design, values represent variables covariance adjustment data.","code":""},{"path":"www.github.com/reference/cov_adj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance adjustment of teeMod model estimates — cov_adj","text":"SandwichLayer design NULL Design object found call stack, otherwise PreSandwichLayer object","code":""},{"path":"www.github.com/reference/cov_adj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Covariance adjustment of teeMod model estimates — cov_adj","text":"Prior generating adjustments, cov_adj() identifies treatment variable specified Design object passed design replaces values reference level. treatment logical type, reference level FALSE, numeric type, smallest non-negative value (means 0 0/1 binary). Factor treatments currently supported Design objects. values output vector represent adjustments outcomes newdata newdata provided; adjustments outcomes data used fit teeMod model cov_adj() called within offset argument model fit; fitted values model relevant dataframe can extracted call stack. length output cov_adj() match number rows dataframe used.","code":""},{"path":"www.github.com/reference/cov_adj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covariance adjustment of teeMod model estimates — cov_adj","text":"","code":"data(STARdata) STARdata$treatment <- STARdata$stark == \"small\" STARdata$treatment[is.na(STARdata$treatment)] <- FALSE STARdata$studentid <- as.character(seq_len(nrow(STARdata)))  covariance_y0_read <- lm(readk ~ gender + ethnicity + lunchk +                                  ladderk + experiencek + tethnicityk,                          data = STARdata, subset = !treatment)  STARdata_design <- rct_design(treatment ~ cluster(studentid), data = STARdata) STARdata_ate    <- ate(STARdata_design, data = STARdata) STARdata_ett    <- ett(STARdata_design, data = STARdata)  ett_read <- lm(readk ~ treatment,                offset = cov_adj(covariance_y0_read, newdata = STARdata),                data = STARdata,                weights = STARdata_ett) #> Warning: Some covariance adjustments are NA; be careful of dropping these observations when fitting the ITT effect model coef(ett_read) #>   (Intercept) treatmentTRUE  #> -1.079602e-13  5.554179e+00   ate_read <- lm(readk ~ treatment,                offset = cov_adj(covariance_y0_read, newdata = STARdata),                data = STARdata,                weights = STARdata_ate) #> Warning: Some covariance adjustments are NA; be careful of dropping these observations when fitting the ITT effect model coef(ate_read) #>   (Intercept) treatmentTRUE  #> -1.022791e-13  5.554179e+00   ate_read_eth <- lm(readk ~ treatment * ethnicity,                    offset = cov_adj(covariance_y0_read, newdata = STARdata),                    data = STARdata,                    weights = STARdata_ate) #> Warning: Some covariance adjustments are NA; be careful of dropping these observations when fitting the ITT effect model coef(ate_read_eth) #>                     (Intercept)                   treatmentTRUE  #>                   -9.603676e-14                    5.901494e+00  #>                   ethnicityafam                  ethnicityasian  #>                   -1.612015e-14                    1.965411e-14  #>               ethnicityhispanic               ethnicityamindian  #>                    6.700549e-13                    1.565857e-15  #>                  ethnicityother     treatmentTRUE:ethnicityafam  #>                   -6.431281e-14                   -1.289929e+00  #>    treatmentTRUE:ethnicityasian treatmentTRUE:ethnicityhispanic  #>                   -2.494972e+01                    3.214437e+01  #> treatmentTRUE:ethnicityamindian    treatmentTRUE:ethnicityother  #>                    1.391799e+01                    3.202748e+00"},{"path":"www.github.com/reference/design_data_concordance.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for variable agreement within units of assignment — design_data_concordance","title":"Check for variable agreement within units of assignment — design_data_concordance","text":"Useful debugging purposes ensure concordance variables Design data.","code":""},{"path":"www.github.com/reference/design_data_concordance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for variable agreement within units of assignment — design_data_concordance","text":"","code":"design_data_concordance(design, data, by = NULL, warn_on_nonexistence = TRUE)"},{"path":"www.github.com/reference/design_data_concordance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for variable agreement within units of assignment — design_data_concordance","text":"design Design object data new data set, presumably used create design. optional; named vector list connecting names variables design variables data. Names represent variables design; values represent variables data. needed variable names differ. warn_on_nonexistence default TRUE. variable exist data, flagged? FALSE, silently move variable exist data.","code":""},{"path":"www.github.com/reference/design_data_concordance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for variable agreement within units of assignment — design_data_concordance","text":"invisibly TRUE warnings produced, FALSE warnings produced.","code":""},{"path":"www.github.com/reference/design_data_concordance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check for variable agreement within units of assignment — design_data_concordance","text":"Consider following scenario: Design generated dataset, \"data1\", includes block variable \"b1\". Within unique unit assignment/unitid/cluster \"data1\", must case \"b1\" constant. (Otherwise creation Design fail.) Next, model fit includes weights generated Design, dataset \"data2\". \"data2\", block variable \"b1\" also exists, due issue data cleaning, agree \"b1\" \"data1\". cause errors, either directly (via actual error messages) simply produce nonsense results. design_data_concordance() designed help debug scenarios providing information whether variables data used creation design (\"data1\" example) new dataset, data, (\"data2\" example) inconsistencies.","code":""},{"path":"www.github.com/reference/design_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Table of elements from a Design — design_table","title":"Table of elements from a Design — design_table","text":"Produces table (1-dimensional, 2-dimensional y specified) elements Design.","code":""},{"path":"www.github.com/reference/design_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table of elements from a Design — design_table","text":"","code":"design_table(   design,   x,   y = NULL,   sort = FALSE,   decreasing = TRUE,   use_var_names = FALSE,   ... )  dtable(   design,   x,   y = NULL,   sort = FALSE,   decreasing = TRUE,   use_var_names = FALSE,   ... )"},{"path":"www.github.com/reference/design_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table of elements from a Design — design_table","text":"design Design object x One \"treatment\", \"unit assignment\", (synonym \"uoa\"), \"block\". Abbreviations accepted. \"unit assignment\" can replaced \"unitid\" \"cluster\" Design created element. y Optionally, another string similar x. 1-dimensional table produced y left default, NULL. sort Ignored y NULL. FALSE (default), one-way table sorted according \"names\" levels. set TRUE, one-way table sorted according values. decreasing sort TRUE, choose whether sort descending (TRUE, default) ascending (FALSE). use_var_names TRUE, name dimensions table returned variable names. FALSE (default), name function (e.g. \"treatment\" \"blocks\"). Passing dnn argument ... (argument table()) overrides whatever requested . ... additional arguments table()","code":""},{"path":"www.github.com/reference/design_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table of elements from a Design — design_table","text":"table requested variables.","code":""},{"path":"www.github.com/reference/design_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table of elements from a Design — design_table","text":"","code":"data(simdata) des <- obs_design(z ~ unit_of_assignment(uoa1, uoa2) + block(bid),                   data = simdata) design_table(des, \"treatment\") #> treatment #> 0 1  #> 6 4  design_table(des, \"treatment\", \"block\", sort = TRUE, use_var_names = TRUE) #>    z #> bid 0 1 #>   1 3 1 #>   2 2 1 #>   3 1 2"},{"path":"www.github.com/reference/designconversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Design between types — as_rct_design","title":"Convert Design between types — as_rct_design","text":"Convert Design observational study, randomized control trial, regression discontinuity (created obs_design(), rct_design() rd_design() respectively).","code":""},{"path":"www.github.com/reference/designconversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Design between types — as_rct_design","text":"","code":"as_rct_design(Design, ..., loseforcing = FALSE)  as_obs_design(Design, ..., loseforcing = FALSE)  as_rd_design(Design, data, ..., forcing)"},{"path":"www.github.com/reference/designconversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Design between types — as_rct_design","text":"Design Design convert ... Ignored. loseforcing converting RD another Design type error avoid losing forcing variable. Setting loseforcing =   TRUE allows conversion automatically drop forcing variable. Default FALSE. data converting RD requires adding forcing variable, requires access original data. forcing converting RD requires adding forcing variable. entered formula passed update(), e.g. forcing = . ~ . + forcing(forcevar).","code":""},{"path":"www.github.com/reference/designconversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Design between types — as_rct_design","text":"Design updated type","code":""},{"path":"www.github.com/reference/designconversion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Design between types — as_rct_design","text":"","code":"des <- rct_design(z ~ unit_of_assignment(uoa1, uoa2), data = simdata) des #> Randomized Control Trial #>  #>  Structure          Variables  #>  ---------          ---------  #>  Treatment          z          #>  Unit of Assignment uoa1, uoa2 #>  as_obs_design(des) #> Observational Study #>  #>  Structure          Variables  #>  ---------          ---------  #>  Treatment          z          #>  Unit of Assignment uoa1, uoa2 #>  as_rd_design(des, simdata, forcing = ~ . + forcing(force)) #> Regression Discontinuity Design #>  #>  Structure          Variables  #>  ---------          ---------  #>  Treatment          z          #>  Unit of Assignment uoa1, uoa2 #>  Forcing            force      #>  des2 <- rd_design(o ~ uoa(uoa1, uoa2) + forcing(force), data = simdata) des2 #> Regression Discontinuity Design #>  #>  Structure          Variables  #>  ---------          ---------  #>  Treatment          o          #>  Unit of Assignment uoa1, uoa2 #>  Forcing            force      #>  # as_rct_design(des2) # this will produce an error as_rct_design(des2, loseforcing = TRUE) #> Randomized Control Trial #>  #>  Structure          Variables  #>  ---------          ---------  #>  Treatment          o          #>  Unit of Assignment uoa1, uoa2 #>"},{"path":"www.github.com/reference/dot-align_and_extend_estfuns.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Align the dimensions and rows of direct adjustment and covariance adjustment model estimating equations matrices — .align_and_extend_estfuns","title":"(Internal) Align the dimensions and rows of direct adjustment and covariance adjustment model estimating equations matrices — .align_and_extend_estfuns","text":"(Internal) Align dimensions rows direct adjustment covariance adjustment model estimating equations matrices","code":""},{"path":"www.github.com/reference/dot-align_and_extend_estfuns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Align the dimensions and rows of direct adjustment and covariance adjustment model estimating equations matrices — .align_and_extend_estfuns","text":"","code":".align_and_extend_estfuns(x, by = NULL, ...)"},{"path":"www.github.com/reference/dot-align_and_extend_estfuns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Align the dimensions and rows of direct adjustment and covariance adjustment model estimating equations matrices — .align_and_extend_estfuns","text":"x fitted teeMod model character vector; indicates unit assignment columns generate ID's ; default NULL, uses unit assignment columns specified teeMod object's Design slot ... arguments passed methods","code":""},{"path":"www.github.com/reference/dot-align_and_extend_estfuns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Align the dimensions and rows of direct adjustment and covariance adjustment model estimating equations matrices — .align_and_extend_estfuns","text":"list two matrices, one aligned contributions estimating equations direct adjustment model, aligned contributions covariance adjustment model.","code":""},{"path":"www.github.com/reference/dot-align_and_extend_estfuns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Align the dimensions and rows of direct adjustment and covariance adjustment model estimating equations matrices — .align_and_extend_estfuns","text":".align_and_extend_estfuns() first extracts matrices contributions empirical estimating equations direct adjustment covariance adjustment models; , pads matrices zeros account units observation appear one model-fitting sample ; finally orders matrices units observation (unit observation-level ordering impossible, units assignment) aligned.","code":""},{"path":"www.github.com/reference/dot-apply_dichotomy.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Applies dichotomy to treatment — .apply_dichotomy","title":"(Internal) Applies dichotomy to treatment — .apply_dichotomy","text":"Given dichotomy formula data.frame treatment variable variables formula, returns vector containing 0, 1, NA.","code":""},{"path":"www.github.com/reference/dot-apply_dichotomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Applies dichotomy to treatment — .apply_dichotomy","text":"","code":".apply_dichotomy(txt, dichotomy)"},{"path":"www.github.com/reference/dot-apply_dichotomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Applies dichotomy to treatment — .apply_dichotomy","text":"txt named data.frame containing column treatment, produed treatment(mydesign), variables specified dichotomy. dichotomy formula specifying dichotomize non-binary treatment column txt (call evaluates formula). See Details section ett() att() help pages information specifying formula","code":""},{"path":"www.github.com/reference/dot-apply_dichotomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Applies dichotomy to treatment — .apply_dichotomy","text":"vector binary treatments","code":""},{"path":"www.github.com/reference/dot-base_S3class_estfun.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Extract empirical estimating equations from a teeMod model using the S3 method associated with its .S3Class slot — .base_S3class_estfun","title":"(Internal) Extract empirical estimating equations from a teeMod model using the S3 method associated with its .S3Class slot — .base_S3class_estfun","text":"(Internal) Extract empirical estimating equations teeMod model using S3 method associated .S3Class slot","code":""},{"path":"www.github.com/reference/dot-base_S3class_estfun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Extract empirical estimating equations from a teeMod model using the S3 method associated with its .S3Class slot — .base_S3class_estfun","text":"","code":".base_S3class_estfun(x)"},{"path":"www.github.com/reference/dot-base_S3class_estfun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Extract empirical estimating equations from a teeMod model using the S3 method associated with its .S3Class slot — .base_S3class_estfun","text":"x fitted teeMod model","code":""},{"path":"www.github.com/reference/dot-base_S3class_estfun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Extract empirical estimating equations from a teeMod model using the S3 method associated with its .S3Class slot — .base_S3class_estfun","text":"S3 method","code":""},{"path":"www.github.com/reference/dot-bin_txt.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Extracts treatment as binary vector — .bin_txt","title":"(Internal) Extracts treatment as binary vector — .bin_txt","text":"(Internal) Extracts treatment binary vector","code":""},{"path":"www.github.com/reference/dot-bin_txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Extracts treatment as binary vector — .bin_txt","text":"","code":".bin_txt(des, data = NULL, dichotomy = NULL)"},{"path":"www.github.com/reference/dot-bin_txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Extracts treatment as binary vector — .bin_txt","text":"des Design, used get treatment assignment information data dataframe unit assignment information , dichotomy provided, columns specified therein dichotomy Optional, formula. See Details section ett() att() help pages information specifying formula","code":""},{"path":"www.github.com/reference/dot-bin_txt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Extracts treatment as binary vector — .bin_txt","text":"vector binary treatments","code":""},{"path":"www.github.com/reference/dot-bin_txt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Extracts treatment as binary vector — .bin_txt","text":"dichotomy specified Design treatment variable consisting 0/1 NA, returns binary treatment. Otherwise (non-binary treatment lacks dichotomy) errors.","code":""},{"path":"www.github.com/reference/dot-check_by.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) A few checks to ensure by= is valid — .check_by","title":"(Internal) A few checks to ensure by= is valid — .check_by","text":"Thie ensures = argument proper type, named, consists unique entries.","code":""},{"path":"www.github.com/reference/dot-check_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) A few checks to ensure by= is valid — .check_by","text":"","code":".check_by(by)"},{"path":"www.github.com/reference/dot-check_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) A few checks to ensure by= is valid — .check_by","text":"named vector list connecting names unit assignment/unitid/cluster variables design unit assignment/unitid/cluster variables data. Names represent variables Design; values represent variables data.","code":""},{"path":"www.github.com/reference/dot-check_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) A few checks to ensure by= is valid — .check_by","text":"NULL errors found","code":""},{"path":"www.github.com/reference/dot-check_design_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Perform checks on formula for creation of Design. — .check_design_formula","title":"(Internal) Perform checks on formula for creation of Design. — .check_design_formula","text":"Checks performed: Ensure presence exactly one unit_of_assignment(), cluster() unitid(). Disallow multiple block() multiple forcing() terms. Disallow forcing() unless RDD.","code":""},{"path":"www.github.com/reference/dot-check_design_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Perform checks on formula for creation of Design. — .check_design_formula","text":"","code":".check_design_formula(form, allow_forcing = FALSE)"},{"path":"www.github.com/reference/dot-check_design_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Perform checks on formula for creation of Design. — .check_design_formula","text":"form formula passed .new_Design() allow_forcing Binary whether forcing() allowed (TRUE RDD, FALSE RCT Obs).","code":""},{"path":"www.github.com/reference/dot-check_design_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Perform checks on formula for creation of Design. — .check_design_formula","text":"TRUE checks pass, otherwise errors.","code":""},{"path":"www.github.com/reference/dot-check_df_moderator_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Replace standard errors for moderator effect estimates with insufficient degrees of freedom with NA — .check_df_moderator_estimates","title":"(Internal) Replace standard errors for moderator effect estimates with insufficient degrees of freedom with NA — .check_df_moderator_estimates","text":"(Internal) Replace standard errors moderator effect estimates insufficient degrees freedom NA","code":""},{"path":"www.github.com/reference/dot-check_df_moderator_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Replace standard errors for moderator effect estimates with insufficient degrees of freedom with NA — .check_df_moderator_estimates","text":"","code":".check_df_moderator_estimates(   vmat,   model,   cluster_cols,   model_data = quote(data),   envir = environment(formula(model)) )"},{"path":"www.github.com/reference/dot-check_df_moderator_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Replace standard errors for moderator effect estimates with insufficient degrees of freedom with NA — .check_df_moderator_estimates","text":"vmat output .vcov_XXX() called input model argument first argument model fitted teeMod model cluster_cols character vector indicating column(s) defining cluster ID's model_data dataframe name dataframe used fit model envir environment get model_data model_data class name","code":""},{"path":"www.github.com/reference/dot-check_df_moderator_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Replace standard errors for moderator effect estimates with insufficient degrees of freedom with NA — .check_df_moderator_estimates","text":"variance-covariance matrix NA's estimates lacking sufficient degrees freedom","code":""},{"path":"www.github.com/reference/dot-confint_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce confidence intervals for linear models — .confint_lm","title":"Produce confidence intervals for linear models — .confint_lm","text":"Produce confidence intervals linear models","code":""},{"path":"www.github.com/reference/dot-confint_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce confidence intervals for linear models — .confint_lm","text":"","code":".confint_lm(object, parm, level = 0.95, ...)"},{"path":"www.github.com/reference/dot-confint_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce confidence intervals for linear models — .confint_lm","text":"object fitted teeMod model parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level confidence level required. ... additional arguments pass vcov.teeMod()","code":""},{"path":"www.github.com/reference/dot-confint_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce confidence intervals for linear models — .confint_lm","text":"matrix (vector) columns giving lower upper confidence limits parameter. labelled (1-level)/2 1 - (1-level)/2 % (default 2.5% 97.5%)","code":""},{"path":"www.github.com/reference/dot-confint_lm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Produce confidence intervals for linear models — .confint_lm","text":".confint_lm() copy stats::confint.lm passes arguments ... vcov() call. called teeMod model, produces confidence intervals standard errors computed based desired formulation vcov_tee() call.","code":""},{"path":"www.github.com/reference/dot-convert_to_data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Ensures replacement column for Design is a data.frame. — .convert_to_data.frame","title":"(Internal) Ensures replacement column for Design is a data.frame. — .convert_to_data.frame","text":"Helper function Design replacers ensure replacement properly named data.frame","code":""},{"path":"www.github.com/reference/dot-convert_to_data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Ensures replacement column for Design is a data.frame. — .convert_to_data.frame","text":"","code":".convert_to_data.frame(value, design, type)"},{"path":"www.github.com/reference/dot-convert_to_data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Ensures replacement column for Design is a data.frame. — .convert_to_data.frame","text":"value vector data.frame containing replacement. design Design type One \"t\", \"f\", \"u\" \"b\"","code":""},{"path":"www.github.com/reference/dot-convert_to_data.frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Ensures replacement column for Design is a data.frame. — .convert_to_data.frame","text":"data.frame containing named column(s)","code":""},{"path":"www.github.com/reference/dot-convert_to_data.frame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Ensures replacement column for Design is a data.frame. — .convert_to_data.frame","text":"given replacement set values (e.g vector matrix), ensures replacement named data.frame. Input vector: Since named, vector can used replace existing component. existing component 1 column, uses name first column. Input matrix data.frame: unnamed replacing existing component, must columns original component. (less columns, uses name first columns.) named, can replace number columns.","code":""},{"path":"www.github.com/reference/dot-design_accessors_newdata_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Checks newdata/by argument for design accessors — .design_accessors_newdata_validate","title":"(Internal) Checks newdata/by argument for design accessors — .design_accessors_newdata_validate","text":"(Internal) Checks newdata/argument design accessors","code":""},{"path":"www.github.com/reference/dot-design_accessors_newdata_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Checks newdata/by argument for design accessors — .design_accessors_newdata_validate","text":"","code":".design_accessors_newdata_validate(newdata, by)"},{"path":"www.github.com/reference/dot-design_accessors_newdata_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Checks newdata/by argument for design accessors — .design_accessors_newdata_validate","text":"newdata newdata argument e.g. treatment(), blocks(), etc e.g. treatment(), blocks(), etc. See .check_by()","code":""},{"path":"www.github.com/reference/dot-design_accessors_newdata_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Checks newdata/by argument for design accessors — .design_accessors_newdata_validate","text":"Invisibly TRUE. Warns errors appropriate.","code":""},{"path":"www.github.com/reference/dot-expand.model.frame_teeMod.html","id":null,"dir":"Reference","previous_headings":"","what":"Add new variables to a model frame from a teeMod object — .expand.model.frame_teeMod","title":"Add new variables to a model frame from a teeMod object — .expand.model.frame_teeMod","text":"variation expand.model.frame works teeMod objects","code":""},{"path":"www.github.com/reference/dot-expand.model.frame_teeMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add new variables to a model frame from a teeMod object — .expand.model.frame_teeMod","text":"","code":".expand.model.frame_teeMod(   model,   extras,   envir = environment(formula(model)),   na.expand = FALSE )"},{"path":"www.github.com/reference/dot-expand.model.frame_teeMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add new variables to a model frame from a teeMod object — .expand.model.frame_teeMod","text":"model teeMod object extras one-sided formula vector character strings describing new variables added envir environment evaluate things na.expand logical; see stats::expand.model.frame details","code":""},{"path":"www.github.com/reference/dot-expand.model.frame_teeMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add new variables to a model frame from a teeMod object — .expand.model.frame_teeMod","text":"data.frame","code":""},{"path":"www.github.com/reference/dot-expand.model.frame_teeMod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add new variables to a model frame from a teeMod object — .expand.model.frame_teeMod","text":"building teeMod object inside lmitt(), lot manipulation variables involved model time teeMod produced, neither outcome predictors actually fit model exist data passed call. (E.g. specific, user calls myda <- lmitt(y ~ 1, data = mydata), model.frame(myda) contain column names found mydata.) clone stats::expand.model.frame() one addition - extracting model$call$data model, adds columns model.frame(model) object. ensures additional variables created lmitt() can found. Trivial modifications stats::expand.model.frame() include ensuring model teeMod object, using :: syntax appropriate.","code":""},{"path":"www.github.com/reference/dot-expand_txt.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Expand treatment variable from a Design to a dataframe with unit of assignment information — .expand_txt","title":"(Internal) Expand treatment variable from a Design to a dataframe with unit of assignment information — .expand_txt","text":"(Internal) Expand treatment variable Design dataframe unit assignment information","code":""},{"path":"www.github.com/reference/dot-expand_txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Expand treatment variable from a Design to a dataframe with unit of assignment information — .expand_txt","text":"","code":".expand_txt(txt, data, des)"},{"path":"www.github.com/reference/dot-expand_txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Expand treatment variable from a Design to a dataframe with unit of assignment information — .expand_txt","text":"txt dataframe one column corresponding treatment. Can dichotomized stored des data dataframe unit assignment information des Design, used align unit assignment information txt","code":""},{"path":"www.github.com/reference/dot-fallback_data_search.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Fallback brute force method to locate data in the call stack. — .fallback_data_search","title":"(Internal) Fallback brute force method to locate data in the call stack. — .fallback_data_search","text":"try intelligent finding appropriate data. fails, may need brute force method just loops frames looks data object.","code":""},{"path":"www.github.com/reference/dot-fallback_data_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Fallback brute force method to locate data in the call stack. — .fallback_data_search","text":"","code":".fallback_data_search()"},{"path":"www.github.com/reference/dot-fallback_data_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Fallback brute force method to locate data in the call stack. — .fallback_data_search","text":"found, data.","code":""},{"path":"www.github.com/reference/dot-find_dichotomies.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find dichotomy formulas in the call stack — .find_dichotomies","title":"(Internal) Find dichotomy formulas in the call stack — .find_dichotomies","text":"(Internal) Find dichotomy formulas call stack","code":""},{"path":"www.github.com/reference/dot-find_dichotomies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find dichotomy formulas in the call stack — .find_dichotomies","text":"","code":".find_dichotomies()"},{"path":"www.github.com/reference/dot-find_dichotomies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Find dichotomy formulas in the call stack — .find_dichotomies","text":"list elements either formulas NULL, depending whether dichotomy argument found lmitt.formula() weights argument","code":""},{"path":"www.github.com/reference/dot-find_dichotomies.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Find dichotomy formulas in the call stack — .find_dichotomies","text":".find_dichotomies() searches lmitt.formula() calls weights arguments dichotomy arguments.","code":""},{"path":"www.github.com/reference/dot-get_col_from_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Extract specified type from new data set — .get_col_from_new_data","title":"(Internal) Extract specified type from new data set — .get_col_from_new_data","text":"(Internal) Extract specified type new data set","code":""},{"path":"www.github.com/reference/dot-get_col_from_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Extract specified type from new data set — .get_col_from_new_data","text":"","code":".get_col_from_new_data(design, newdata, type, by = NULL, ...)"},{"path":"www.github.com/reference/dot-get_col_from_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Extract specified type from new data set — .get_col_from_new_data","text":"design Design newdata data.frame, may may one used create design. must units assignment variable(s) (though = argument can used name differ), appropriately merge design blocks, treatment forcings. type One \"t\", \"f\", \"b\". optional; named vector list connecting names unit assignment/unitid/cluster variables design unit assignment/unitid/cluster variables data. Names represent variables Design; values represent variables data. needed variable names differ. ... Additional arguments merge().","code":""},{"path":"www.github.com/reference/dot-get_col_from_new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Extract specified type from new data set — .get_col_from_new_data","text":"column(s) belonging requested type ","code":""},{"path":"www.github.com/reference/dot-get_data_from_model.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Locate data in call stack — .get_data_from_model","title":"(Internal) Locate data in call stack — .get_data_from_model","text":"Whenever function model (ate()/ett()/cov_adj()/assigned()) called without explicit data= argument, attempt extract data model .","code":""},{"path":"www.github.com/reference/dot-get_data_from_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Locate data in call stack — .get_data_from_model","text":"","code":".get_data_from_model(which_fn, form = NULL, by = NULL)"},{"path":"www.github.com/reference/dot-get_data_from_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Locate data in call stack — .get_data_from_model","text":"which_fn Identify calling function, \"weights\" \"assigned\", helps separate logic two functions. form Formula apply model.frame(). See details translation unit assignment/unitid/cluster ID names, passed weights.","code":""},{"path":"www.github.com/reference/dot-get_data_from_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Locate data in call stack — .get_data_from_model","text":"data.frame","code":""},{"path":"www.github.com/reference/dot-get_data_from_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Locate data in call stack — .get_data_from_model","text":"form specifies columns data needed. current use cases (ate()/ett() assigned()), unit assignment variables, e.g. form = ~ uoavar, enable merging UOA level variables model data. However, can easily expanded variables needed.","code":""},{"path":"www.github.com/reference/dot-get_design.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Locate a Design in the call stack — .get_design","title":"(Internal) Locate a Design in the call stack — .get_design","text":"assigned()/ate()/ett()/cov_adj() need Design operate. called model without design= argument, function sees can find Design another functions.","code":""},{"path":"www.github.com/reference/dot-get_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Locate a Design in the call stack — .get_design","text":"","code":".get_design(NULL_on_error = FALSE)"},{"path":"www.github.com/reference/dot-get_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Locate a Design in the call stack — .get_design","text":"NULL_on_error TRUE, returns NULL Design object found rather throwing error.","code":""},{"path":"www.github.com/reference/dot-get_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Locate a Design in the call stack — .get_design","text":"Design, NULL NULL_on_error TRUE Design found.","code":""},{"path":"www.github.com/reference/dot-get_design.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Locate a Design in the call stack — .get_design","text":"Note never look inside assigned() (gets complicated formulas), weights cov_adj(). E.g. lm(y ~ assigned(), weights = ate(des), offest = cov_adj(mod1)) lm(y ~ assigned(), weights = ate(), offest = cov_adj(mod1, design = des)) work, lm(y ~ assigned(des), weights = ate(), offest = cov_adj(mod1)) fail.","code":""},{"path":"www.github.com/reference/dot-join_design_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Expand unit of assignment level weights to the level of the data — .join_design_weights","title":"(Internal) Expand unit of assignment level weights to the level of the data — .join_design_weights","text":"Helper function called creation weights via ate() ett()","code":""},{"path":"www.github.com/reference/dot-join_design_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Expand unit of assignment level weights to the level of the data — .join_design_weights","text":"","code":".join_design_weights(weights, design, target, data, dichotomy)"},{"path":"www.github.com/reference/dot-join_design_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Expand unit of assignment level weights to the level of the data — .join_design_weights","text":"weights vector weights sorted according Design design Design target One \"ate\" \"ett\" data New data dichotomy formula used specify dichotomy non-binary treatment variable. output WeightedDesign object store dichotomy slot, unless NULL, case translated empty formula.","code":""},{"path":"www.github.com/reference/dot-join_design_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Expand unit of assignment level weights to the level of the data — .join_design_weights","text":"WeightedDesign","code":""},{"path":"www.github.com/reference/dot-make_PreSandwichLayer.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Get covariance adjustments and their gradient with respect to covariance adjustment model coefficients — .make_PreSandwichLayer","title":"(Internal) Get covariance adjustments and their gradient with respect to covariance adjustment model coefficients — .make_PreSandwichLayer","text":".make_PreSandwichLayer() takes fitted covariance adjustment model passed model argument generates adjustments outcomes observations newdata argument. also evaluates gradient adjustments taken respect coefficients coefficient estimates.","code":""},{"path":"www.github.com/reference/dot-make_PreSandwichLayer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Get covariance adjustments and their gradient with respect to covariance adjustment model coefficients — .make_PreSandwichLayer","text":"","code":".make_PreSandwichLayer(model, newdata = NULL, ...)"},{"path":"www.github.com/reference/dot-make_PreSandwichLayer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Get covariance adjustments and their gradient with respect to covariance adjustment model coefficients — .make_PreSandwichLayer","text":"model fitted model use generating covariance adjustment values newdata dataframe columns called model ... additional arguments pass model.frame model.matrix. include na.action, xlev, contrasts.arg: former fixed na.pass, latter two provided elements model argument.","code":""},{"path":"www.github.com/reference/dot-make_PreSandwichLayer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Get covariance adjustments and their gradient with respect to covariance adjustment model coefficients — .make_PreSandwichLayer","text":"PreSandwichLayer object","code":""},{"path":"www.github.com/reference/dot-make_uoa_cluster_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a dataframe that links units of assignment with clusters — .make_uoa_cluster_df","title":"Make a dataframe that links units of assignment with clusters — .make_uoa_cluster_df","text":"Make dataframe links units assignment clusters","code":""},{"path":"www.github.com/reference/dot-make_uoa_cluster_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a dataframe that links units of assignment with clusters — .make_uoa_cluster_df","text":"","code":".make_uoa_cluster_df(des, cluster = NULL)"},{"path":"www.github.com/reference/dot-make_uoa_cluster_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a dataframe that links units of assignment with clusters — .make_uoa_cluster_df","text":"des Design object. cluster character vector column names use clusters. Columns must exist dataframe used create Design object. Defaults NULL, case column names specified unitid(), unit_of_assignment(), cluster() function Design formula used.","code":""},{"path":"www.github.com/reference/dot-make_uoa_cluster_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a dataframe that links units of assignment with clusters — .make_uoa_cluster_df","text":"dataframe number rows coincides number distinct unit assignment cluster combinations (depending whether cluster less granular level assignment level) columns correspond unit assignment columns \"cluster\" column","code":""},{"path":"www.github.com/reference/dot-make_uoa_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Make ID's to pass to the cluster argument of vcov_tee() — .make_uoa_ids","title":"Make ID's to pass to the cluster argument of vcov_tee() — .make_uoa_ids","text":".make_uoa_ids() returns factor vector cluster ID's align order units observations' contributions estfun.teeMod(). ensure vcov_tee() calls sandwich::meatCL(), cluster argument aggregates correct contributions estimating equations within clusters.","code":""},{"path":"www.github.com/reference/dot-make_uoa_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make ID's to pass to the cluster argument of vcov_tee() — .make_uoa_ids","text":"","code":".make_uoa_ids(x, vcov_type, cluster = NULL, ...)"},{"path":"www.github.com/reference/dot-make_uoa_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make ID's to pass to the cluster argument of vcov_tee() — .make_uoa_ids","text":"x fitted teeMod object vcov_type string indicating model-based design-based covariance estimation. Currently, \"MB\", \"CR\", \"HC\" strings registered indicating model-based estimation. cluster character vector list; optional. Specifies column names appear covariance adjustment direct adjustment model dataframes. Defaults NULL, case unit assignment columns indicated Design used clustering. multiple clustering columns, concatenated together row separated \"_\". ... arguments passed methods","code":""},{"path":"www.github.com/reference/dot-make_uoa_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make ID's to pass to the cluster argument of vcov_tee() — .make_uoa_ids","text":"vector length equal number unique units observation used fit two models. See Details estfun.teeMod() method determining uniqueness.","code":""},{"path":"www.github.com/reference/dot-merge_preserve_order.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Merge data.frames ensuring order of first data.frame is maintained — .merge_preserve_order","title":"(Internal) Merge data.frames ensuring order of first data.frame is maintained — .merge_preserve_order","text":"(Internal) Merge data.frames ensuring order first data.frame maintained","code":""},{"path":"www.github.com/reference/dot-merge_preserve_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Merge data.frames ensuring order of first data.frame is maintained — .merge_preserve_order","text":"","code":".merge_preserve_order(x, ...)"},{"path":"www.github.com/reference/dot-merge_preserve_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Merge data.frames ensuring order of first data.frame is maintained — .merge_preserve_order","text":"x data.frame whose ordering maintained ... Additional arguments merge(), particularly second data.frame = argument.","code":""},{"path":"www.github.com/reference/dot-merge_preserve_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Merge data.frames ensuring order of first data.frame is maintained — .merge_preserve_order","text":"Merged data.frame ordering x.","code":""},{"path":"www.github.com/reference/dot-new_Design.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Create a new Design object. — .new_Design","title":"(Internal) Create a new Design object. — .new_Design","text":"Helper function create new Design. Called internally rct_design(), rd_design() obs_design().","code":""},{"path":"www.github.com/reference/dot-new_Design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Create a new Design object. — .new_Design","text":"","code":".new_Design(form, data, type, subset = NULL, call = NULL, na.fail = TRUE)"},{"path":"www.github.com/reference/dot-new_Design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Create a new Design object. — .new_Design","text":"form Formula create Design, see help rcr_design(), rd_design() obs_design() details. data data set type One \"RCT\", \"RD\", \"Obs\" subset subset information call call generating Design. na.fail error NA's (TRUE) remove (FALSE)?","code":""},{"path":"www.github.com/reference/dot-new_Design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Create a new Design object. — .new_Design","text":"new Design object","code":""},{"path":"www.github.com/reference/dot-order_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Order observations used to fit a teeMod model and a prior covariance adjustment model — .order_samples","title":"(Internal) Order observations used to fit a teeMod model and a prior covariance adjustment model — .order_samples","text":"(Internal) Order observations used fit teeMod model prior covariance adjustment model","code":""},{"path":"www.github.com/reference/dot-order_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Order observations used to fit a teeMod model and a prior covariance adjustment model — .order_samples","text":"","code":".order_samples(x, by = NULL, ...)"},{"path":"www.github.com/reference/dot-order_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Order observations used to fit a teeMod model and a prior covariance adjustment model — .order_samples","text":"x fitted teeMod model character vector columns get ID's ordering . Default NULL, case unit assignment ID's used ordering. ... arguments passed methods","code":""},{"path":"www.github.com/reference/dot-order_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Order observations used to fit a teeMod model and a prior covariance adjustment model — .order_samples","text":"list four named vectors. Q_not_C element holds ordering units observation direct adjustment sample covariance adjustment samples; Q_in_C C_in_Q, ordering units ; C_not_Q, ordering units covariance adjustment sample . Q_in_C C_in_Q differ names Q_in_C vector correspond row indices original matrix estimating equations direct adjustment model, names C_in_Q correspond row indices matrix estimating equations covariance adjustment model. Similarly, names Q_not_C C_not_Q correspond row indices direct adjustment covariance adjustment samples, respectively. Ultimately, order .make_uoa_ids() estfun.teeMod() given concatenating vectors stored Q_not_C, Q_in_C, C_not_q.","code":""},{"path":"www.github.com/reference/dot-order_samples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Order observations used to fit a teeMod model and a prior covariance adjustment model — .order_samples","text":".order_samples() underpins ordering .make_uoa_ids() estfun.teeMod(). function orders outputs functions, also informs original matrices contributions estimating equations need indexed align units observations' contributions sets estimating equations. argument provided cov_adj(), used construct order .order_samples().","code":""},{"path":"www.github.com/reference/dot-remove_forcing.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Removes the forcing column entirely from a Design — .remove_forcing","title":"(Internal) Removes the forcing column entirely from a Design — .remove_forcing","text":"preparation converting RD Design another Design, strip forcing variable entirely. removed data (@structure @column_index), well formula stored @call.","code":""},{"path":"www.github.com/reference/dot-remove_forcing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Removes the forcing column entirely from a Design — .remove_forcing","text":"","code":".remove_forcing(des)"},{"path":"www.github.com/reference/dot-remove_forcing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Removes the forcing column entirely from a Design — .remove_forcing","text":"des Design","code":""},{"path":"www.github.com/reference/dot-remove_forcing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Removes the forcing column entirely from a Design — .remove_forcing","text":"Design without forcing variable","code":""},{"path":"www.github.com/reference/dot-remove_forcing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Removes the forcing column entirely from a Design — .remove_forcing","text":"Note output Design fail validity check (validObject()) due RD Design requiring forcing variable, change @type immediately.","code":""},{"path":"www.github.com/reference/dot-rename_model_frame_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Rename columns to strip function calls — .rename_model_frame_columns","title":"(Internal) Rename columns to strip function calls — .rename_model_frame_columns","text":"calling model.frame() formula input .new_Design(), names columns include function names, e.g. \"block(blockvar)\". function strips .","code":""},{"path":"www.github.com/reference/dot-rename_model_frame_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Rename columns to strip function calls — .rename_model_frame_columns","text":"","code":".rename_model_frame_columns(modframe)"},{"path":"www.github.com/reference/dot-rename_model_frame_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Rename columns to strip function calls — .rename_model_frame_columns","text":"modframe data.frame.","code":""},{"path":"www.github.com/reference/dot-rename_model_frame_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Rename columns to strip function calls — .rename_model_frame_columns","text":"data.frame function calls removed","code":""},{"path":"www.github.com/reference/dot-sanitize_C_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Return ID's used to order observations in the covariance adjustment sample — .sanitize_C_ids","title":"(Internal) Return ID's used to order observations in the covariance adjustment sample — .sanitize_C_ids","text":"(Internal) Return ID's used order observations covariance adjustment sample","code":""},{"path":"www.github.com/reference/dot-sanitize_C_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Return ID's used to order observations in the covariance adjustment sample — .sanitize_C_ids","text":"","code":".sanitize_C_ids(x, id_col = NULL, sorted = FALSE, ...)"},{"path":"www.github.com/reference/dot-sanitize_C_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Return ID's used to order observations in the covariance adjustment sample — .sanitize_C_ids","text":"x SandwichLayer object id_col character vector list; optional. Specifies column names appear botn covariance adjustment direct adjustmet samples. Defaults NULL, case unit assignment columns SandwichLayer's Design slot used generate ID's. ... arguments passed methods","code":""},{"path":"www.github.com/reference/dot-sanitize_C_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Return ID's used to order observations in the covariance adjustment sample — .sanitize_C_ids","text":"vector length equal number units observation used fit covariance adjustment model","code":""},{"path":"www.github.com/reference/dot-sanitize_Q_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Return ID's used to order observations in the direct adjustment sample — .sanitize_Q_ids","title":"(Internal) Return ID's used to order observations in the direct adjustment sample — .sanitize_Q_ids","text":"(Internal) Return ID's used order observations direct adjustment sample","code":""},{"path":"www.github.com/reference/dot-sanitize_Q_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Return ID's used to order observations in the direct adjustment sample — .sanitize_Q_ids","text":"","code":".sanitize_Q_ids(x, id_col = NULL, ...)"},{"path":"www.github.com/reference/dot-sanitize_Q_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Return ID's used to order observations in the direct adjustment sample — .sanitize_Q_ids","text":"x fitted teeMod model id_col character vector; optional. Specifies column(s) whose ID's returned. column must exist data created Design object. Default NULL, case unit assignment columns indicated design used generate ID's. ... arguments passed methods","code":""},{"path":"www.github.com/reference/dot-sanitize_Q_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Return ID's used to order observations in the direct adjustment sample — .sanitize_Q_ids","text":"vector length equal number units observation direct adjustment sample","code":""},{"path":"www.github.com/reference/dot-show_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) show helper for PreSandwichLayer/SandwichLayer — .show_layer","title":"(Internal) show helper for PreSandwichLayer/SandwichLayer — .show_layer","text":"(Internal) show helper PreSandwichLayer/SandwichLayer","code":""},{"path":"www.github.com/reference/dot-show_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) show helper for PreSandwichLayer/SandwichLayer — .show_layer","text":"","code":".show_layer(object)"},{"path":"www.github.com/reference/dot-show_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) show helper for PreSandwichLayer/SandwichLayer — .show_layer","text":"object PreSandwichLayer SandwichLayer","code":""},{"path":"www.github.com/reference/dot-show_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) show helper for PreSandwichLayer/SandwichLayer — .show_layer","text":"object, invisibly","code":""},{"path":"www.github.com/reference/dot-update_by.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Use by to update Design with new variable names — .update_by","title":"(Internal) Use by to update Design with new variable names — .update_by","text":"Helper function used update variable names Design user passes = argument align variable names data sets.","code":""},{"path":"www.github.com/reference/dot-update_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Use by to update Design with new variable names — .update_by","text":"","code":".update_by(design, data, by)"},{"path":"www.github.com/reference/dot-update_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Use by to update Design with new variable names — .update_by","text":"design Design data Data set named vector list connecting names unit assignment/unitid/cluster variables design unit assignment/unitid/cluster variables data. Names represent variables Design; values represent variables data.","code":""},{"path":"www.github.com/reference/dot-update_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Use by to update Design with new variable names — .update_by","text":"Design updated variable names","code":""},{"path":"www.github.com/reference/dot-update_ca_model_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Add columns for merging covariance adjustment and direct adjustment samples to model formula — .update_ca_model_formula","title":"(Internal) Add columns for merging covariance adjustment and direct adjustment samples to model formula — .update_ca_model_formula","text":"(Internal) Add columns merging covariance adjustment direct adjustment samples model formula","code":""},{"path":"www.github.com/reference/dot-update_ca_model_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Add columns for merging covariance adjustment and direct adjustment samples to model formula — .update_ca_model_formula","text":"","code":".update_ca_model_formula(model, by = NULL, design = NULL)"},{"path":"www.github.com/reference/dot-update_ca_model_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Add columns for merging covariance adjustment and direct adjustment samples to model formula — .update_ca_model_formula","text":"model model inherits glm, lm, robustbase::lmrob object optional; string named vector unique identifier columns data used create design data used fit covariance adjustment model. Default NULL, case unit assignment columns used identification (even uniquely identify units observation). named vector provided, names represent variables data used create design, values represent variables covariance adjustment data. design Design object. Default NULL, case Design object sought higher call stack.","code":""},{"path":"www.github.com/reference/dot-update_ca_model_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Add columns for merging covariance adjustment and direct adjustment samples to model formula — .update_ca_model_formula","text":"formula","code":""},{"path":"www.github.com/reference/dot-update_ca_model_formula.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Add columns for merging covariance adjustment and direct adjustment samples to model formula — .update_ca_model_formula","text":"function typically used prior .get_data_from_model() incorporates information provided argument ensure necessary columns merging two samples included model.frame() calls.","code":""},{"path":"www.github.com/reference/dot-update_call_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Updates des@call's formula with the currently defined variable names. — .update_call_formula","title":"(Internal) Updates des@call's formula with the currently defined variable names. — .update_call_formula","text":"Helper function update call appropriate variable names modified. Called within Design replacers.","code":""},{"path":"www.github.com/reference/dot-update_call_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Updates des@call's formula with the currently defined variable names. — .update_call_formula","text":"","code":".update_call_formula(design)"},{"path":"www.github.com/reference/dot-update_call_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Updates des@call's formula with the currently defined variable names. — .update_call_formula","text":"design Design","code":""},{"path":"www.github.com/reference/dot-update_call_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Updates des@call's formula with the currently defined variable names. — .update_call_formula","text":"updated formula","code":""},{"path":"www.github.com/reference/dot-update_call_formula.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Updates des@call's formula with the currently defined variable names. — .update_call_formula","text":"return stuck design via des@call$formula <- .update_call_formula(des)","code":""},{"path":"www.github.com/reference/dot-update_form_to_unit_of_assignment.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Rename cluster/unitid/uoa in a formula to unit_of_assignment for internal consistency — .update_form_to_unit_of_assignment","title":"(Internal) Rename cluster/unitid/uoa in a formula to unit_of_assignment for internal consistency — .update_form_to_unit_of_assignment","text":"Internally, always refer uoa/cluster/unitid \"unit_of_assignment\"","code":""},{"path":"www.github.com/reference/dot-update_form_to_unit_of_assignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Rename cluster/unitid/uoa in a formula to unit_of_assignment for internal consistency — .update_form_to_unit_of_assignment","text":"","code":".update_form_to_unit_of_assignment(form)"},{"path":"www.github.com/reference/dot-update_form_to_unit_of_assignment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Rename cluster/unitid/uoa in a formula to unit_of_assignment for internal consistency — .update_form_to_unit_of_assignment","text":"form formula passed .new_Design()","code":""},{"path":"www.github.com/reference/dot-update_form_to_unit_of_assignment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Rename cluster/unitid/uoa in a formula to unit_of_assignment for internal consistency — .update_form_to_unit_of_assignment","text":"formula \"cluster\"/\"unitid\"/\"uoa\" replace \"unit_of_assignment\"","code":""},{"path":"www.github.com/reference/dot-update_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Replaces type columns in design with new — .update_structure","title":"(Internal) Replaces type columns in design with new — .update_structure","text":"Assumes .convert_to_data.frame() already called new","code":""},{"path":"www.github.com/reference/dot-update_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Replaces type columns in design with new — .update_structure","text":"","code":".update_structure(design, new, type)"},{"path":"www.github.com/reference/dot-update_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Replaces type columns in design with new — .update_structure","text":"design Design new named data.frame replacement, output .convert_to_data.frame(). type One \"t\", \"f\", \"u\" \"b\\\".","code":""},{"path":"www.github.com/reference/dot-update_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Replaces type columns in design with new — .update_structure","text":"updated Design","code":""},{"path":"www.github.com/reference/dot-validate_dichotomy.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Validate a dichotomy against other dichotomies found in the call stack — .validate_dichotomy","title":"(Internal) Validate a dichotomy against other dichotomies found in the call stack — .validate_dichotomy","text":"(Internal) Validate dichotomy dichotomies found call stack","code":""},{"path":"www.github.com/reference/dot-validate_dichotomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Validate a dichotomy against other dichotomies found in the call stack — .validate_dichotomy","text":"","code":".validate_dichotomy(possible_dichotomy)"},{"path":"www.github.com/reference/dot-validate_dichotomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Validate a dichotomy against other dichotomies found in the call stack — .validate_dichotomy","text":"possible_dichotomy list formula, former coming .find_dichotomies()","code":""},{"path":"www.github.com/reference/dot-validate_dichotomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Validate a dichotomy against other dichotomies found in the call stack — .validate_dichotomy","text":"formula dichotomy NULL","code":""},{"path":"www.github.com/reference/dot-weights_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Worker function for weight calculation — .weights_calc","title":"(Internal) Worker function for weight calculation — .weights_calc","text":"Called ate() ett().","code":""},{"path":"www.github.com/reference/dot-weights_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Worker function for weight calculation — .weights_calc","text":"","code":".weights_calc(design, target, dichotomy, by, data)"},{"path":"www.github.com/reference/dot-weights_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Worker function for weight calculation — .weights_calc","text":"design Design object created one rct_design(), rd_design(), obs_design(). target One \"ate\" \"ett\"; ate() ett() chooses automatically. dichotomy optional; formula defining dichotomy treatment variable already 0/1. See details help ate() ett() e.g. details. optional; named vector list connecting names unit assignment/ variables design unit assignment/cluster variables data. Names represent variables Design; values represent variables data. needed variable names differ. data optionally data analysis performed . May excluded functions included weights argument model.","code":""},{"path":"www.github.com/reference/dot-weights_calc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Worker function for weight calculation — .weights_calc","text":"WeightedDesign object","code":""},{"path":"www.github.com/reference/estfun.teeMod.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract empirical estimating equations from a teeMod model fit — estfun.teeMod","title":"Extract empirical estimating equations from a teeMod model fit — estfun.teeMod","text":"S3method sandwich::estfun producing matrix contributions direct adjustment estimating equations.","code":""},{"path":"www.github.com/reference/estfun.teeMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract empirical estimating equations from a teeMod model fit — estfun.teeMod","text":"","code":"# S3 method for teeMod estfun(x, ...)"},{"path":"www.github.com/reference/estfun.teeMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract empirical estimating equations from a teeMod model fit — estfun.teeMod","text":"x fitted teeMod model ... arguments passed methods","code":""},{"path":"www.github.com/reference/estfun.teeMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract empirical estimating equations from a teeMod model fit — estfun.teeMod","text":"\\(n\\times 2\\) matrix empirical estimating equations direct adjustment model fit. See Details definition \\(n\\).","code":""},{"path":"www.github.com/reference/estfun.teeMod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract empirical estimating equations from a teeMod model fit — estfun.teeMod","text":"prior covariance adjustment model passed offset argument teeMod model using cov_adj(), estfun.teeMod() incorporates contributions estimating equations covariance adjustment model. covariance adjustment sample may fully overlap direct adjustment sample, case estfun.teeMod() returns matrix number rows number unique units observation used fit two models. Uniqueness determined matching units assignment used fit covariance adjustment model units assignment teeMod model's Design slot; units observation within units assignment match additional units add row count. Theby argument cov_adj() can provide column pair columns (named vector name specifies column direct adjustment sample value column covariance adjustment sample) uniquely specifies units observation sample. information can used align unit observation's contributions two sets estimating equations. argument provided units observation uniquely specified, contributions aligned unit assignment level. standard errors clustered finer , provide result unit observation's contributions aligned exactly.","code":""},{"path":"www.github.com/reference/glmrob_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract empirical estimating equations from a glmbrob model fit — estfun.glmrob","title":"Extract empirical estimating equations from a glmbrob model fit — estfun.glmrob","text":"Extract empirical estimating equations glmbrob model fit Extract bread matrix lmrob() fit","code":""},{"path":"www.github.com/reference/glmrob_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract empirical estimating equations from a glmbrob model fit — estfun.glmrob","text":"","code":"# S3 method for glmrob estfun(x, ...)  # S3 method for glmrob bread(x, ...)"},{"path":"www.github.com/reference/glmrob_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract empirical estimating equations from a glmbrob model fit — estfun.glmrob","text":"x fitted lmrob object ... arguments passed methods","code":""},{"path":"www.github.com/reference/glmrob_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract empirical estimating equations from a glmbrob model fit — estfun.glmrob","text":"matrix, estimating functions evaluated data points fitted parameters matrix, inverse Hessian loss evaluated fitted parameters","code":""},{"path":"www.github.com/reference/has_binary_treatment.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether treatment stored in a Design object is binary — has_binary_treatment","title":"Check whether treatment stored in a Design object is binary — has_binary_treatment","text":"Check whether treatment stored Design object binary","code":""},{"path":"www.github.com/reference/has_binary_treatment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether treatment stored in a Design object is binary — has_binary_treatment","text":"","code":"has_binary_treatment(des)"},{"path":"www.github.com/reference/has_binary_treatment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether treatment stored in a Design object is binary — has_binary_treatment","text":"des Design object","code":""},{"path":"www.github.com/reference/has_binary_treatment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether treatment stored in a Design object is binary — has_binary_treatment","text":"logical vector length 1","code":""},{"path":"www.github.com/reference/identical_Designs.html","id":null,"dir":"Reference","previous_headings":"","what":"Test equality of two Design objects — identical_Designs","title":"Test equality of two Design objects — identical_Designs","text":"Check whether two Design objects identical.","code":""},{"path":"www.github.com/reference/identical_Designs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test equality of two Design objects — identical_Designs","text":"","code":"identical_Designs(x, y)"},{"path":"www.github.com/reference/identical_Designs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test equality of two Design objects — identical_Designs","text":"x Design object. y Design object.","code":""},{"path":"www.github.com/reference/identical_Designs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test equality of two Design objects — identical_Designs","text":"Logical, x y identical?","code":""},{"path":"www.github.com/reference/identify_small_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify fine strata — identify_small_blocks","title":"Identify fine strata — identify_small_blocks","text":"Identify blocks Design exactly one treated one control unit assignment.","code":""},{"path":"www.github.com/reference/identify_small_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify fine strata — identify_small_blocks","text":"","code":"identify_small_blocks(des)"},{"path":"www.github.com/reference/identify_small_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify fine strata — identify_small_blocks","text":"des Design object.","code":""},{"path":"www.github.com/reference/identify_small_blocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify fine strata — identify_small_blocks","text":"Logical vector length given number blocks Design","code":""},{"path":"www.github.com/reference/lmitt.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Model for Intention To Treat — lmitt","title":"Linear Model for Intention To Treat — lmitt","text":"Generates linear model object estimate treatment effect, proper estimation variances accounting study design.","code":""},{"path":"www.github.com/reference/lmitt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Model for Intention To Treat — lmitt","text":"","code":"lmitt(obj, design, data, ...)  # S3 method for formula lmitt(obj, design, data, absorb = FALSE, offset = NULL, weights = NULL, ...)  # S3 method for lm lmitt(obj, design = NULL, ...)"},{"path":"www.github.com/reference/lmitt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Model for Intention To Treat — lmitt","text":"obj formula lm object. See Details. design Design used. Alternatively, formula creating design (type passed first argument rd_design(), rct_design(), obs_design()). formula includes forcing() element, RD design created. Otherwise observational design created. RCT design must created manually using rct_design(). data data.frame passed lm(). ... Additional arguments passed lm(). One argument dichotomy, can used dichotomize non-binary treatment variable design. See Details section ett() att() help pages information specifying formula. absorb TRUE, fixed effects included blocks identified Design. Excluded FALSE. Default FALSE. estimates fixed effects suppressed returned object. offset Offset kind passed lm(). Ideally, output cov_adj(). weights weights generated? Options \"ate\" \"ett\". Alternatively, output manually run ate() ett() can used.","code":""},{"path":"www.github.com/reference/lmitt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear Model for Intention To Treat — lmitt","text":"teeMod model.","code":""},{"path":"www.github.com/reference/lmitt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear Model for Intention To Treat — lmitt","text":"first argument lmitt() formula specifying outcome left hand side. right hand side formula can following: 1: Estimates main treatment effect. subgroup variable: Estimates treatment effect within level subgrouping variable. continuous moderator: Estimates main treatment effect well treatment moderator interaction. moderator automatically centered. Alternatively, obj can pre-created lm object. modification made formula object. See help .lmitt() details conversion. Note although Design creation functions (e.g. rct_design()) take optional subset= argument used creation Design, subset= argument passed lm() lmitt(). subset= argument creating Design restricts data used generate Design, direct impact future lm() lmitt() calls using Design. (can indirectly impact excluding particular units assignment receiving treatment assignment thus complete case analysis removes model.) hand, subset= argument lm() lmitt() refers subsetting data argument passed lm() lmitt(). avoid variable name collision, treatment variable defined design \".\" appended . example, request main treatment effect (formula ~ 1) treatment variable named \"txt\", can obtain estimate returned teeMod object via $coefficients[\"txt.\"]. lmitt() produce message Design passed block information utilized model. Note error, oversight. disable message, run options(\"propertee_message_on_unused_blocks\" = FALSE).","code":""},{"path":"www.github.com/reference/lmitt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear Model for Intention To Treat — lmitt","text":"","code":"data(simdata) des <- rct_design(z ~ unit_of_assignment(uoa1, uoa2), data = simdata) mod1 <- lmitt(y ~ 1, data = simdata, design = des, weights = \"ate\") mod2 <- lmitt(y ~ as.factor(o), data = simdata, design = des, weights = \"ate\") mod3 <- lmitt(y ~ 1, data = simdata,               design = z ~ uoa(uoa1, uoa2) + forcing(force))"},{"path":"www.github.com/reference/lmrob_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate matrix of estimating equations for lmrob() fit — estfun.lmrob","title":"Generate matrix of estimating equations for lmrob() fit — estfun.lmrob","text":"Generate matrix estimating equations lmrob() fit Extract bread matrix lmrob() fit","code":""},{"path":"www.github.com/reference/lmrob_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate matrix of estimating equations for lmrob() fit — estfun.lmrob","text":"","code":"# S3 method for lmrob estfun(x, ...)  # S3 method for lmrob bread(x, ...)"},{"path":"www.github.com/reference/lmrob_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate matrix of estimating equations for lmrob() fit — estfun.lmrob","text":"x lmrob object produced using MM/SM estimator chain ... Additional arguments passed bread","code":""},{"path":"www.github.com/reference/lmrob_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate matrix of estimating equations for lmrob() fit — estfun.lmrob","text":"\\(n\\times \\)(p+1) matrix first column corresponds scale estimate remaining \\(p\\) colums correspond coefficients \\(p\\times \\)(p+1) matrix first column corresponds scale estimate remaining \\(p\\) colums correspond coefficients","code":""},{"path":"www.github.com/reference/lmrob_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate matrix of estimating equations for lmrob() fit — estfun.lmrob","text":"part workaround issue robustbase code affecting sandwich covariance estimation. issue question issue #6471, robustbase project R-Forge. function contributes providing sandwich estimates covariance-adjusted standard errors robust linear covariance adjustment models. part workaround issue robustbase code affecting sandwich covariance estimation. issue question issue #6471, robustbase project R-Forge. function contributes providing sandwich estimates covariance-adjusted standard errors robust linear covariance adjustment models.","code":""},{"path":"www.github.com/reference/lmrob_methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate matrix of estimating equations for lmrob() fit — estfun.lmrob","text":"Ben B. Hansen","code":""},{"path":"www.github.com/reference/lsoSynth.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthethic Regression Discontinuity Data — lsoSynth","title":"Synthethic Regression Discontinuity Data — lsoSynth","text":"data example randomly simulated using synthpop package R based data originally collected Lindo, Sanders, Oreopoulos (2010).","code":""},{"path":"www.github.com/reference/lsoSynth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthethic Regression Discontinuity Data — lsoSynth","text":"","code":"lsoSynth"},{"path":"www.github.com/reference/lsoSynth.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthethic Regression Discontinuity Data — lsoSynth","text":"data.frame 40,403 rows 11 columns. R lhsgrade_pct nextGPA probation_year1 totcredits_year1 male loc_campus1 loc_campus2 bpl_north_america english age_at_entry","code":""},{"path":"www.github.com/reference/lsoSynth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthethic Regression Discontinuity Data — lsoSynth","text":"See \"Regression Discontinuity Designs\" vignette propertee website details original data, link code used generate synthethic data, detailed example.","code":""},{"path":"www.github.com/reference/sandwich_elements_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Estimate components of the sandwich covariance matrix returned by vcov_tee() — .get_a22_inverse","title":"(Internal) Estimate components of the sandwich covariance matrix returned by vcov_tee() — .get_a22_inverse","text":"(Internal) Estimate components sandwich covariance matrix returned vcov_tee()","code":""},{"path":"www.github.com/reference/sandwich_elements_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Estimate components of the sandwich covariance matrix returned by vcov_tee() — .get_a22_inverse","text":"","code":".get_a22_inverse(x, ...)  .get_a11_inverse(x)  .get_a21(x)  .get_tilde_a22_inverse(x, ...)  .get_tilde_a21(x)"},{"path":"www.github.com/reference/sandwich_elements_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Estimate components of the sandwich covariance matrix returned by vcov_tee() — .get_a22_inverse","text":"x fitted teeMod model ... arguments passed bread method","code":""},{"path":"www.github.com/reference/sandwich_elements_calc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Estimate components of the sandwich covariance matrix returned by vcov_tee() — .get_a22_inverse","text":".get_a22_inverse()/.get_tilde_a22_inverse(): \\(2\\times 2\\) matrix corresponding intercept treatment variable direct adjustment model .get_a11_inverse(): \\(p\\times p\\) matrix \\(p\\) dimension covariance adjustment model, including intercept .get_a21()/.get_tilde_a21(): \\(2\\times p\\) matrix number rows given intercept treatment variable direct adjustment model, number columns given dimension covariance adjustment model","code":""},{"path":"www.github.com/reference/sandwich_elements_calc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Estimate components of the sandwich covariance matrix returned by vcov_tee() — .get_a22_inverse","text":".get_a22_inverse()/.get_tilde_a22_inverse(): \\(A_{22}^{-1}\\) \"bread\" sandwich covariance matrix returned vcov_tee() whether one fit prior covariance adjustment model . .get_a11_inverse(): \\(A_{11}^{-1}\\) \"bread\" sandwich covariance matrix covariance adjustment model. matrix contributes meat matrix direct adjustment sandwich covariance matrix. .get_a21()/.get_tilde_a21(): \\(A_{21}\\) gradient estimating equations direct adjustment model taken respect covariance adjustment model parameters. matrix crossproduct prediction gradient units observation \\(\\mathcal{Q}\\) model matrix direct adjustment model.","code":""},{"path":"www.github.com/reference/show-Design-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a Design — show,Design-method","title":"Show a Design — show,Design-method","text":"Display information Design object","code":""},{"path":"www.github.com/reference/show-Design-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a Design — show,Design-method","text":"","code":"# S4 method for Design show(object)"},{"path":"www.github.com/reference/show-Design-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a Design — show,Design-method","text":"object Design object, usually result call rct_design(), obs_design(), rd_design().","code":""},{"path":"www.github.com/reference/show-Design-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a Design — show,Design-method","text":"object, invisibly.","code":""},{"path":"www.github.com/reference/show-WeightedDesign-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a WeightedDesign — show,WeightedDesign-method","title":"Show a WeightedDesign — show,WeightedDesign-method","text":"Prints weights WeightedDesign","code":""},{"path":"www.github.com/reference/show-WeightedDesign-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a WeightedDesign — show,WeightedDesign-method","text":"","code":"# S4 method for WeightedDesign show(object)"},{"path":"www.github.com/reference/show-WeightedDesign-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a WeightedDesign — show,WeightedDesign-method","text":"object WeightedDesign object","code":""},{"path":"www.github.com/reference/show-WeightedDesign-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a WeightedDesign — show,WeightedDesign-method","text":"invisible copy object","code":""},{"path":"www.github.com/reference/show-teeMod-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a teeMod — show,teeMod-method","title":"Show a teeMod — show,teeMod-method","text":"Display information teeMod object","code":""},{"path":"www.github.com/reference/show-teeMod-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a teeMod — show,teeMod-method","text":"","code":"# S4 method for teeMod show(object)"},{"path":"www.github.com/reference/show-teeMod-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a teeMod — show,teeMod-method","text":"object teeMod object, usually result call lmitt().","code":""},{"path":"www.github.com/reference/show-teeMod-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a teeMod — show,teeMod-method","text":"object, invisibly.","code":""},{"path":"www.github.com/reference/simdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated data — simdata","title":"Simulated data — simdata","text":"Simulated data use propertee package unit assignment level treatment assignment","code":""},{"path":"www.github.com/reference/simdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated data — simdata","text":"","code":"simdata"},{"path":"www.github.com/reference/simdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated data — simdata","text":"data.frame 100 rows 7 columns. uoa1 First level unit assignment ID uoa2 Second level unit assignment ID bid Block ID force Forcing variable z Binary treatment indicator o 4-level ordered treatment variable dose Dose treatment variable x predictor y outcome","code":""},{"path":"www.github.com/reference/studentdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Student data — schooldata","title":"Student data — schooldata","text":"example data sets stored two levels.","code":""},{"path":"www.github.com/reference/studentdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Student data — schooldata","text":"","code":"schooldata  studentdata"},{"path":"www.github.com/reference/studentdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Student data — schooldata","text":"Two data.frames, one school-level data (schooldata) including treatment assignment second student-level data (studentdata). schoolata: schoolid Unique school ID variable. treatment school intervention group? state State school . pct_disadvantage Percent student body flagged \"disadvantaged\". studentdata: id Unique student ID. schoolid Unique school ID variable. grade Student's grade, 3-5. gpa Student GPA prior year. math Standarized math score (100). object class data.frame 8713 rows 5 columns.","code":""},{"path":"www.github.com/reference/studentdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Student data — schooldata","text":"hypothetical data, schools randomly assignment treatment status, unit analysis students. Thus two data sets, one encoding school information (including treatment status) one encoding student information (include treatment status).","code":""},{"path":"www.github.com/reference/studentdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Student data — schooldata","text":"","code":"des <- obs_design(treatment ~ uoa(schoolid), data = schooldata)  # Treatment effect mod1 <- lmitt(math ~ 1, design = des, data = studentdata)  # Treatment effect by grade mod2 <- lmitt(math ~ as.factor(grade), design = des, data = studentdata)"},{"path":"www.github.com/reference/teeMod_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing teeMod objects — summary.teeMod","title":"Summarizing teeMod objects — summary.teeMod","text":"summary() method class teeMod","code":""},{"path":"www.github.com/reference/teeMod_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing teeMod objects — summary.teeMod","text":"","code":"# S3 method for teeMod summary(object, vcov.type = \"CR0\", ...)  # S3 method for summary.teeMod print(   x,   digits = max(3L, getOption(\"digits\") - 3L),   signif.stars = getOption(\"show.signif.stars\"),   ... )"},{"path":"www.github.com/reference/teeMod_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing teeMod objects — summary.teeMod","text":"object teeMod object vcov.type string indicating desired variance estimator. See vcov_tee() details accepted types. ... Additional arguments vcov_tee(), desired finite sample heteroskedasticity-robust standard error adjustment. x summary.teeMod object digits number significant digits use printing. signif.stars logical. ‘TRUE’, ‘significance stars’ printed coefficient.","code":""},{"path":"www.github.com/reference/teeMod_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing teeMod objects — summary.teeMod","text":"object class summary.teeMod","code":""},{"path":"www.github.com/reference/teeMod_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarizing teeMod objects — summary.teeMod","text":"teeMod object fit SandwichLayer offset, usual stats::summary.lm() output enhanced use covariance-adjusted sandwich standard errors, t-test values recalculated reflect new standard errors.","code":""},{"path":"www.github.com/reference/var_estimators.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance/Covariance for teeMod objects — vcov_tee","title":"Variance/Covariance for teeMod objects — vcov_tee","text":"Compute robust sandwich variance estimates optional covariance adjustment","code":""},{"path":"www.github.com/reference/var_estimators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance/Covariance for teeMod objects — vcov_tee","text":"","code":"vcov_tee(x, type = \"CR0\", cluster = NULL, ...)"},{"path":"www.github.com/reference/var_estimators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance/Covariance for teeMod objects — vcov_tee","text":"x fitted teeMod model type string indicating desired variance estimator. See Details supported variance estimators cluster string character vector column names indicating columns cluster standard errors . prior covariance adjustment, columns must appear covariance adjustment direct adjustment samples. Default NULL, uses unit assignment columns Design slot teeMod model. ... arguments passed internal variance estimation function.","code":""},{"path":"www.github.com/reference/var_estimators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variance/Covariance for teeMod objects — vcov_tee","text":"\\(2\\times 2\\) matrix corresponding intercept treatment variable direct adjustment model","code":""},{"path":"www.github.com/reference/var_estimators.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Variance/Covariance for teeMod objects — vcov_tee","text":"Supported type include: \"MB0\", \"HC0\", \"CR0\" model-based HC0 standard errors \"MB1\", \"HC1\", \"CR1\" model-based standard errors HC1 corrections based direct adjustment estimate .e., \\(n/(n - 2)\\) \"MB1\" \"HC1\", \"CR1\", \\(g\\cdot(n-1)/((g-1)\\cdot(n-2))\\), \\(g\\) number clusters direct adjustment sample. create type, simply define function .vcov_XXX. type = \"XXX\" now use method. method return matrix appropriate dimension, attribute type = \"XXX\".","code":""},{"path":"www.github.com/reference/vcov.teeMod.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute variance-covariance matrix for fitted teeMod model — vcov.teeMod","title":"Compute variance-covariance matrix for fitted teeMod model — vcov.teeMod","text":"S3method stats::vcov computes standard errors teeMod models using vcov_tee().","code":""},{"path":"www.github.com/reference/vcov.teeMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute variance-covariance matrix for fitted teeMod model — vcov.teeMod","text":"","code":"# S3 method for teeMod vcov(object, ...)"},{"path":"www.github.com/reference/vcov.teeMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute variance-covariance matrix for fitted teeMod model — vcov.teeMod","text":"object fitted teeMod model ... additional arguments vcov_tee().","code":""},{"path":"www.github.com/reference/vcov.teeMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute variance-covariance matrix for fitted teeMod model — vcov.teeMod","text":"\\(2\\times 2\\) matrix corresponding intercept treatment variable direct adjustment model","code":""},{"path":"www.github.com/reference/vcov.teeMod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute variance-covariance matrix for fitted teeMod model — vcov.teeMod","text":"vcov.teeMod() wraps around vcov_tee(), additional arguments passed ... passed vcov_tee() call. See documentation vcov_tee() information necessary arguments.","code":""},{"path":"www.github.com/reference/weights-WeightedDesign-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Weights from WeightedDesign — weights,WeightedDesign-method","title":"Extract Weights from WeightedDesign — weights,WeightedDesign-method","text":"WeightedDesign object contains numeric vector additional slots, extracts numeric vector.","code":""},{"path":"www.github.com/reference/weights-WeightedDesign-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Weights from WeightedDesign — weights,WeightedDesign-method","text":"","code":"# S4 method for WeightedDesign weights(object, ...)"},{"path":"www.github.com/reference/weights-WeightedDesign-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Weights from WeightedDesign — weights,WeightedDesign-method","text":"object WeightedDesign object ... Ignored","code":""},{"path":"www.github.com/reference/weights-WeightedDesign-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Weights from WeightedDesign — weights,WeightedDesign-method","text":"numeric vector weights","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"bug-fixes-0-4-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"propertee 0.4.1","text":"Fixed bug use dichotomy moderator variables lmitt() lead errors due long formula.","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"new-features-0-4-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"propertee 0.4.0","text":"lmitt(), weights calculation functions ate() ett(), assignment vector generation function assigned() now accept dichotomy argument can used studies time-varying treatment assignment. Design object, unlike , carry information dichotomization. Instead, information stored reflecting units assigned treatment (assigned treatment) leveraged create inverse probability assignment weights assignment indicators datasets longitudinal data study units.","code":""},{"path":"www.github.com/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"propertee 0.4.0","text":"Standard error calculations longer error column used uniquely identify rows covariance adjustment effect estimation sample distinguished information Design alone","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"bug-fixes-0-3-10","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"propertee 0.3.10","text":"Linking unit assignments clusters variance estimation longer errors Design objects created tibble cov_adj() error covariance adjustment models fit robustbase::glmrob()","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"bug-fixes-0-3-9","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"propertee 0.3.9","text":"Scaling constants updated estfun.teeMod() account previously missing factor sqrt(n / n_C) applied contributions covariance adjustment model estimating equations","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"breaking-changes-0-3-8","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"propertee 0.3.8","text":"model-based standard errors clustered level assignment called blocked design, vcov_tee() clusters units assignment small blocks, blocks one treated control unit, together.","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"breaking-changes-0-3-7","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"propertee 0.3.7","text":"vcov_tee() scales estimating equations using different constants ","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"bug-fixes-0-3-6","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"propertee 0.3.6","text":"Previous procedure aligning contributions estimating equations first-stage second-stage models failed column(s) used alignment NA’s. Outputs vcov_tee() liable change call call result. fixed.","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"improvements-0-3-5","dir":"Changelog","previous_headings":"","what":"Improvements","title":"propertee 0.3.5","text":"Diagonal elements vcov_tee() matrices lacking sufficient degrees freedom estimation returned NA’s rather numeric zeros. deviation sandwich package aims provide clarity results may otherwise appear negative diagonal elements vcov matrix","code":""},{"path":"www.github.com/news/index.html","id":"bug-fixes-0-3-5","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"propertee 0.3.5","text":"lmitt() called blocked design absorb=TRUE, block-centered assignment , applicable, moderator assignment:moderator interaction columns, longer centered grand mean column. ensures blocks satisfy positivity assignment variable (positivity within factor level) contribute effect estimation lmitt() now accepts references formula objects","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"improvements-0-3-4","dir":"Changelog","previous_headings":"","what":"Improvements","title":"propertee 0.3.4","text":"Computational performance estfun.teeMod improved","code":""},{"path":"www.github.com/news/index.html","id":"bug-fixes-0-3-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"propertee 0.3.4","text":"errors due --hood duplication moderator variable absorb=TRUE estimates corrected case observations stratum 0 weights due treated control units assignment existing stratum","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"added-features-0-3-3","dir":"Changelog","previous_headings":"","what":"Added Features","title":"propertee 0.3.3","text":"vcov_tee() can accept user-created variance estimation functions start prefix .vcov_; type argument take rest function name input Variance estimation robust GLM’s (models fit using robustbase::glmrob) now accommodated HC1 variance estimates now accommodated","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"added-features-0-3-2","dir":"Changelog","previous_headings":"","what":"Added Features","title":"propertee 0.3.2","text":"Effect estimation continuous moderator variables now supported","code":""},{"path":"www.github.com/news/index.html","id":"non-breaking-changes-0-3-2","dir":"Changelog","previous_headings":"","what":"Non-Breaking Changes","title":"propertee 0.3.2","text":"vcov_tee() return NA’s entries covariance matrix lack sufficient degrees freedom estimate. Informative warnings accompany matrix, indicating standard errors NA’d .","code":""},{"path":"www.github.com/news/index.html","id":"bug-fixes-0-3-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"propertee 0.3.2","text":"Functions generating weights, ate() ett(), return weights 0 rather infinity blocks contain treated units control units. Prior covariate adjustment fits previously incorporated variance estimation differently depending whether one created SandwichLayer object calling lmitt() called cov_adj() offset argument lmitt() call. corrected, ways return variance estimates. Covariate adjustment models admit rectangular bread matrices, produced robustbase::lmrob, now accommodated given reformulated estimating equations versions v0.1.1 later. contrasts error raised model.matrix() certain cov_adj() calls resolved.","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"breaking-changes-0-3-1","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"propertee 0.3.1","text":"now order teeMod objects’ matrix estimating equations based user-specified ID columns unit assignment ID’s. stats::update function can longer called teeMod objects.","code":""},{"path":"www.github.com/news/index.html","id":"non-breaking-changes-0-3-1","dir":"Changelog","previous_headings":"","what":"Non-Breaking Changes","title":"propertee 0.3.1","text":"teeMod objects now lmitt_call slots. summary calls teeMod objects accept vcov.type arguments specify desired standard error calculation shown output. Acceptable types follow documentation vcov_tee. Shown printed teeMod objects return comprehensible labels ITT effect outputs.","code":""},{"path":"www.github.com/news/index.html","id":"r-version-compatibility-0-3-1","dir":"Changelog","previous_headings":"","what":"R Version Compatibility","title":"propertee 0.3.1","text":"Now compatible R 4.3. Particularly, advise users working R 4.3 avoid expand.model.frame calls teeMod objects instead use internal function .expand.model.frame_teeMod necessary.","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"breaking-changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"propertee 0.2.1","text":"Stratum fixed effects subgroup moderating effects can now accounted via absorb argument. Previous versions properly support functionality. Valid standard errors absorption, however, confirmed.","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"breaking-changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"propertee 0.1.1","text":"reformulated estimating equations used derive standard errors. estimation settings accommodate, testing revealed differences standard error estimates previous current estimating equations, assure case possible situations.","code":""},{"path":"www.github.com/news/index.html","id":"propertee-001","dir":"Changelog","previous_headings":"","what":"propertee 0.0.1","title":"propertee 0.0.1","text":"Compatible R 4.2.3 Introduces functionality direct adjusted design-informed standard errors accommodating covariance adjustment model-based setting Cluster-robust standard errors can estimated using HC0 estimator","code":""}]
