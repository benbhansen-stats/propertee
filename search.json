[{"path":"www.github.com/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 propertee authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"www.github.com/articles/RDD.html","id":"data-and-studyspecification","dir":"Articles","previous_headings":"","what":"Data and StudySpecification","title":"Regression Discontinuity StudySpecifications","text":"data example randomly simulated using synthpop package R based data originally collected Lindo, Sanders, Oreopoulos (2010; hereafter LSO). (original real data can found ; code simulate fake data can found .) major public university, students cumulative grade point average (GPA) pre-specified cutoff placed academic probation (AP). Students AP given extra support, threatened suspension GPAs improve. See LSO details. Along LSO, consider students end first year university. university consisted three campuses, AP cutoff varied campus. simplify matters, centered student‚Äôs first year GPA campus‚Äôs cutoff, creating new variable Ri‚â°GPAi‚àíccampus[]R_i\\equiv GPA_i -c_{campus[]}, GPAiGPA_i student ii‚Äôs first-year GPA, ccampus[]c_{campus[]} AP cutoff student ii‚Äôs campus. student ii placed AP Ri<0R_i<0 avoids AP Ri‚â•0R_i\\ge 0. attempt estimate average effect AP placement nextGPA, students‚Äô subsequent GPA (either summer following academic semester). figure plots average nextGPA students distinct R values (.e.¬†centered first-year GPA). cutoff AP, 0, denoted dotted line. sizes points proportional natural log numbers students unique value R.","code":"data(lsoSynth) figDat <- aggregate(lsoSynth[,c('nextGPA','lhsgrade_pct')],by=list(R=lsoSynth$R),                     FUN=mean,na.rm=TRUE) figDat$n <- as.vector(table(lsoSynth$R))  with(figDat,      plot(R,nextGPA,cex=log(n+1)/3,main='Average Subsequent GPA\\n as a function of 1st-Year GPA,\\n Centered at AP Cutoff')) abline(v=0,lty=2)"},{"path":[]},{"path":"www.github.com/articles/RDD.html","id":"regression-discontinuity-studyspecifications","dir":"Articles","previous_headings":"Background","what":"Regression Discontinuity StudySpecifications","title":"Regression Discontinuity StudySpecifications","text":"characterizes discontinuity (RD) specifications, including LSO study, treatment assigned function numeric ‚Äúrunning variable‚Äù RR, along prespecified cutoff value cc, treatment assigned subjects ii Ri>cR_i>c, Ri<cR_i<c. ZiZ_i denote‚Äôs ii‚Äôs treatment assignment, write Zi=ùüè{Ri<c}Z_i=\\mathbf{1}\\{R_i<c\\} ùüè{Ri<c}\\mathbf{1}\\{R_i<c\\}, ùüè{x}\\mathbf{1}\\{x\\} indicator function‚Äìequal 1 xx true 0 otherwise. LSO study, ii indexes students, centered first-year GPA $R_i $ running variable, treatment study AP placement. $ Z_i={R_i<0} $. (‚Äúfuzzy‚Äù RD specifications, RR‚Äôs value relative cc doesn‚Äôt completely determine treatment, merely affects probability treatment, subjects , say, Ri>cR_i>c likely treated Ri<cR_i<c; fuzzy RD specifications, Zi=ùüè{Ri>c}Z_i=\\mathbf{1}\\{R_i>c\\} typically modeled instrument treatment receipt.) RD specifications hold privileged place causal inference, unlike observational study specifications, mechanism treatment assignment known. , RR confounder. hand, since ZZ completely determined RR, subjects values RR different values ZZ, common observational study techniques, matching RR, impossible. Instead, necessary adjust RR modeling‚Äìtypically regression.","code":""},{"path":"www.github.com/articles/RDD.html","id":"analyzing-rd-studyspecifications-with-ancova","dir":"Articles","previous_headings":"Background","what":"Analyzing RD StudySpecifications with ANCOVA","title":"Regression Discontinuity StudySpecifications","text":"Traditionally, typical way analyze data RD specifications ANCOVA, fitting regression model Yi=Œ≤0+Œ≤1Ri+Œ≤2Zi+œµiY_i=\\beta_0+\\beta_1R_i+\\beta_2Z_i+\\epsilon_i YiY_i outcome interest measured subject ii (example nextGPA), œµi\\epsilon_i random regression error. , regression coefficient ZZ, Œ≤2\\beta_2, taken estimate treatment effect. Common methodological updates ANCOVA approach include interaction term ZiZ_i RiR_i, substitution semi-parametric regression, local linear polynomial models, linear ordinary least squares. suitable conditions, ANCOVA model said estimate ‚ÄúLocal Average Treatment Effect‚Äù (LATE). Y1Y_1 Y0Y_0 potential outcomes YY, LATE defined limr‚Üíc+E(Y1|R=r)‚àílimr‚Üíc‚àíE(Y0|R=r)\\displaystyle\\lim_{r\\rightarrow c^+} E(Y_1|R=r)-\\displaystyle\\lim_{r\\rightarrow c^-} E(Y_0|R=r) equivalently limŒî‚Üí0+E(Y1‚àíY0|R‚àà(c‚àíŒî,c+Œî))\\displaystyle\\lim_{\\Delta\\rightarrow 0^+} E(Y_1-Y_0 |R\\(c-\\Delta,c+\\Delta)) EE denotes expectation‚Äì, LATE limit average treatment effects subjects RR ever-shrinking regions around cc. Among considerations, LATE target suggests data analysts restrict attention subjects RR falling within bandwidth b>0b>0 cc, e.g.¬†fitting model subjects ii within ‚Äúwindow analysis‚Äù ùí≤={:Ri‚àà(c‚àíb,c+b)}\\mathcal{W}=\\{:R_i\\(c-b,c+b)\\}. number methods proposed select bb, including cross validation, non-parametric modeling second derivative f(r)=E(Y|R=r)f(r)=E(Y|R=r), specification tests.","code":""},{"path":"www.github.com/articles/RDD.html","id":"the-propertee-approach-to-rd-studyspecifications","dir":"Articles","previous_headings":"Background","what":"The propertee Approach to RD StudySpecifications","title":"Regression Discontinuity StudySpecifications","text":"propertee approach RD specifications breaks data analysis three steps: Conduct specification tests choose bandwidth b>0b>0, along , possibly, data exclusions, resulting analysis sample WW. Fit covariance model Yi0=g(Ri,xi;Œ≤)Y_{i0}=g(R_i,x_i;\\beta), modeling Yi0Y_{i0} function running variable RiR_i (optionally) covariates ùê±i\\mathbf{x}_i. Fitting covariance model control subjects, specifications, entail extrapolation model fit subjects Ri‚àà(c‚àíb,c)R_i\\(c-b,c) subjects Ri‚àà(c,c+b)R_i\\(c,c+b), vice-versa, undesirable. Instead, fit covariance model full analysis sample ùí≤\\mathcal{W}, including treated untreated subjects. However, since interested modeling Y0Y_0, Y1Y_1 YY, rather fitting g(‚ãÖ)g(\\cdot), fit extended model gÃÉ(Ri,xi,Zi;Œ≤,Œ≥)=g(Ri,xi;Œ≤)+Œ≥Zi\\tilde{g}(R_i,x_i,Z_i;\\beta,\\gamma)=g(R_i,x_i;\\beta)+\\gamma Z_i including term treatment assignment. estimate Œ≥\\gamma , essence, provisional estimate treatment effect. Let YÃÇi0=g(Ri,xi;Œ≤ÃÇ)\\widehat{Y}_{i0}=g(R_i,x_i;\\hat{\\beta}), using model Y0Y_0‚Äîincluding term ZZ‚Äîalong Œ≤ÃÇ\\hat{\\beta} estimated step 2. estimate average treatment effect subjects WW using difference means estimator: dŒ≤ÃÇ=‚àë‚ààWZi(Yi‚àíYÃÇi0)‚àë‚ààWZi‚àí‚àë‚ààW(1‚àíZi)(Yi‚àíYÃÇi0)‚àë‚ààW(1‚àíZi) d_{\\hat{\\beta}}=\\frac{\\sum_{\\W} Z_i(Y_i-\\widehat{Y}_{i0})}{\\sum_{\\W} Z_i}-\\frac{\\sum_{\\W} (1-Z_i)(Y_i-\\widehat{Y}_{i0})}{\\sum_{\\W} (1-Z_i)} estimator dŒ≤ÃÇd_{\\hat{\\beta}} consistent model g(Ri,xi;Œ≤0)g(R_i,x_i;\\beta_0), Œ≤0\\beta_0 probability limit Œ≤ÃÇ\\hat{\\beta}, successfully removes confounding due RR, .e.¬†Y0‚àíg(Ri,xi;Œ≤0)‚ä•‚ä•ZY_0-g(R_i,x_i;\\beta_0) \\perp \\!\\!\\! \\perp Z ‚ààùí≤i\\\\mathcal{W}.","code":""},{"path":[]},{"path":"www.github.com/articles/RDD.html","id":"determining-the-window-of-analysis","dir":"Articles","previous_headings":"Analyzing an RD specification in propertee","what":"Determining the window of analysis","title":"Regression Discontinuity StudySpecifications","text":"extensive literature determining appropriate window analysis RD specification. See, instance, Imbens Kalyanaraman (2012) Sales Hansen (2020). stage analysis beyond scope vignette, require propertee package. purpose example, focus analysis ùí≤={:Ri‚àà[‚àí0.5,0.5]}\\mathcal{W}=\\{:R_i\\[-0.5,0.5]\\}.","code":""},{"path":"www.github.com/articles/RDD.html","id":"initializing-the-rd-studyspecification-object","dir":"Articles","previous_headings":"Analyzing an RD specification in propertee","what":"Initializing the RD StudySpecification Object","title":"Regression Discontinuity StudySpecifications","text":"general, propertee specification objects require users specify unit assignment variable, corresponds level treatment assignment‚Äìwords, units assigned conditions. necessary combining results across different models datasets, estimating correct specification-based standard errors. lsoSynth, clusters, individual students assigned academic probation individual basis. dataset include ID variable, variable takes unique value row . use row-names. Defining RD specification requires, minimum, identifying running variable(s) RR, well RR determines treatment assignment. example,","code":"lsoSynth$id <- rownames(lsoSynth) lsoSynth$Z <- lsoSynth$R<0  lsoSynthW <- subset(lsoSynth,abs(R)<=0.5)  #lsoSynthW$id <- 1:nrow(lsoSynthW) spec <- rd_spec(Z ~ forcing(R) + unitid(id), data=lsoSynth, subset=abs(lsoSynth$R) <= 0.5)"},{"path":"www.github.com/articles/RDD.html","id":"modeling-y_c-as-a-function-of-r","dir":"Articles","previous_headings":"Analyzing an RD specification in propertee","what":"Modeling YCY_C as a function of RR","title":"Regression Discontinuity StudySpecifications","text":"consider two potential models gÃÉ(‚ãÖ)\\tilde{g}(\\cdot) YCY_C function RR. First, standard OLS model: second bounded-influence polynomial model type recommended Sales & Hansen (2020): [Put something evaluating ?]","code":"### this doesn't work: g1 <- lm(nextGPA ~ R + Z, data = lsoSynth, weights = ett(spec) ##this works, but it's annoying to enter in the subset expression a 2nd time: g1 <- lm(nextGPA ~ R + Z, data = lsoSynth, subset = abs(R) <= 0.5) g2 <- if(requireNamespace(\"robustbase\", quietly = TRUE)){   robustbase::lmrob(nextGPA~poly(R,5)+Z,data=lsoSynthW) } else g1"},{"path":"www.github.com/articles/RDD.html","id":"estimating-effects","dir":"Articles","previous_headings":"Analyzing an RD specification in propertee","what":"Estimating Effects","title":"Regression Discontinuity StudySpecifications","text":"","code":"yhat1 <- predict(g1,data.frame(R=forcings(spec)[[1]],Z=FALSE)) yhat2 <- predict(g2,data.frame(R=forcings(spec)[[1]],Z=FALSE))  plot(yhat1,yhat2) ### method 1:  mean(lsoSynthW$nextGPA[lsoSynthW$Z]-yhat1[lsoSynthW$Z])-   mean(lsoSynthW$nextGPA[!lsoSynthW$Z]-yhat1[!lsoSynthW$Z]) #> [1] 0.2553202  #### method 2: coef(lm(nextGPA~Z, offset=yhat1,data=lsoSynthW))['ZTRUE'] #>     ZTRUE  #> 0.2553202 ### method 1:  mean(lsoSynthW$nextGPA[lsoSynthW$Z]-yhat2[lsoSynthW$Z])-   mean(lsoSynthW$nextGPA[!lsoSynthW$Z]-yhat2[!lsoSynthW$Z]) #> [1] 0.2295554  #### method 2: coef(lm(nextGPA~Z, offset=yhat2,data=lsoSynthW))['ZTRUE'] #>     ZTRUE  #> 0.2295554"},{"path":"www.github.com/articles/geex_vs_propertee.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"propertee vs. geex","text":"provide basic validation model-based sandwich standard errors provided comparing estimates package (Saul Hudgens, 2020). two examples, one one without clustering, estimate standard error intent--treat (ITT) effect estimate adjusted covariates using prior covariance model. M-estimation framework, prior covariance model defines one set estimating equations, covariate-adjusted intent--treat effect estimate defines another. One can stack togther use package obtain joint estimates model coefficients ITT effect, one can fit covariance model first, use package feed necessary information first-stage estimating equations variance estimation ITT effect estimate. demonstrate equivalence two appraoches .","code":""},{"path":"www.github.com/articles/geex_vs_propertee.html","id":"example-with-non-clustered-data","dir":"Articles","previous_headings":"","what":"Example with non-clustered data","title":"propertee vs. geex","text":"","code":"set.seed(980) n <- 60 cmod_df <- data.frame(   \"uid\" = seq_len(n),   \"z\" = c(rep(0, 3 * n/4), rep(1, n/4)),   \"x1\" = rnorm(n, sd = 2),   \"x2\" = rep(c(rep(0, n/4), rep(1, n/4)), 2) ) eps <- rnorm(nrow(cmod_df)) theta <- c(75, 0.1, -0.5, 2.5) cmod_df$y <- model.matrix(~ x1 + x2 + z, cmod_df) %*% theta + eps  cmod_df$in_q <- c(rep(0, n/2), rep(1, n/2)) q_df <- cmod_df[cmod_df$in_q == 1,]  cmod <- lm(y ~ x1 + x2, cmod_df) spec <- rct_spec(z ~ unitid(uid), q_df) damod <- lmitt(y ~ 1, specification = spec, data = q_df, weights = ate(spec), offset = cov_adj(cmod))  estFun <- function(data){   function(theta) {     # covariance model eqns     Xstar <- model.matrix(y ~ x1 + x2, data)     cmod_eqns <- drop(data$y - Xstar %*% theta[1:3]) * Xstar      # itt model eqns     X <- model.matrix(y ~ x1 + x2, data)     Z <- model.matrix(y ~ z, data)     if (data$in_q == 1) {       damod_eqns <- drop(data$weight * (data$y - X %*% theta[1:3] - Z %*% theta[4:5])) * Z     } else {       damod_eqns <- rep(0, 2)     }      out <- c(cmod_eqns, damod_eqns)     return(out)   } }  geexRes <- geex::m_estimate(estFun,                             data = cbind(cmod_df,                                          \"weight\" = c(rep(1, n/2), ate(spec, data = q_df))),                             root_control = geex::setup_root_control(start = rep(0.1,5))) print(paste(\"geex estimate of var(tau_hat):\", round(geexRes@vcov[5,5], 8))) print(paste(\"propertee estimate of var(tau_hat):\",             round(vcov_tee(damod, type = \"CR0\", cadjust = FALSE)[2,2], 8)))"},{"path":"www.github.com/articles/geex_vs_propertee.html","id":"example-with-clustered-data","dir":"Articles","previous_headings":"","what":"Example with clustered data","title":"propertee vs. geex","text":"","code":"set.seed(50) nc <- 4 mi <- 20 cmod_df <- data.frame(   \"cid\" = rep(seq_len(4), each = mi),   \"uid\" = rep(seq_len(mi), nc),   \"z\" = c(rep(0, 3 * mi), rep(1, mi)),   \"x1\" = rbinom(nc * mi, 1, 0.5),   \"x2\" = rnorm(nc * mi) )  theta <- c(75, 7.5, -1, 2.5) error_sd <- round(runif(nc, 1, 3), 1) icc <- 0.2 eps <- rnorm(nrow(cmod_df)) Sigma <- matrix(0, nrow = nrow(cmod_df), ncol = nrow(cmod_df)) for (i in (seq_len(nc) - 1)) {   msk <- cmod_df$cid == (i + 1)   Sigma[msk, msk] <- diag(error_sd[i + 1] - icc, nrow = sum(msk)) + icc } A <- chol(Sigma) eps <- t(A) %*% eps cmod_df$y <- model.matrix(~ x1 + x2 + z, cmod_df) %*% theta + eps  cmod_df$in_q <- c(rep(0, mi), rep(1, 3 * mi)) q_df <- cmod_df[cmod_df$in_q == 1,]  cmod <- lm(y ~ x1 + x2, cmod_df) spec <- rct_spec(z ~ cluster(cid), q_df) damod <- lmitt(y ~ 1, specification = spec, data = q_df, weights = ate(spec), offset = cov_adj(cmod))  clusterEstFunc <- function(data){   function(theta) {     # covariance model eqns     Xstar <- model.matrix(y ~ x1 + x2, data)     cmod_agg_func <- ifelse(dim(Xstar)[2] > 1, colSums, sum)     cmod_eqns <- cmod_agg_func(drop(data$y - Xstar %*% theta[1:3]) * Xstar)      # itt model eqns     X <- model.matrix(y ~ x1 + x2, data)     Z <- model.matrix(y ~ z, data)     damod_agg_func <- ifelse(dim(Z)[2] > 1, colSums, sum)     if (unique(data$in_q) == 1) {       damod_eqns <- damod_agg_func(         drop(data$weight * (data$y - X %*% theta[1:3] - Z %*% theta[4:5])) * Z)     } else {       damod_eqns <- rep(0, 2)     }      out <- c(cmod_eqns, damod_eqns)     return(out)   } }  geexRes <- geex::m_estimate(clusterEstFunc,                             data = cbind(cmod_df,                                          \"weight\" = c(rep(1, mi), ate(spec, data = q_df))),                             units = \"cid\",                             root_control = geex::setup_root_control(start = rep(0.1,5)))  print(paste(\"geex estimate of var(tau_hat):\", round(geexRes@vcov[5,5], 8))) print(paste(\"propertee estimate of var(tau_hat):\",             round(vcov_tee(damod, type = \"CR0\", cadjust = FALSE)[2,2], 8)))"},{"path":"www.github.com/articles/geex_vs_propertee.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"propertee vs. geex","text":"Saul BC, Hudgens MG (2020). ‚ÄúCalculus M-Estimation R geex.‚Äù Journal Statistical Software, 92(2), 1‚Äì15. doi: 10.18637/jss.v092.i02.","code":""},{"path":"www.github.com/articles/intro-to-propertee.html","id":"main-features","dir":"Articles","previous_headings":"","what":"Main Features","title":"Introduction to propertee","text":"propertee package, Prognostic Regression Offsets Propagation ERrors (Treatment Effect Estimation), facilitates direct adjustment experiments observational studies specification-informed standard errors flexible options covariance adjustment. uses explicit specification study specification provide probability assignment weights standard errors appropriately reflect specification. covariance adjustment Hajek (one-way) fixed effects estimates, enables offsetting outcome predictions dedicated covariance model, standard error calculations propagating error appropriate covariance model. main workflow consists two main steps one optional step: Generate StudySpecification object encodes study specification, including unit assignment, treatment status unit assignment, optionally block information. accomplished obs_spec(), rct_spec() rd_spec() functions. Optionally, fit covariate adjustment model. Fit model estimate treatment effect, accounting specification information, optionally covariate adjustment. done via lmitt() function.","code":""},{"path":"www.github.com/articles/intro-to-propertee.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example Data","title":"Introduction to propertee","text":"example dataset comes state Tennessee‚Äôs Student-Teacher Achievement Ratio (STAR) experiment. Students randomly assigned three possible classroom conditions: small (13 17 students per teacher), regular class (22 25 students per teacher), regular--aide class (22 25 students full-time teacher‚Äôs aide). simplicity first example, examine single binary treatment - ‚Äúsmall‚Äù classrooms versus ‚Äúregular‚Äù ‚Äúregular+aide‚Äù classrooms. basic example, see propertee makes easy handle non-binary treatment variables introducing dichotomys. outcome interest reading score end kindergarten. students blocked schools via schoolidk variable: Students assigned units, need unique identifier per student. currently exist, can easily generated:","code":"data(STARdata) table(STARdata$stark) #>  #>      regular        small regular+aide  #>         2194         1900         2231 STARdata$starkbinary <- STARdata$stark == \"small\" table(STARdata$starkbinary) #>  #> FALSE  TRUE  #>  4425  1900 summary(STARdata$readk) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>   315.0   414.0   433.0   436.7   453.0   627.0    5809 length(unique(STARdata$schoolidk)) #> [1] 80 head(table(STARdata$schoolidk)) #>  #>   1   2   3   4   5   6  #>  74  54 100  60  61  54 STARdata$studentid <- seq_len(nrow(STARdata)) head(STARdata$studentid) #> [1] 1 2 3 4 5 6"},{"path":[]},{"path":"www.github.com/articles/intro-to-propertee.html","id":"defining-the-studyspecification","dir":"Articles","previous_headings":"A Basic Example","what":"Defining the StudySpecification","title":"Introduction to propertee","text":"three _spec functions (rct_spec(), obj_spec(), rd_spec()) operate similarly. first argument important, encodes specification information use formula. left-hand side formula identifies treatment variable. right-hand side formula consists following potential pieces information: unit_of_assignment(): identifies variable(s) indicate units assignment. required specifications. alias uoa() can used place. block(): identifies variable(s) contain block information. Optional. forcing(): regression discontinuity specifications (rd_spec()), identifies variable(s) contain forcing information. define StudySpecification example: one variable needed identify unit assignment, block, forcing, can included. example, perhaps schoolidk may unique within district, potentially unique across districts. ‚Äôd use something like block(districtid, schoolidk) _spec function.","code":"spec <- obs_spec(starkbinary ~ unit_of_assignment(studentid) + block(schoolidk),                   data = STARdata, na.fail = FALSE) summary(spec) #> Observational Study #>  #>  Structure          Variables   #>  ---------          ---------   #>  Treatment          starkbinary #>  Unit of Assignment studentid   #>  Block              schoolidk   #>  #> Number of units per Treatment group:  #>  Txt Grp Num Units #>    FALSE      4425 #>     TRUE      1900"},{"path":"www.github.com/articles/intro-to-propertee.html","id":"estimating-the-treatment-effect","dir":"Articles","previous_headings":"A Basic Example","what":"Estimating the treatment effect","title":"Introduction to propertee","text":"main function estimating treatment effects lmitt() function. takes three main required arguments: formula specifying outcome desired treatment effect. data set containing outcome information. StudySpecification. Note data set need data set generated StudySpecification; however need include variables identify units assignment. (variable names differ, = argument can used link , though recommend renaming reduce likelihood issues.) example, may one dataset containing school-level information, separate dataset containing student-level information. Assume school unit assignment. course merge two data-sets, propertee can instead use school-level data define StudySpecification, student-level data estimate treatment effect. formula entering lmitt() can take one two forms: estimate main treatment effect outcome variable y, estimate subgroup specific treatment effects level x outcome y, x categorical. continuous x, main effect treatment-x interaction effect estimated. Therefore, estimate treatment effect example, can run: data includes ethnicity; can estimate subgroup effects ethnicity:","code":"y ~ 1 y ~ x te <- lmitt(readk ~ 1, data = STARdata, specification = spec) #> The StudySpecification object contains block-level information, but it is not used in this model. Block information is used when weights are defined via `ate()` or `ett()` or if the `absorb=TRUE` argument is passed. summary(te) #>  #> Call: #> lmitt(readk ~ 1, data = STARdata, specification = spec) #>  #>  Treatment Effects : #>                  Estimate Std. Error t value Pr(>|t|)     #> starkbinary.TRUE   5.4632     0.9207   5.934 3.13e-09 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Std. Error calculated via type \"CR0\" te_s <- lmitt(readk ~ ethnicity, data = STARdata, specification = spec) #> The StudySpecification object contains block-level information, but it is not used in this model. Block information is used when weights are defined via `ate()` or `ett()` or if the `absorb=TRUE` argument is passed. summary(te_s) #> Warning: The following subgroups do not have sufficient degrees of freedom for #> standard error estimates and will be returned as NA: ethnicityamindian #>  #> Call: #> lmitt(readk ~ ethnicity, data = STARdata, specification = spec) #>  #>  Treatment Effects : #>                                    Estimate Std. Error t value Pr(>|t|)     #> starkbinary.TRUE_ethnicitycauc        4.717      1.147   4.112 3.97e-05 *** #> starkbinary.TRUE_ethnicityafam        6.607      1.468   4.500 6.94e-06 *** #> starkbinary.TRUE_ethnicityasian      -9.939     21.021  -0.473   0.6364     #> starkbinary.TRUE_ethnicityhispanic   35.667     18.635   1.914   0.0557 .   #> starkbinary.TRUE_ethnicityamindian   19.000         NA      NA       NA     #> starkbinary.TRUE_ethnicityother      13.333     26.857   0.496   0.6196     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Std. Error calculated via type \"CR0\""},{"path":"www.github.com/articles/intro-to-propertee.html","id":"including-specification-weights","dir":"Articles","previous_headings":"A Basic Example","what":"Including specification weights","title":"Introduction to propertee","text":"Study specification weights can easily included estimation. propertee supports average treatment effect (ATE) effect treatment treated (ETT) weights. include one weights, simply include weights = \"ate\" weights = \"ett\" argument lmitt(): Internally, call ate() ett() functions can used directly. included inside lmitt(), need specify additional arguments ate() ett(), enabling easy functions weights. example weight variable, say wgt, include weights = wgt*ate() lmitt() call.","code":"lmitt(readk ~ 1, data = STARdata, specification = spec, weights = \"ate\") #> starkbinary.TRUE  #>         6.116683 lmitt(readk ~ 1, data = STARdata, specification = spec, weights = \"ett\") #> starkbinary.TRUE  #>         5.650771 head(ate(spec, data = STARdata)) #> [1] 0.000000 3.965517 4.705882 0.000000 1.445946 0.000000"},{"path":"www.github.com/articles/intro-to-propertee.html","id":"covariance-adjustment-models","dir":"Articles","previous_headings":"A Basic Example","what":"Covariance Adjustment models","title":"Introduction to propertee","text":", lmitt() allow covariates; e.g.¬†something like lmitt(y ~ 1 + control_var,... fail. adjust covariates, separate covariate model fit. model supports predict() function work. cov_adj() function can used process covariance adjustment model produce required values; output can passed offset=. Similarly weight functions, cov_adj() attempts locate correct arguments (case, mainly data= argument) use model command; cov_adj() fall back using data covariance model, safer use newdata= argument calling cov_adj() outside model. Also, similarly weights, cov_adj() can used normal modeling commands well.","code":"camod <- lm(readk ~ gender + birth + lunchk, data = STARdata) lmitt(readk ~ 1, data = STARdata, specification = spec,       weights = \"ate\", offset = cov_adj(camod)) #> Warning in validityMethod(object): Some covariance adjustments are NA; be #> careful of dropping these observations when fitting the ITT effect model #> starkbinary.TRUE  #>         6.050889 head(cov_adj(camod, newdata = STARdata)) #> [1]       NA 448.8500 450.2802       NA 425.4395       NA lm(readk ~ starkbinary, data = STARdata, weights = ate(spec),    offset = cov_adj(camod)) #> Warning in validityMethod(object): Some covariance adjustments are NA; be #> careful of dropping these observations when fitting the ITT effect model #>  #> Call: #> lm(formula = readk ~ starkbinary, data = STARdata, weights = ate(spec),  #>     offset = cov_adj(camod)) #>  #> Coefficients: #>     (Intercept)  starkbinaryTRUE   #>          -1.684            6.051"},{"path":"www.github.com/articles/intro-to-propertee.html","id":"absorbing-blocks","dir":"Articles","previous_headings":"A Basic Example","what":"Absorbing Blocks","title":"Introduction to propertee","text":"fixed effects blocks desired, can absorbed away avoid estimating, absorb=TRUE argument can passed.","code":"lmitt(readk ~ 1, data = STARdata, specification = spec, absorb = TRUE) #> starkbinary.TRUE  #>          5.14933"},{"path":"www.github.com/articles/mi_vignette/index.html","id":"overview","dir":"Articles > Mi_vignette","previous_headings":"","what":"Overview","title":"OLS effect and error estimation with an auxiliary sample and a separate, not-necessarily-linear covariance model","text":"propertee package offers tools enhancing evaluations treatments, policies, interventions respect statistical properties endowed study specification. One offering routine covariance adjustment allows researchers model exogenous variation outcomes interest using data study well available auxiliary data. propertee accommodates linear, generalized linear, robust regression models, providing users flexibility functional form, fitting procedure, fitting sample. vignette serves step--step walkthrough users can use prior covariance adjustment model fit inform estimates intervention effects‚Äìwell associated standard errors‚Äìsoftware propertee. Pane et al.¬†(2014) mounted large-scale cluster randomized trial seven states study effectiveness Cognitive Tutor, online/-person blended algebra learning program. report assessed program effectiveness terms scores test administered part study. However, scores prior subsequent state achievement tests available study schools well others states districts, used complementary, perhaps precise, assessment program‚Äôs effects. demonstrate idea using state district data Michigan, Cognitive Tutor study significant footprint rich school achievement data available download state websites. Pane coauthors kindly shared us names, pre-randomization pairings treatment assignments study‚Äôs 14 Michigan schools, liberty make information public. create functionally similar case study maintaining participating schools‚Äôs anonymity, optimally pair-matched schools large nearby county Michigan, Oakland. pseudo-RCT considered vignette replaces Michigan Cognitive Tutor study school Oakland County school paired , otherwise inheriting actual RCT salient specification characteristics, composition school pairs triples within randomization conducted. Valid analysis RCT calls careful attention characteristics, selecting compatible estimator correctly implementing . introducing dedicated S4 structure characteristics, StudySpecification, along StudySpecification-aware functions tasks inverse probability weighting effect estimation optional stratum fixed effects, propertee helps analyst stay top implementation details. cov_adj(), specialized predict(), decouples effect estimation covariance adjustment continuing track ‚Äôs necessary valid standard error estimation, significantly broadening range estimators compatible given StudySpecification.","code":""},{"path":"www.github.com/articles/mi_vignette/index.html","id":"data","dir":"Articles > Mi_vignette","previous_headings":"","what":"Data","title":"OLS effect and error estimation with an auxiliary sample and a separate, not-necessarily-linear covariance model","text":"run vignette, first download necessary data. use school-level averages student performance Michigan Merit Examination (MME) 2014 measure intervention effects, use school-level averages scores 2012 2013 tests covariates covariance adjustment model. scores can downloaded zipped file Michigan Department Education website. unzipping file, convert resulting .xls file .csv facilitate use base R commands loading R session. also use school-level characteristics Common Core Data covariance adjustment model. Click link provided , download ‚ÄúFlat File‚Äù 2013-2014 Public Elementary/Secondary School Universe Survey ‚ÄúData File‚Äù. can use base R commands load unzipped .txt file. last necessary file can loaded propertee package calling data(michigan_school_pairs). dataframe tracks schools paired together study schools assigned intervention control.","code":""},{"path":"www.github.com/articles/mi_vignette/index.html","id":"package-installation","dir":"Articles > Mi_vignette","previous_headings":"","what":"Package Installation","title":"OLS effect and error estimation with an auxiliary sample and a separate, not-necessarily-linear covariance model","text":"vignette requires installation three package addition propertee: httr readxl, ‚Äôll use import Michigan schools data; robustbase, providing functionality outlier-robust regression. vignette uses robustbase demonstrate propertee can handle alternatives ordinary least squares covariance adjustment modeling.","code":""},{"path":"www.github.com/articles/mi_vignette/index.html","id":"walkthrough","dir":"Articles > Mi_vignette","previous_headings":"","what":"Walkthrough","title":"OLS effect and error estimation with an auxiliary sample and a separate, not-necessarily-linear covariance model","text":"loading installed packages reading downloaded data files, clean MME scores school characteristics datasets. scores data rows corresponding state-, intermediate school district (ISD)-, district-, campus-wide averages. addition averages taken students subpopulations, rows correspond averages taken within substrata formed gender, race/ethnicity, learning ability, economic background. provided cleaning script (get_and_clean_external_data.R), create two cleaned datasets, one analysis marginal effect intervention one analysis heterogeneity intervention effect. datasets keep rows corresponding schools MME scores reported campus-wide particular substratum 2012, 2013, 2014. school characteristics data spans universe public schools United States, clean vignette, first limit schools relevant study. MME taken almost exclusively 11th graders , name suggests, taken students Michigan, first subset data schools Michigan serving 11th graders. , perform feature generation, creating derived covariates demographic breakdowns gender, race/ethnicity, free- reduced-price lunch eligibility school level 11th grade specifically. (provided cleaning script performs steps also.)","code":"if (!require(\"robustbase\")) library(robustbase) if (!require(\"readxl\")) library(readxl) if (!require(\"httr\")) library(httr) if (!require(\"propertee\")) library(propertee)  extdataURLs <- list( CCD=\"https://nces.ed.gov/ccd/data/zip/sc132a_txt.zip\", MME=\"https://www.michigan.gov/cepi/-/media/Project/Websites/cepi/MiSchoolData/historical/Historical_Assessments/2011-2014MME.zip\" ) data(michigan_school_pairs) source(\"get_and_clean_external_data.R\") ## Warning in lapply(X = X, FUN = FUN, ...): NAs introduced by coercion ## Warning in lapply(X = X, FUN = FUN, ...): NAs introduced by coercion ## Warning in lapply(X = X, FUN = FUN, ...): NAs introduced by coercion ## Warning in lapply(X = X, FUN = FUN, ...): NAs introduced by coercion"},{"path":"www.github.com/articles/mi_vignette/index.html","id":"creating-the-studyspecification-object","dir":"Articles > Mi_vignette","previous_headings":"Walkthrough","what":"Creating the StudySpecification Object","title":"OLS effect and error estimation with an auxiliary sample and a separate, not-necessarily-linear covariance model","text":"first step estimating intervention effects using propertee create StudySpecification object. store information michigan_school_pairs way allow quick calculation inverse probability assignment weights attend pair-matched structure study. studies units observation (eg. individual students) within units assignment (eg. schools districts) used estimate intervention effects, data structure reflect nesting. example, student-level scores data observed data within schools districts, important specify units assignment allocated different treatment control conditions. studies, StudySpecification object also facilitate definition vector assignment indicators unit observation level use estimating intervention effect. one variable needed identify unit assignment, block, forcing, can included. example, perhaps schoolidk may unique within district, potentially unique across districts. ‚Äôd use something like block(districtid, schoolidk) _spec function. rct_spec() call, lefthand side indicates assignment variable, righthand side indicates unit assignment , applicable, variable identify matched sets strata. also rd_spec() obs_spec() constructors, regression discontinuity observational studies/quasiexperimental specifications, respectively. StudySpecification object‚Äôs structure slot lists units assignment, allocations conditions , applicable, blocks within allocated.","code":"spec <- rct_spec(z ~ unitid(schoolid) + block(blk), michigan_school_pairs) spec@structure ##    z   schoolid blk ## 1  0 6305000291   E ## 2  1 6316006171   B ## 3  0 6320001204   D ## 4  0 6324009415   C ## 5  1 6326003242   F ## 6  1 6327000710   F ## 7  1 6328002123   E ## 8  0 6329004340   B ## 9  1 6307005976   A ## 10 0 6315004226   A ## 11 1 6314002317   C ## 12 1 6318000385   D ## 13 0 6301004608   E ## 14 0 6326005819   F"},{"path":"www.github.com/articles/mi_vignette/index.html","id":"fitting-the-covariance-adjustment-model","dir":"Articles > Mi_vignette","previous_headings":"Walkthrough","what":"Fitting the Covariance Adjustment Model","title":"OLS effect and error estimation with an auxiliary sample and a separate, not-necessarily-linear covariance model","text":"now fit covariance adjustment model. propertee package generate predictions regression explain residual variation outcomes study. Often, produces accurate precise effect estimates. mentioned earlier, propertee accommodates host fitting procedures estimating model, regression may leverage data available auxiliary sources. demonstrate flexibility fitting two covariance adjustment models analysis, one least squares one robust regression. fit models sample including schools study schools Oakland County whose outcomes covariates measured data ‚Äôve downloaded. exact specification school-level model provided Equation 1. Average_Score_14=Œ≤0+Œ≤1Total_Enrollment_14+Œ≤2Title_I_Status_14+Œ≤3Magnet_Status_14+Œ≤4Charter_Status_14+Œ≤5Education_Type_14+Œ≤6Perc_Female_14+Œ≤7Perc_Native_14+Œ≤8Perc_Asian_14+Œ≤9Perc_Hispanic_14+Œ≤10Perc_Black_14+Œ≤11Perc_White_14+Œ≤12Perc_Pacific_Islander_14+Œ≤13Perc_Econ_Disadvantaged_14+Œ≤14Perc_Female_Grade11_14+Œ≤15Perc_Native_Grade11_14+Œ≤16Perc_Asian_Grade11_14+Œ≤17Perc_Hispanic_Grade11_14+Œ≤18Perc_Black_Grade11_14+Œ≤19Perc_White_Grade11_14+Œ≤20Perc_Pacific_Islander_Grade11_14+Œ≤21Average_Score_13+Œ≤22Average_Score_12 \\begin{align} \\text{Average_Score_14} &= \\beta_{0} + \\beta_{1}\\text{Total_Enrollment_14} + \\beta_{2}\\text{Title_I_Status_14} \\\\&\\quad+ \\beta_{3}\\text{Magnet_Status_14} + \\beta_{4}\\text{Charter_Status_14} + \\beta_{5}\\text{Education_Type_14} \\\\&\\quad + \\beta_{6}\\text{Perc_Female_14} + \\beta_{7}\\text{Perc_Native_14} + \\beta_{8}\\text{Perc_Asian_14} \\\\&\\quad + \\beta_{9}\\text{Perc_Hispanic_14} + \\beta_{10}\\text{Perc_Black_14} + \\beta_{11}\\text{Perc_White_14} \\\\&\\quad+ \\beta_{12}\\text{Perc_Pacific_Islander_14} + \\beta_{13}\\text{Perc_Econ_Disadvantaged_14} \\\\&\\quad+ \\beta_{14}\\text{Perc_Female_Grade11_14} + \\beta_{15}\\text{Perc_Native_Grade11_14} \\tag{1} \\\\ &\\quad+ \\beta_{16}\\text{Perc_Asian_Grade11_14} + \\beta_{17}\\text{Perc_Hispanic_Grade11_14} \\\\ &\\quad+ \\beta_{18}\\text{Perc_Black_Grade11_14} + \\beta_{19}\\text{Perc_White_Grade11_14} \\\\ &\\quad+ \\beta_{20}\\text{Perc_Pacific_Islander_Grade11_14} + \\beta_{21}\\text{Average_Score_13} \\\\&\\quad+ \\beta_{22}\\text{Average_Score_12} \\end{align}","code":"coname <- \"OAKLAND COUNTY\" RESPONSE_COL <- \"Average.Scale.Score.2014\" MODELING_COLS <- c(   \"TOTAL_ENROLLMENT\", setdiff(CCD_CAT_COLS, \"TYPE\"),   setdiff(colnames(analysis1data)[grepl(\"_PERC$\", colnames(analysis1data))],           c(\"MALE_PERC\", \"TR_PERC\", \"MALE_G11_PERC\", \"TR_G11_PERC\")),   paste0(\"Average.Scale.Score.\", c(2013, 2012)) ) not_missing_resp <- !is.na(analysis1data[[RESPONSE_COL]]) not_missing_covs <- rowSums(is.na(analysis1data[, MODELING_COLS])) == 0 county_ix <- analysis1data$CONAME == coname county_camod_dat <- analysis1data[not_missing_resp & not_missing_covs,]  camod_form <- as.formula(   paste0(RESPONSE_COL, \"~\", paste(MODELING_COLS, collapse = \"+\"))) lm_county_camod <- lm(camod_form, county_camod_dat,                       weights = county_camod_dat$Total.Tested.2014) set.seed(650) rob_county_camod <- robustbase::lmrob(   camod_form, county_camod_dat, weights = county_camod_dat$Total.Tested.2014,   control = robustbase::lmrob.control(max.it = 500L))"},{"path":"www.github.com/articles/mi_vignette/index.html","id":"estimating-marginal-intervention-effects","dir":"Articles > Mi_vignette","previous_headings":"Walkthrough","what":"Estimating Marginal Intervention Effects","title":"OLS effect and error estimation with an auxiliary sample and a separate, not-necessarily-linear covariance model","text":"StudySpecification object created covariance adjustment model fit, ‚Äôre prepared evaluate intervention. propertee supports calculations inverse probability assignment weights, can used estimate either average intervention effect (ATE) average effect treated (ETT). weights can combined additional unit weights reflect varying sizes units sample. analysis one follows, estimate student-level ATE calculating inverse probability assignment weights school using ate() function, multiplying weights number students corresponding school took test. incorporate prognostic model using cov_adj() function, generates model predictions school identifies overlap prognostic sample study sample. Next, estimate intervention effect using limitt() function. major difference limitt() base lm() function requirement specify StudySpecification object. limitt() function, pass inverse probability assignment weights weights argument adjusted predictions offset argument. summary fitted lmitt() model, called teeMod, shows estimated intervention effect estimated standard error propagated uncertainty covariance adjustment regression. Since actual intervention implemented pseudo-RCT, result effect expected. explore different variance estimation techniques, can specify different vcov.type summary() function. parts auxiliary sample (, Oakland County 14 study schools) follow different pattern association covariates response, covariance adjustment might wind harm good. increase robustness contamination, can use robust linear regression generating predictions.","code":"study1data <- merge(michigan_school_pairs, analysis1data, by = \"schoolid\", all.x = TRUE) ip_wts <- propertee::ate(spec, data = study1data) * study1data$Total.Tested.2014 lm_ca <- propertee::cov_adj(lm_county_camod, newdata = study1data, specification = spec) main_effect_fmla <- as.formula(paste0(RESPONSE_COL, \"~1\")) lm_ca_effect <- propertee::lmitt(   main_effect_fmla, specification = spec, data = study1data, weights = ip_wts,   offset = lm_ca ) summary(lm_ca_effect, vcov.type = \"HC0\") ##  ## Call: ## lmitt.formula(main_effect_fmla, specification = spec, data = study1data,  ##     weights = ip_wts, offset = lm_ca) ##  ##  Treatment Effects : ##    Estimate Std. Error t value Pr(>|t|) ## z.   0.4732     1.0903   0.434    0.672 ## Std. Error calculated via type \"HC0\" summary(lm_ca_effect, vcov.type = \"HC1\") ##  ## Call: ## lmitt.formula(main_effect_fmla, specification = spec, data = study1data,  ##     weights = ip_wts, offset = lm_ca) ##  ##  Treatment Effects : ##    Estimate Std. Error t value Pr(>|t|) ## z.   0.4732     1.0912   0.434    0.672 ## Std. Error calculated via type \"HC1\" rob_ca <- propertee::cov_adj(rob_county_camod, newdata = study1data, specification = spec) rob_ca_effect <- propertee::lmitt(   main_effect_fmla, specification = spec, data = study1data, weights = ip_wts,   offset = rob_ca ) summary(rob_ca_effect, vcov.type = \"HC1\") ##  ## Call: ## lmitt.formula(main_effect_fmla, specification = spec, data = study1data,  ##     weights = ip_wts, offset = rob_ca) ##  ##  Treatment Effects : ##    Estimate Std. Error t value Pr(>|t|) ## z.   0.4446     1.1055   0.402    0.695 ## Std. Error calculated via type \"HC1\""},{"path":"www.github.com/articles/mi_vignette/index.html","id":"estimating-heterogeneous-intervention-effects","dir":"Articles > Mi_vignette","previous_headings":"Walkthrough","what":"Estimating Heterogeneous Intervention Effects","title":"OLS effect and error estimation with an auxiliary sample and a separate, not-necessarily-linear covariance model","text":"can estimate average intervention effects conditional different race/ethinicity groups using second cleaned dataset. propertee allows us interpret heterogenous effect estimates average effect intervention average MME score students within race/ethnicity group. process estimating heterogeneous effects follows similar user experience estimation marginal effect, two notable exceptions.","code":""},{"path":"www.github.com/articles/mi_vignette/index.html","id":"exception-1-formula-specification","dir":"Articles > Mi_vignette","previous_headings":"Walkthrough > Estimating Heterogeneous Intervention Effects","what":"Exception 1: Formula Specification","title":"OLS effect and error estimation with an auxiliary sample and a separate, not-necessarily-linear covariance model","text":"first exception general heterogeneous effect estimation propertee package. estimating effects, users need modify formula passed limitt(). Instead specifying constant (.e.¬†1) right-hand side, users provide formula specifies subgroup variable right-hand side. first part code prepares data filtering rows missing values response variable covariates. also isolate data Oakland County. Next, update model formula include subgroup variable DemographicGroup, used estimate heterogeneous effects. use updated formula fit weighted linear regression model. , prepare study dataset merging cleaned dataset michigan_school_pairs ensure school-level data allows estimation treatment effects based school demographic group. Now, compute inverse probability weights using ate() function, estimates average effect treatment. , adjust covariates using cov_adj(). Finally, specify formula estimating heterogeneous effects fit model using lmitt() function.","code":"not_missing_resp <- !is.na(analysis2data[[RESPONSE_COL]]) not_missing_covs <- rowSums(is.na(analysis2data[, MODELING_COLS])) == 0 county_ix <- analysis2data$CONAME == coname county_mod_camod_dat <- analysis2data[not_missing_resp & not_missing_covs,] mod_camod_form <- update(camod_form, . ~ . + factor(DemographicGroup)) lm_county_mod_camod <- lm(mod_camod_form, county_mod_camod_dat,                           weights = county_mod_camod_dat$Total.Tested.2014) study2data <- merge(michigan_school_pairs, analysis2data, by = \"schoolid\", all.x = TRUE) study2data <- study2data[study2data$DemographicGroup %in%                            c(\"White\", \"Black or African American\"),] ip_wts <- propertee::ate(spec, data = study2data) * study2data$Total.Tested.2014 lm_mod_ca <- propertee::cov_adj(lm_county_mod_camod, newdata = study2data,                                 specification = spec, by = \"uniqueid\") mod_effect_fmla <- as.formula(paste0(RESPONSE_COL, \"~ DemographicGroup\")) lm_ca_mod_effect <- propertee::lmitt(mod_effect_fmla, specification = spec,                                      data = study2data, weights = ip_wts,                                      offset = lm_mod_ca) summary(lm_ca_mod_effect, vcov.type = \"CR1\", cluster = \"schoolid\") ##  ## Call: ## lmitt.formula(mod_effect_fmla, specification = spec, data = study2data,  ##     weights = ip_wts, offset = lm_mod_ca) ##  ##  Treatment Effects : ##                                                Estimate Std. Error t value ## `z._DemographicGroupBlack or African American`    0.326      1.960   0.166 ## z._DemographicGroupWhite                          1.337      1.270   1.053 ##                                                Pr(>|t|) ## `z._DemographicGroupBlack or African American`    0.869 ## z._DemographicGroupWhite                          0.303 ## Std. Error calculated via type \"CR1\""},{"path":"www.github.com/articles/mi_vignette/index.html","id":"second-exception-overlapping-rows","dir":"Articles > Mi_vignette","previous_headings":"Walkthrough > Estimating Heterogeneous Intervention Effects","what":"Second Exception: Overlapping Rows","title":"OLS effect and error estimation with an auxiliary sample and a separate, not-necessarily-linear covariance model","text":"second exception arises units assignment (case, schools) contribute multiple observations heterogeneous effect estimation. can happen schools may students multiple race/ethnicity groups, leading overlap data.StudySpecification object provide enough information uniquely identify rows, causes issue standard error calculations must determine exact overlap covariance adjustment effect estimation samples. alleviate issue, dataframes must column uniquely identifies row. two dataframes overlapping rows, unique identifiers match .","code":""},{"path":"www.github.com/articles/mi_vignette/index.html","id":"conclusion","dir":"Articles > Mi_vignette","previous_headings":"Walkthrough","what":"Conclusion","title":"OLS effect and error estimation with an auxiliary sample and a separate, not-necessarily-linear covariance model","text":"vignette demonstrated use propertee package enhance evaluation treatment effects incorporating covariance adjustment models. following key concepts commands covered: Create StudySpecification object encodes study specification, including unit assignment, treatment status unit assignment, optionally block information. done using rct_spec() optionally obs_spec() rd_spec() functions. Fit least squares robust regression models adjust covariates enhance precision treatment effect estimates. Use cov_adj() function process covariate adjustment model. Fit model using limitt() function estimate treatment effect accounts specification information covariate adjustment including weights offset arguments function.","code":""},{"path":"www.github.com/articles/non-binary-treatment.html","id":"binary-treatment","dir":"Articles","previous_headings":"","what":"Binary Treatment","title":"Non-binary Treatment Specification","text":"creating StudySpecification, handling binary treatment variables straightforward. treatment variable either numeric values 0/1, logical, lmitt() estimate treatment effect difference outcome treated group (1 TRUE) versus control group (0 FALSE).","code":""},{"path":"www.github.com/articles/non-binary-treatment.html","id":"missing-treatment-status","dir":"Articles","previous_headings":"Binary Treatment","what":"Missing treatment status","title":"Non-binary Treatment Specification","text":"cases (binary non-binary), missing values allowed units assignment missing treatment values excluded models fit via lmitt().","code":""},{"path":"www.github.com/articles/non-binary-treatment.html","id":"non-binary-treatment","dir":"Articles","previous_headings":"","what":"Non-binary Treatment","title":"Non-binary Treatment Specification","text":"However, _spec() functions can take (reasonable) form treatment assignment. treatment variable numeric non-binary values, treated continuous treatment effect lmitt(y ~ 1, ... estimate single coefficient treatment. treatment variable character, treated multi-level treatment variable lmitt(y ~ 1, ... estimate treatment effects reference category. reference category first level defined according R‚Äôs comparison characters. factor ordered objects tricky deal , StudySpecification can created factor ordered treatment variables, lmitt() refuse estimate model unless also provided dichotomy (see ).","code":""},{"path":"www.github.com/articles/non-binary-treatment.html","id":"dichotomzing-a-non-binary-treatment","dir":"Articles","previous_headings":"Non-binary Treatment","what":"Dichotomzing a Non-binary Treatment","title":"Non-binary Treatment Specification","text":"Studies may offer treatment units different times provide treatment units varying intensities. Researchers may interested estimating treatment effects different times given certain threshold provided treatment, however. propertee accommodates wishes storing time intensity treatment treated units StudySpecification, offering dichotomy= argument weights calculation functions ett()/ate() assginment creation function assigned() dichotomy presented formula, left-hand side logical statement defining inclusion treatment group, right-hand side logical statement defining inclusion control group. example, dose represents intensity given treatment, set threshold 200, say, mg: units assignment dose 200 treated units, units assignment dose 200 control units. . can used define either group inverse . example, dichotomy defined either units assignment assigned either treatment control assumed NA treatment status ignored estimation treatment effects. dichotomy, units assignment range (100,300) ignored.","code":"dose > 200 ~ dose <= 200 dose > 200 ~ . . ~ dose <= 200 dose >= 300 ~ dose <= 100"},{"path":"www.github.com/articles/non-binary-treatment.html","id":"an-example","dir":"Articles","previous_headings":"Non-binary Treatment","what":"An Example","title":"Non-binary Treatment Specification","text":"","code":"data(simdata) table(simdata$dose) #>  #>  50 100 200 250 300  #>  10  10  10  10  10 spec1 <- rct_spec(dose ~ uoa(uoa1, uoa2), data = simdata) summary(spec1) #> Randomized Control Trial #>  #>  Structure          Variables  #>  ---------          ---------  #>  Treatment          dose       #>  Unit of Assignment uoa1, uoa2 #>  #> Number of units per Treatment group:  #>  Txt Grp Num Units #>       50         2 #>      100         2 #>      200         2 #>      ...           #> 2 smaller treatment groups excluded. #> Use `specification_table` function to view full results. head(ate(spec1, data = simdata, dichotomy = dose >= 300 ~ dose <= 100)) #> [1] 1.5 1.5 1.5 1.5 0.0 0.0 head(assigned(spec1, data = simdata, dichotomy = dose >= 300 ~ dose <= 100)) #> [1]  0  0  0  0 NA NA"},{"path":"www.github.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Josh Errickson. Maintainer, author. Josh Wasserman. Author. Mark Fredrickson. Contributor. Adam Sales. Contributor. Xinhe Wang. Contributor. Ben Hansen. Author.","code":""},{"path":"www.github.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Errickson J, Wasserman J, Hansen B (2024). propertee: Standardization-Based Effect Estimation Optional Prior Covariance Adjustment. R package version 0.5.1, https://github.com/benbhansen-stats/propertee.","code":"@Manual{,   title = {propertee: Standardization-Based Effect Estimation with Optional Prior Covariance Adjustment},   author = {Josh Errickson and Josh Wasserman and Ben Hansen},   year = {2024},   note = {R package version 0.5.1},   url = {https://github.com/benbhansen-stats/propertee}, }"},{"path":"www.github.com/index.html","id":"propertee-prognostic-regression-offsets-with-propagation-of-errors-for-treatment-effect-estimation-","dir":"","previous_headings":"","what":"Standardization-Based Effect Estimation with Optional Prior Covariance Adjustment","title":"Standardization-Based Effect Estimation with Optional Prior Covariance Adjustment","text":"propertee enables flexible direct adjustment specification-informed standard errors optional prior covariance adjustment. Random trials often utilize units assignment blocking assigning treatment status way simplify implementation. specification information must utilized future analyses. Using propertee, user can generate StudySpecification object keep track specification structure. (Also supported observational studies (obs_spec) regression discontinuity specifications (rdd_spec requires forcing() variable well.) order pass specification information model using weights= argument, functions ett() ate() used convert StudySpecification numeric vector StudySpecification object attribute. Note StudySpecification created teacher level data (teacherdata), analysis carried student level (studentdata); ate() (alternative ett()) expand weights appropriately. Optionally, can also include covariance adjustment model cov_adj() function.","code":"spec <- rct_spec(txt ~ unit_of_assignment(teacher) + block(school), data = teacherdata) lm(y ~ txt, data = studentdata, weights = ate(spec)) covadjmod <- lm(y ~ x1 + x2 + ..., data = studentdata, subset = !txt) lm(y ~ txt, studentdata, weights = ett(spec),    offset = cov_adj(covadjmod, data = studentdata) )"},{"path":"www.github.com/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Standardization-Based Effect Estimation with Optional Prior Covariance Adjustment","text":"may use RStudio develop propertee, opening propertee.Rproj file. suggest ensure required dependencies installed running prefer changes include unit tests demonstrating problem showing new feature added. test suite uses testthat package write run tests. (Please ensure latest version testthat (least v0.11.0), older versions stored tests different directory, may test properly.) See tests/testthat directory examples. can run test suite via Build -> Test Package. New features include inline Roxygen documentation. can generate .Rd documents Roxygen code using Build -> Document, using Make describe . Finally, can use Build -> Build Reload Build -> Clean Rebuild load updated version propertee current RStudio session. Alternatively, install developed version permanently, use Build -> Build Binary Version, followed can revert back current CRAN version prefer use RStudio, can develop using Make. make test: Run full test suite. make document: Update documentation Roxygen inline comments. make interactive: Start interactive session propertee loaded. (make interactive-emacs starts session inside emacs.) make check: Run R CMD check package make build: Build binary package. make vignette: Builds vignettes vignettes/ directory make clean: Removes files built make vignette, make document make    check. generally necessary, can useful debugging. change ready, make pull request github.","code":"devtools::install_deps(dependencies = TRUE) install.packages(\"../propertee_VERSION.tgz\", repo=NULL) remove.packages(\"propertee\") install.packages(\"propertee\")"},{"path":"www.github.com/index.html","id":"white-space-changes","dir":"","previous_headings":"Contributing","what":"White space changes","title":"Standardization-Based Effect Estimation with Optional Prior Covariance Adjustment","text":"ease searches commit history: Commit white space changes occur lines substantive changes. Avoid committing trailing white spaces. RStudio, options enable automatically removing white space end lines trailing whitespaces Settings, Code -> Saving. emacs, can remove white spaces ends lines M-x delete-trailing-whitespace. automatically whenever save, add following init file: remove trailing lines saving, can also add :","code":"(add-hook 'before-save-hook (lambda ()                              (delete-trailing-whitespace))) (setq delete-trailing-lines t)"},{"path":"www.github.com/index.html","id":"referring-to-functions","dir":"","previous_headings":"Contributing","what":"Referring to functions","title":"Standardization-Based Effect Estimation with Optional Prior Covariance Adjustment","text":"documentation refers another function (internal package otherwise), please include trailing (), help pkgdown provide appropriate link (see https://pkgdown.r-lib.org/articles/linking.html). E.g. \\code{lm()} \\code{cov_adj()} \\code{lme4::lmer()}.","code":""},{"path":"www.github.com/index.html","id":"vignettes-or-simulations","dir":"","previous_headings":"Contributing","what":"Vignettes or simulations","title":"Standardization-Based Effect Estimation with Optional Prior Covariance Adjustment","text":"Vignettes simulations go /vignettes/ folder. Anything built R check (especially anything builds slowly, introduces dependencies specified DESCRIPTION) go /vignettes/--cran. (--cran folder .Rbuildignore file.) Note .Rmd files /vignettes/ get built building reference site. exclude .Rmd file, needs start ‚Äú_‚Äú. E.g. myslowvignette.Rmd -> _myslowvignette.Rmd.","code":""},{"path":"www.github.com/reference/AssignedAliases.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain Treatment from StudySpecification ‚Äî assigned","title":"Obtain Treatment from StudySpecification ‚Äî assigned","text":"passing lm object lmitt(), extract use treatment variable specified StudySpecification.","code":""},{"path":"www.github.com/reference/AssignedAliases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain Treatment from StudySpecification ‚Äî assigned","text":"","code":"assigned(specification = NULL, data = NULL, dichotomy = NULL)  adopters(specification = NULL, data = NULL, dichotomy = NULL)  a.(specification = NULL, data = NULL, dichotomy = NULL)  z.(specification = NULL, data = NULL, dichotomy = NULL)"},{"path":"www.github.com/reference/AssignedAliases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain Treatment from StudySpecification ‚Äî assigned","text":"specification Optional StudySpecification. StudySpecification identified model (usually neither weights (ate() ett()) covariate adjustment model (cov_adj()) found), StudySpecification can passed diretly. data Optional data set. default assigned() attempt identify appropriate data, fails (want overwrite ), can pass data . dichotomy optional; formula defining dichotomy treatment variable already 0/1. See details information. ett() ate() called within lmitt() call specifies dichotomy argument, dichotomy used argument specified.","code":""},{"path":"www.github.com/reference/AssignedAliases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain Treatment from StudySpecification ‚Äî assigned","text":"treatment variable placed regression formula.","code":""},{"path":"www.github.com/reference/AssignedAliases.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain Treatment from StudySpecification ‚Äî assigned","text":"passing lm object lmitt(), treatment variable formula passed lm() needs identifiable. Rather placing treatment variable directly formula, use one functions, allow lmitt() identify treatment variable. keep formula lm() call concise, instead passing specification data arguments functions, one can pass WeightedStudySpecification object weights argument lm() call SandwichLayer object offset argument. Alternatively, can pass specification data arguments. assigned() can used situation, useful scenarios treatment variable non-binary StudySpecification contains Dichotomy. example, say q 3-level ordinal treatment variable, binary comparison interest captured dichotomy = q == 3 ~ q < 3. fit model including q predictor, e.g. lm(y ~ q, ...), lm treat q full ordinal variable. hand, calling lm(y ~ assigned(), weights =   ate(spec), ...), assigned() generate appropriate binary variable allow estimation treatment effects. called outside model call without data argument, extract treatment specification. goal, treatment() function better suited purpose.","code":""},{"path":"www.github.com/reference/AssignedAliases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain Treatment from StudySpecification ‚Äî assigned","text":"","code":"data(simdata) spec <- obs_spec(z ~ uoa(uoa1, uoa2), data = simdata) mod <- lm(y ~ assigned(), data = simdata, weights = ate(spec)) lmittmod <- lmitt(mod) summary(lmittmod) #>  #> Call: #> lmitt(mod) #>  #>  Coefficients : #>             Estimate Std. Error t value Pr(>|t|) #> (Intercept)  -0.0090     0.1734  -0.052    0.959 #> assigned()    0.1205     0.2301   0.524    0.603 #> Std. Error calculated via type \"CR0\" #>"},{"path":"www.github.com/reference/PreSandwichLayer.show.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a PreSandwichLayer or SandwichLayer ‚Äî show,PreSandwichLayer-method","title":"Show a PreSandwichLayer or SandwichLayer ‚Äî show,PreSandwichLayer-method","text":"Display information PreSandwichLayer SandwichLayer object","code":""},{"path":"www.github.com/reference/PreSandwichLayer.show.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a PreSandwichLayer or SandwichLayer ‚Äî show,PreSandwichLayer-method","text":"","code":"# S4 method for class 'PreSandwichLayer' show(object)"},{"path":"www.github.com/reference/PreSandwichLayer.show.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a PreSandwichLayer or SandwichLayer ‚Äî show,PreSandwichLayer-method","text":"object PreSandwichLayer SandwichLayer object","code":""},{"path":"www.github.com/reference/PreSandwichLayer.show.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a PreSandwichLayer or SandwichLayer ‚Äî show,PreSandwichLayer-method","text":"invisible copy object","code":""},{"path":"www.github.com/reference/PreSandwichLayer.subset.html","id":null,"dir":"Reference","previous_headings":"","what":"PreSandwichLayer and SandwichLayer subsetting ‚Äî subset,PreSandwichLayer-method","title":"PreSandwichLayer and SandwichLayer subsetting ‚Äî subset,PreSandwichLayer-method","text":"Return subset PreSandwichLayer SandwichLayer meets conditions.","code":""},{"path":"www.github.com/reference/PreSandwichLayer.subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PreSandwichLayer and SandwichLayer subsetting ‚Äî subset,PreSandwichLayer-method","text":"","code":"# S4 method for class 'PreSandwichLayer' subset(x, subset)  # S4 method for class 'PreSandwichLayer' x[i]"},{"path":"www.github.com/reference/PreSandwichLayer.subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PreSandwichLayer and SandwichLayer subsetting ‚Äî subset,PreSandwichLayer-method","text":"x PreSandwichLayer SandwichLayer object subset Logical vector identifying values keep drop indices specifying elements extract replace. See help(\"[\") details.","code":""},{"path":"www.github.com/reference/PreSandwichLayer.subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PreSandwichLayer and SandwichLayer subsetting ‚Äî subset,PreSandwichLayer-method","text":"x subset subset ","code":""},{"path":"www.github.com/reference/STARdata.html","id":null,"dir":"Reference","previous_headings":"","what":"STAR data ‚Äî STARdata","title":"STAR data ‚Äî STARdata","text":"Tennessee‚Äôs Student-Teacher Achievement Ratio (STAR) data set. copy data AER::STAR.","code":""},{"path":"www.github.com/reference/STARdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"STAR data ‚Äî STARdata","text":"","code":"STARdata"},{"path":"www.github.com/reference/STARdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"STAR data ‚Äî STARdata","text":"data.frame 11,598 rows 47 columns.","code":""},{"path":"www.github.com/reference/StudySpecificationSpecials.html","id":null,"dir":"Reference","previous_headings":"","what":"Special terms in StudySpecification creation formula ‚Äî unit_of_assignment","title":"Special terms in StudySpecification creation formula ‚Äî unit_of_assignment","text":"special functions used definition StudySpecification objects. identify units assignment, blocks forcing variables. never used outside formula argument obs_spec, rct_spec, rd_spec.","code":""},{"path":"www.github.com/reference/StudySpecificationSpecials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Special terms in StudySpecification creation formula ‚Äî unit_of_assignment","text":"","code":"unit_of_assignment(...)  unitid(...)  cluster(...)  uoa(...)  block(...)  forcing(...)"},{"path":"www.github.com/reference/StudySpecificationSpecials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Special terms in StudySpecification creation formula ‚Äî unit_of_assignment","text":"... number variables length.","code":""},{"path":"www.github.com/reference/StudySpecificationSpecials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Special terms in StudySpecification creation formula ‚Äî unit_of_assignment","text":"variables appropriate labels. use outside inclusion formula argument obs_spec, rct_spec, rd_spec","code":""},{"path":"www.github.com/reference/StudySpecificationSpecials.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Special terms in StudySpecification creation formula ‚Äî unit_of_assignment","text":"functions use outside formula creating StudySpecification. unit_of_assignment, uoa, cluster unitid synonyms; must include one one StudySpecification. choice use impact analysis, output name stored element StudySpecification. Accessors/ replacers (units_of_assignment, unitids, clusters) respect choice made point creation StudySpecification, appropriate function work. See rct_spec, obs_spec, rd_spec examples usage.","code":""},{"path":"www.github.com/reference/StudySpecification_extractreplace.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessors and Replacers for StudySpecification objects ‚Äî treatment","title":"Accessors and Replacers for StudySpecification objects ‚Äî treatment","text":"Allows access elements define StudySpecification, enabling extraction replacement.","code":""},{"path":"www.github.com/reference/StudySpecification_extractreplace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessors and Replacers for StudySpecification objects ‚Äî treatment","text":"","code":"treatment(x, newdata = NULL, dichotomy = NULL, by = NULL, ...)  # S4 method for class 'StudySpecification' treatment(x, newdata = NULL, dichotomy = NULL, by = NULL, ...)  treatment(x) <- value  # S4 method for class 'StudySpecification' treatment(x) <- value  units_of_assignment(x, newdata = NULL, by = NULL)  # S4 method for class 'StudySpecification' units_of_assignment(x, newdata = NULL, by = NULL)  units_of_assignment(x) <- value  # S4 method for class 'StudySpecification' units_of_assignment(x) <- value  clusters(x, newdata = NULL, by = NULL)  # S4 method for class 'StudySpecification' clusters(x, newdata = NULL, by = NULL)  clusters(x) <- value  # S4 method for class 'StudySpecification' clusters(x) <- value  unitids(x)  # S4 method for class 'StudySpecification' unitids(x)  unitids(x) <- value  # S4 method for class 'StudySpecification' unitids(x) <- value  blocks(x, newdata = NULL, by = NULL, ...)  # S4 method for class 'StudySpecification' blocks(x, newdata = NULL, by = NULL, ..., implicit = FALSE)  blocks(x) <- value  # S4 method for class 'StudySpecification' blocks(x) <- value  has_blocks(x)  forcings(x, newdata = NULL, by = NULL)  # S4 method for class 'StudySpecification' forcings(x, newdata = NULL, by = NULL)  forcings(x) <- value  # S4 method for class 'StudySpecification' forcings(x) <- value"},{"path":"www.github.com/reference/StudySpecification_extractreplace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessors and Replacers for StudySpecification objects ‚Äî treatment","text":"x StudySpecification object newdata optional; additional data.frame. passed, unit assignment variable found newdata, requested variable type unit newdata returned. See argument name unit assignment differs. dichotomy optional; formula specifying dichotomize non-binary treatment variable. See Details section ett() att() help pages information specifying formula optional; named vector list connecting names unit assignment/unitid/cluster variables x unit assignment/unitid/cluster variables data. Names represent variables x; values represent variables newdata. needed variable names differ. ... ignored. value replacement. Either vector/matrix appropriate dimension, named data.frame renaming variable well. See Details. implicit block-less StudySpecification return constant 1 extracting blocks?","code":""},{"path":"www.github.com/reference/StudySpecification_extractreplace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessors and Replacers for StudySpecification objects ‚Äî treatment","text":"data.frame containing requested variable, updated StudySpecification. treatment() works slightly differently, see Details.","code":""},{"path":"www.github.com/reference/StudySpecification_extractreplace.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accessors and Replacers for StudySpecification objects ‚Äî treatment","text":"treatment(), argument binary FALSE, treatment variable passed StudySpecification returned one-column data.frame regardless whether binary x dichotomy dichotomy passed, binary one-column data.frame returned. binary TRUE, unless StudySpecification binary treatment, treatment() error. binary \"ifany\", return original treatment case. one-column data.frame returned treatment() named entered StudySpecification creation, dichotomy passed, column name \"__z\" try avoid name conflicts. value using replacers, replacement must number rows StudySpecification (number units assignment). number columns can differ (e.g. StudySpecification defined two variable uniquely identifying blocks, can replace single variable uniquely identifying blocks, long respects restrictions.) replacement value data.frame, name columns used new variable names. replacement matrix vector, original names retained. reducing number variables (e.g., moving two variables uniquely identifying single variable), appropriate number variable names retained. increasing number variables, data.frame names must provided.","code":""},{"path":"www.github.com/reference/StudySpecification_extractreplace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Accessors and Replacers for StudySpecification objects ‚Äî treatment","text":"","code":"data(simdata) spec <- obs_spec(z ~ unit_of_assignment(uoa1, uoa2), data = simdata) blocks(spec) # empty #> data frame with 0 columns and 10 rows blocks(spec) <- data.frame(blks = c(1, 1, 2, 2, 3, 3, 4, 4, 5, 5)) blocks(spec) #>    blks #> 1     1 #> 2     1 #> 3     2 #> 4     2 #> 5     3 #> 6     3 #> 7     4 #> 8     4 #> 9     5 #> 10    5 blocks(spec) <- c(5, 5, 4, 4, 3, 3, 2, 2, 1, 1) blocks(spec) # notice that variable is not renamed #>    blks #> 1     5 #> 2     5 #> 3     4 #> 4     4 #> 5     3 #> 6     3 #> 7     2 #> 8     2 #> 9     1 #> 10    1"},{"path":"www.github.com/reference/StudySpecification_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a StudySpecification object with the given specifications. ‚Äî rct_spec","title":"Generates a StudySpecification object with the given specifications. ‚Äî rct_spec","text":"Generate randomized control treatment StudySpecification (rct_spec()), observational StudySpecification (obs_spec()), regression discontinuity StudySpecification (rd_spec()).","code":""},{"path":"www.github.com/reference/StudySpecification_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a StudySpecification object with the given specifications. ‚Äî rct_spec","text":"","code":"rct_spec(formula, data, subset = NULL, na.fail = TRUE)  rd_spec(formula, data, subset = NULL, na.fail = TRUE)  obs_spec(formula, data, subset = NULL, na.fail = TRUE)  rct_specification(formula, data, subset = NULL, na.fail = TRUE)  rd_specification(formula, data, subset = NULL, na.fail = TRUE)  obs_specification(formula, data, subset = NULL, na.fail = TRUE)  obsstudy_spec(formula, data, subset = NULL, na.fail = TRUE)  obsstudy_specification(formula, data, subset = NULL, na.fail = TRUE)"},{"path":"www.github.com/reference/StudySpecification_objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a StudySpecification object with the given specifications. ‚Äî rct_spec","text":"formula formula defining StudySpecification components. See Details specification. data data set build StudySpecification. Note data need used estimate treatment effect; rather data passed contain information units treatment assignment (opposed units analysis). subset optional, subset data creating StudySpecification object na.fail TRUE (default), missing data found variables specified formula (excluding treatment) trigger error. FALSE, non-complete cases dropped creation StudySpecification","code":""},{"path":"www.github.com/reference/StudySpecification_objects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a StudySpecification object with the given specifications. ‚Äî rct_spec","text":"StudySpecification object requested type use analysis.","code":""},{"path":"www.github.com/reference/StudySpecification_objects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates a StudySpecification object with the given specifications. ‚Äî rct_spec","text":"formula must include exactly one unit_of_assignment() identify units assignment (one variables). (uoa, cluster, unitid synonyms unit_of_assignment; choice impact analysis.) defining rd_spec, formula must also include forcing() entry. formula may optionally include block() well. can take multiple variables, e.g. pass household ID individual ID unit assignment, use uoa(hhid,   iid) uoa(hhid) + uoa(iid). treatment variable passed left-hand side formula can either logical, numeric, character. anything else, attempts conversion one types (example, factor ordered converted numeric levels numeric, otherwise character). treatment logical numeric values 0 1, order generate weights ate() ett(), dichotomy argument must used functions identify treatment control groups. See ett() details specifying dichotomy. aliases version.","code":""},{"path":"www.github.com/reference/StudySpecification_objects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a StudySpecification object with the given specifications. ‚Äî rct_spec","text":"","code":"data(simdata) spec <- rct_spec(z ~ unit_of_assignment(uoa1, uoa2) + block(bid),                   data = simdata)  data(schooldata) spec <- obs_spec(treatment ~ unit_of_assignment(schoolid) + block(state),                   data = schooldata)"},{"path":"www.github.com/reference/StudySpecification_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"StudySpecification Structure Information ‚Äî get_structure","title":"StudySpecification Structure Information ‚Äî get_structure","text":"Obtaining data.frame encodes specification information.","code":""},{"path":"www.github.com/reference/StudySpecification_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"StudySpecification Structure Information ‚Äî get_structure","text":"","code":"get_structure(specification)  # S4 method for class 'StudySpecificationStructure' show(object)"},{"path":"www.github.com/reference/StudySpecification_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"StudySpecification Structure Information ‚Äî get_structure","text":"specification StudySpecification object object StudySpecificationStructure object, typically output get_structure","code":""},{"path":"www.github.com/reference/StudySpecification_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"StudySpecification Structure Information ‚Äî get_structure","text":"StudySpecificationStructure object containing structure specification data.frame.","code":""},{"path":"www.github.com/reference/StudySpecification_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"StudySpecification Structure Information ‚Äî get_structure","text":"","code":"data(simdata) spec <- rct_spec(z ~ uoa(uoa1, uoa2) + block(bid), data = simdata) get_structure(spec) #>    z uoa1 uoa2 bid #> 1  0    1    1   1 #> 2  0    1    2   1 #> 3  0    2    1   1 #> 4  1    2    2   1 #> 5  0    3    1   2 #> 6  0    3    2   2 #> 7  1    4    1   2 #> 8  0    4    2   3 #> 9  1    5    1   3 #> 10 1    5    2   3"},{"path":"www.github.com/reference/StudySpecification_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing StudySpecification objects ‚Äî summary.StudySpecification","title":"Summarizing StudySpecification objects ‚Äî summary.StudySpecification","text":"summary() method class StudySpecification.","code":""},{"path":"www.github.com/reference/StudySpecification_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing StudySpecification objects ‚Äî summary.StudySpecification","text":"","code":"# S3 method for class 'StudySpecification' summary(object, ..., treatment_binary = TRUE)  # S3 method for class 'summary.StudySpecification' print(x, ..., max_unit_print = 3)"},{"path":"www.github.com/reference/StudySpecification_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing StudySpecification objects ‚Äî summary.StudySpecification","text":"object StudySpecification object, usually result call rct_spec(), obs_spec(), rd_spec(). ... Ignored treatment_binary treatment dichotomized object contains dichotomy? Ignored object contain dichotomy. x summary.StudySpecification object, usually result call summary.StudySpecification() max_unit_print Maximum number treatment levels print treatment table","code":""},{"path":"www.github.com/reference/StudySpecification_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing StudySpecification objects ‚Äî summary.StudySpecification","text":"StudySpecification summary.StudySpecificationobject, invisibly","code":""},{"path":"www.github.com/reference/StudySpecification_var_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Variable Names from StudySpecification ‚Äî var_table","title":"Extract Variable Names from StudySpecification ‚Äî var_table","text":"Methods extract variable names elements structure StudySpecification (e.g. treatment, unit analysis, etc)","code":""},{"path":"www.github.com/reference/StudySpecification_var_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Variable Names from StudySpecification ‚Äî var_table","text":"","code":"var_table(specification, compress = TRUE, report_all = FALSE)  var_names(specification, type, implicitBlocks = FALSE)"},{"path":"www.github.com/reference/StudySpecification_var_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Variable Names from StudySpecification ‚Äî var_table","text":"specification StudySpecification object compress multiple variables compressed comma-separated string? Default TRUE. FALSE, multiple columns can created instead. report_all report possible structures even exist StudySpecification? Default FALSE. type one \"t\", \"u\", \"b\", \"f\"; \"treatment\", \"unit_of_assignment\", \"block\", \"forcing\" respectively implicitBlocks StudySpecification created without blocks, setting TRUE return \".blocks_internal\" variable name corresponding blocks.","code":""},{"path":"www.github.com/reference/StudySpecification_var_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Variable Names from StudySpecification ‚Äî var_table","text":"var_table returns requested table. var_names returns vector variable names.","code":""},{"path":"www.github.com/reference/StudySpecification_var_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Variable Names from StudySpecification ‚Äî var_table","text":"compress TRUE, result always two columns. FALSE, result number columns equal largest number variables particular role, plus one. E.g., call rct_spec(z ~ unitid(, b, c, d) ... 4+1=5 columns output matrix compress = FALSE. report_all TRUE, matrix guaranteed 3 rows (specification RCT Obs) 4 rows (specification RD), empty variable entries appropriate. FALSE, matrix minimum 2 rows (treatment unit assignment/unitid/cluster), additional rows blocks forcing included StudySpecification.","code":""},{"path":"www.github.com/reference/StudySpecification_var_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Variable Names from StudySpecification ‚Äî var_table","text":"","code":"spec <- rct_spec(z ~ uoa(uoa1, uoa2) + block(bid), data = simdata) var_table(spec) #>      Structure            Variables    #> [1,] \"Treatment\"          \"z\"          #> [2,] \"Unit of Assignment\" \"uoa1, uoa2\" #> [3,] \"Block\"              \"bid\"        var_table(spec, compress = FALSE) #>      Structure            Variable 1 Variable 2 #> [1,] \"Treatment\"          \"z\"        NA         #> [2,] \"Unit of Assignment\" \"uoa1\"     \"uoa2\"     #> [3,] \"Block\"              \"bid\"      NA         var_names(spec, \"t\") #> [1] \"z\" var_names(spec, \"u\") #> [1] \"uoa1\" \"uoa2\" var_names(spec, \"b\") #> [1] \"bid\""},{"path":"www.github.com/reference/WeightCreators.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Direct Adjusted Weights for Treatment Effect Estimation ‚Äî ett","title":"Generate Direct Adjusted Weights for Treatment Effect Estimation ‚Äî ett","text":"primarily used inside models. See Details. ate() creates weights estimate Average Treatment Effect ett() creates weights estimate Effect Treatment Treated.","code":""},{"path":"www.github.com/reference/WeightCreators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Direct Adjusted Weights for Treatment Effect Estimation ‚Äî ett","text":"","code":"ett(specification = NULL, dichotomy = NULL, by = NULL, data = NULL)  ate(specification = NULL, dichotomy = NULL, by = NULL, data = NULL)"},{"path":"www.github.com/reference/WeightCreators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Direct Adjusted Weights for Treatment Effect Estimation ‚Äî ett","text":"specification optional; StudySpecification object created one rct_spec(), rd_spec(), obs_spec(). dichotomy optional; formula defining dichotomy treatment variable already 0/1. See details information. ett() ate() called within lmitt() call specifies dichotomy argument, dichotomy used argument specified. optional; named vector list connecting names unit assignment/ variables specification unit assignment/unitid/cluster variables data. Names represent variables StudySpecification; values represent variables data. needed variable names differ. data optional; data analysis performed . May excluded functions included weights argument model.","code":""},{"path":"www.github.com/reference/WeightCreators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Direct Adjusted Weights for Treatment Effect Estimation ‚Äî ett","text":"WeightedStudySpecification object, vector numeric weights","code":""},{"path":"www.github.com/reference/WeightCreators.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Direct Adjusted Weights for Treatment Effect Estimation ‚Äî ett","text":"functions primarily used weight argument lmitt() orlm(). arguments optional used within functions. used , specification data must provided. StudySpecification blocks, weights generated function ratio number treated units block versus total number units block. blocks ratio 0 1 (, units block treatment status), weights 0. effect removes target population block basis estimating either means treatment means control. block missing given observation, weight 0 applied. dichotomy specified formula consisting conditional statement left-hand side (identifying treatment levels associated \"treatment\") right hand side (identifying treatment levels associated \"control\"). example, treatment variable called dose doses 250 considered treatment, might write: dichotomy(spec) <- dose > 250 ~ dose <= 250 period (.) can used assign units assignment. example, written treatment regime either dichotomy(spec) <- dose > 250 ~ . dichotomy(spec) <- . ~ dose <= 250 dichotomy formula supports Relational Operators (see Comparison), Logical Operators (see Logic), %% (see match()). conditionals need assign values treatment control treatment, example, dose > 300 ~ dose < 200 assign 200 <= dose <= 300 either treatment control. equivalent manually generating binary variable NA whenever dose 200 300. Standard errors reflect sizes comparison groups specified dichotomy. Code computation weights contributed Tim Lycurgus.","code":""},{"path":"www.github.com/reference/WeightCreators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Direct Adjusted Weights for Treatment Effect Estimation ‚Äî ett","text":"","code":"data(simdata) spec <- rct_spec(z ~ unit_of_assignment(uoa1, uoa2), data = simdata) summary(lmitt(y ~ 1, data = simdata, specification = spec, weights = ate())) #>  #> Call: #> lmitt(y ~ 1, data = simdata, specification = spec, weights = ate()) #>  #>  Treatment Effects : #>    Estimate Std. Error t value Pr(>|t|) #> z.   0.1205     0.2301   0.524    0.603 #> Std. Error calculated via type \"CR0\" #>"},{"path":"www.github.com/reference/WeightedStudySpecification.subset.html","id":null,"dir":"Reference","previous_headings":"","what":"WeightedStudySpecification subsetting ‚Äî subset,WeightedStudySpecification-method","title":"WeightedStudySpecification subsetting ‚Äî subset,WeightedStudySpecification-method","text":"Provides functionality subset weights WeightedStudySpecification object.","code":""},{"path":"www.github.com/reference/WeightedStudySpecification.subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WeightedStudySpecification subsetting ‚Äî subset,WeightedStudySpecification-method","text":"","code":"# S4 method for class 'WeightedStudySpecification' subset(x, subset)  # S4 method for class 'WeightedStudySpecification' x[i]"},{"path":"www.github.com/reference/WeightedStudySpecification.subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WeightedStudySpecification subsetting ‚Äî subset,WeightedStudySpecification-method","text":"x WeightedStudySpecification object subset Logical vector identifying values keep drop indices specifying elements extract replace. See help(\"[\") details.","code":""},{"path":"www.github.com/reference/WeightedStudySpecification.subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"WeightedStudySpecification subsetting ‚Äî subset,WeightedStudySpecification-method","text":"WeightedStudySpecification object subsetted version x.","code":""},{"path":"www.github.com/reference/WeightedStudySpecificationOps.html","id":null,"dir":"Reference","previous_headings":"","what":"WeightedStudySpecification Operations ‚Äî +,WeightedStudySpecification,numeric-method","title":"WeightedStudySpecification Operations ‚Äî +,WeightedStudySpecification,numeric-method","text":"Algebraic operators WeightedStudySpecification objects numeric vectors. WeightedStudySpecifications support addition subtraction.","code":""},{"path":"www.github.com/reference/WeightedStudySpecificationOps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WeightedStudySpecification Operations ‚Äî +,WeightedStudySpecification,numeric-method","text":"","code":"# S4 method for class 'WeightedStudySpecification,numeric' e1 + e2  # S4 method for class 'numeric,WeightedStudySpecification' e1 + e2  # S4 method for class 'WeightedStudySpecification,numeric' e1 - e2  # S4 method for class 'numeric,WeightedStudySpecification' e1 - e2  # S4 method for class 'WeightedStudySpecification,numeric' e1 * e2  # S4 method for class 'numeric,WeightedStudySpecification' e1 * e2  # S4 method for class 'WeightedStudySpecification,numeric' e1/e2  # S4 method for class 'numeric,WeightedStudySpecification' e1/e2"},{"path":"www.github.com/reference/WeightedStudySpecificationOps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WeightedStudySpecification Operations ‚Äî +,WeightedStudySpecification,numeric-method","text":"e1, e2 WeightedStudySpecification numeric objects","code":""},{"path":"www.github.com/reference/WeightedStudySpecificationOps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"WeightedStudySpecification Operations ‚Äî +,WeightedStudySpecification,numeric-method","text":"WeightedStudySpecification object","code":""},{"path":"www.github.com/reference/WeightedStudySpecificationOps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"WeightedStudySpecification Operations ‚Äî +,WeightedStudySpecification,numeric-method","text":"primarily used either combine weights via multiplication, invert weights. Addition subtraction supported produce errors.","code":""},{"path":"www.github.com/reference/areg.center.html","id":null,"dir":"Reference","previous_headings":"","what":"Group-center akin to Stata's areg ‚Äî areg.center","title":"Group-center akin to Stata's areg ‚Äî areg.center","text":"Stata documentation: areg begins recalculating Y X mean 0 within groups specified absorb(). overall mean variable added back .","code":""},{"path":"www.github.com/reference/areg.center.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group-center akin to Stata's areg ‚Äî areg.center","text":"","code":"areg.center(mm, grp, wts = NULL, grand_mean_center = FALSE)"},{"path":"www.github.com/reference/areg.center.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group-center akin to Stata's areg ‚Äî areg.center","text":"mm Matrix variables center grp Group center wts Optional weights grand_mean_center Optional center output mean(var)","code":""},{"path":"www.github.com/reference/areg.center.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group-center akin to Stata's areg ‚Äî areg.center","text":"Vector group-centered values","code":""},{"path":"www.github.com/reference/as.SandwichLayer.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a PreSandwichLayer to a SandwichLayer with a StudySpecification object ‚Äî as.SandwichLayer","title":"Convert a PreSandwichLayer to a SandwichLayer with a StudySpecification object ‚Äî as.SandwichLayer","text":".SandwichLayer() uses StudySpecification object passed specification argument populate slots SandwichLayer object PreSandwichLayer sufficient information .","code":""},{"path":"www.github.com/reference/as.SandwichLayer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a PreSandwichLayer to a SandwichLayer with a StudySpecification object ‚Äî as.SandwichLayer","text":"","code":"as.SandwichLayer(x, specification, by = NULL, Q_data = NULL)"},{"path":"www.github.com/reference/as.SandwichLayer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a PreSandwichLayer to a SandwichLayer with a StudySpecification object ‚Äî as.SandwichLayer","text":"x PreSandwichLayer object specification StudySpecification object optional; string named vector unique identifier columns data used create specification data used fit covariance adjustment model. Default NULL, case unit assignment columns used identification (even uniquely identify units observation). named vector provided, names represent variables data used create specification, values represent variables covariance adjustment data. Q_data dataframe direct adjustment sample, needed generate keys slot SandwichLayer object. Defaults NULL, case NULL, data used create specification used, NULL, appropriate data call stack (passed arguments cov_adj() lmitt.formula(), example) used.","code":""},{"path":"www.github.com/reference/as.SandwichLayer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a PreSandwichLayer to a SandwichLayer with a StudySpecification object ‚Äî as.SandwichLayer","text":"SandwichLayer object","code":""},{"path":"www.github.com/reference/as_lmitt.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert lm object into teeMod ‚Äî as.lmitt","title":"Convert lm object into teeMod ‚Äî as.lmitt","text":"Converts output lm() teeMod object, standard errors account block cluster information carried lm's weights, /offset incorporating predictions outcome separate model.","code":""},{"path":"www.github.com/reference/as_lmitt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert lm object into teeMod ‚Äî as.lmitt","text":"","code":"as.lmitt(x, specification = NULL)  as.teeMod(x, specification = NULL)"},{"path":"www.github.com/reference/as_lmitt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert lm object into teeMod ‚Äî as.lmitt","text":"x lm object weights containing WeightedStudySpecification, offset cov_adj(). specification Optional, explicitly specify StudySpecification used. StudySpecification specified elsewhere x (e.g. passed argument ate(), ett(), cov_adj() assigned()) found automatically need passed well. (different StudySpecification objects passed (either lm weights covariance adjustment, argument), error produced.)","code":""},{"path":"www.github.com/reference/as_lmitt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert lm object into teeMod ‚Äî as.lmitt","text":"teeMod object","code":""},{"path":"www.github.com/reference/as_lmitt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert lm object into teeMod ‚Äî as.lmitt","text":"formula x created must include treatment identifier (e.g. assigned()).  model-based offset incorportated, model's predictions extracted using cov_adj() (opposed predict{} order teeMod standard error calculations reflect propagation error predictions. mechanism supports treatment main effects: estimate interactions treatment assignment moderator variable, use lmitt() instead lm() .lmitt().","code":""},{"path":"www.github.com/reference/bread.teeMod.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract bread matrix from a teeMod model fit ‚Äî bread.teeMod","title":"Extract bread matrix from a teeMod model fit ‚Äî bread.teeMod","text":"S3method sandwich::bread extracts bread direct adjustment model sandwich covariance matrix.","code":""},{"path":"www.github.com/reference/bread.teeMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract bread matrix from a teeMod model fit ‚Äî bread.teeMod","text":"","code":"# S3 method for class 'teeMod' bread(x, ...)"},{"path":"www.github.com/reference/bread.teeMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract bread matrix from a teeMod model fit ‚Äî bread.teeMod","text":"x fitted teeMod model ... arguments passed methods","code":""},{"path":"www.github.com/reference/bread.teeMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract bread matrix from a teeMod model fit ‚Äî bread.teeMod","text":"\\(2\\times 2\\) matrix corresponding intercept treatment variable direct adjustment model","code":""},{"path":"www.github.com/reference/bread.teeMod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract bread matrix from a teeMod model fit ‚Äî bread.teeMod","text":"function thin wrapper around .get_tilde_a22_inverse().","code":""},{"path":"www.github.com/reference/c-WeightedStudySpecification-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate weights ‚Äî c,WeightedStudySpecification-method","title":"Concatenate weights ‚Äî c,WeightedStudySpecification-method","text":"Given several variations weights generated single StudySpecification, combine single weight.","code":""},{"path":"www.github.com/reference/c-WeightedStudySpecification-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate weights ‚Äî c,WeightedStudySpecification-method","text":"","code":"# S4 method for class 'WeightedStudySpecification' c(x, ..., warn_dichotomy_not_equal = FALSE)"},{"path":"www.github.com/reference/c-WeightedStudySpecification-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate weights ‚Äî c,WeightedStudySpecification-method","text":"x, .. WeightedStudySpecification object, typically created ate() ett() ... number additional WeightedStudySpecification objects equivalent StudySpecification x eachother warn_dichotomy_not_equal FALSE (default), WeightedStudySpecifications considered equivalent even dichotomy differs. TRUE, warning produced.","code":""},{"path":"www.github.com/reference/c-WeightedStudySpecification-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate weights ‚Äî c,WeightedStudySpecification-method","text":"numeric vector weights concatenated input order.","code":""},{"path":"www.github.com/reference/c-WeightedStudySpecification-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Concatenate weights ‚Äî c,WeightedStudySpecification-method","text":"Concatenating WeightedStudySpecification objects c() requires individual WeightedStudySpecification objects come StudySpecification target (e.g created ate() created ett(), mixing--matching). arguments c() must WeightedStudySpecification. WeightedStudySpecification objects may concatenated together even without @dichotomy slot. procedure prompts warning differing dichotomies argument warn_dichotomy_not_equal set TRUE.","code":""},{"path":"www.github.com/reference/c-WeightedStudySpecification-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate weights ‚Äî c,WeightedStudySpecification-method","text":"","code":"data(simdata) spec <- rct_spec(z ~ unit_of_assignment(uoa1, uoa2), data = simdata) w1 <- ate(spec, data = simdata[1:30,]) w2 <- ate(spec, data = simdata[31:40,]) w3 <- ate(spec, data = simdata[41:50,]) c_w <- c(w1, w2, w3) c(length(w1), length(w2), length(w3), length(c_w)) #> [1] 30 10 10 50  spec <- rct_spec(dose ~ unit_of_assignment(uoa1, uoa2), data = simdata) w1 <- ate(spec, data = simdata[1:10, ], dichotomy = dose >= 300 ~ .) w2 <- ate(spec, data = simdata[11:30, ], dichotomy = dose >= 200 ~ .) w3 <- ate(spec, data = simdata[31:50, ], dichotomy = dose >= 100 ~ .) c_w <- c(w1, w2, w3)"},{"path":"www.github.com/reference/confint.teeMod.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence intervals with standard errors provided by vcov.teeMod() ‚Äî confint.teeMod","title":"Confidence intervals with standard errors provided by vcov.teeMod() ‚Äî confint.teeMod","text":"S3method stats::confint uses standard errors computed using vcov.teeMod(). Additional arguments passed function, cluster type, specify arguments vcov.teeMod() call.","code":""},{"path":"www.github.com/reference/confint.teeMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence intervals with standard errors provided by vcov.teeMod() ‚Äî confint.teeMod","text":"","code":"# S3 method for class 'teeMod' confint(object, parm, level = 0.95, ...)"},{"path":"www.github.com/reference/confint.teeMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence intervals with standard errors provided by vcov.teeMod() ‚Äî confint.teeMod","text":"object fitted teeMod model parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level confidence level required. ... additional arguments pass vcov.teeMod()","code":""},{"path":"www.github.com/reference/confint.teeMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence intervals with standard errors provided by vcov.teeMod() ‚Äî confint.teeMod","text":"matrix (vector) columns giving lower upper confidence limits parameter. labelled (1-level)/2 1 - (1-level)/2 % (default 2.5% 97.5%)","code":""},{"path":"www.github.com/reference/confint.teeMod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence intervals with standard errors provided by vcov.teeMod() ‚Äî confint.teeMod","text":"Rather call stats::confint.lm(), confint.teeMod() calls .confint_lm(), function internal propertee package ensures additional arguments ... confint.teeMod() call passed internal vcov() call.","code":""},{"path":"www.github.com/reference/cov_adj.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance adjustment of teeMod model estimates ‚Äî cov_adj","title":"Covariance adjustment of teeMod model estimates ‚Äî cov_adj","text":"cov_adj() takes fitted covariance model returns information necessary adjusting direct adjustment model estimates associated standard errors covariates. Standard errors reflect adjustments made outcomes well contributions sampling variability arising estimates covariance adjustment model coefficients.","code":""},{"path":"www.github.com/reference/cov_adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance adjustment of teeMod model estimates ‚Äî cov_adj","text":"","code":"cov_adj(model, newdata = NULL, specification = NULL, by = NULL)"},{"path":"www.github.com/reference/cov_adj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance adjustment of teeMod model estimates ‚Äî cov_adj","text":"model model inherits glm, lm, robustbase::lmrob object newdata dataframe new data. Default NULL, case dataframe sought higher call stack. specification StudySpecification object. Default NULL, case StudySpecification object sought higher call stack. optional; string named vector unique identifier columns data used create specification data used fit covariance adjustment model. Default NULL, case unit assignment columns used identification (even uniquely identify units observation). named vector provided, names represent variables data used create specification, values represent variables covariance adjustment data.","code":""},{"path":"www.github.com/reference/cov_adj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance adjustment of teeMod model estimates ‚Äî cov_adj","text":"SandwichLayer specification NULL StudySpecification object found call stack, otherwise PreSandwichLayer object","code":""},{"path":"www.github.com/reference/cov_adj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Covariance adjustment of teeMod model estimates ‚Äî cov_adj","text":"Prior generating adjustments, cov_adj() identifies treatment variable specified StudySpecification object passed specification replaces values reference level. treatment logical type, reference level FALSE, numeric type, smallest non-negative value (means 0 0/1 binary). Factor treatments currently supported StudySpecification objects. values output vector represent adjustments outcomes newdata newdata provided; adjustments outcomes data used fit teeMod model cov_adj() called within offset argument model fit; fitted values model relevant dataframe can extracted call stack. length output cov_adj() match number rows dataframe used.","code":""},{"path":"www.github.com/reference/cov_adj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covariance adjustment of teeMod model estimates ‚Äî cov_adj","text":"","code":"data(STARdata) STARdata$studentID <- rownames(STARdata)  y0hat_read <- lm(readk ~ gender + ethnicity + lunchk +                      ladderk + experiencek + tethnicityk,                  data = STARdata, subset = stark !=\"small\")  STARspec <- rct_spec(stark ~ unit_of_assignment(studentID),                      data = STARdata) ett_wts    <- ett(STARspec, data = STARdata,                   dichotomy= stark ==\"small\" ~.)  ett_read <- lm(readk ~ assigned(dichotomy= stark ==\"small\" ~.),                ### expect warning about NAs generated here:                offset = cov_adj(y0hat_read, newdata = STARdata),                data = STARdata,                weights = ett_wts) #> Warning: Some covariance adjustments are NA; be careful of dropping these observations when fitting the ITT effect model #> Warning: Some covariance adjustments are NA; be careful of dropping these observations when fitting the ITT effect model coef(ett_read) #>                                (Intercept)  #>                              -1.150011e-13  #> assigned(dichotomy = stark == \"small\" ~ .)  #>                               5.554179e+00  ett_read |> as.lmitt() |> vcov() #> Error in .make_uoa_cluster_df(x@StudySpecification, id_col): Could not find studentID column in the specification data  ate_read <- lmitt(readk ~ 1, STARspec, STARdata,                   dichotomy= stark ==\"small\" ~.,                   offset = cov_adj(y0hat_read, newdata = STARdata),                   weights = \"ate\") #> Warning: Some covariance adjustments are NA; be careful of dropping these observations when fitting the ITT effect model show(ate_read) #>   stark.  #> 5.554179  coef(ate_read) #>   (Intercept)        stark.  #> -1.066237e-13  5.554179e+00  vcov(ate_read) #> Error in .make_uoa_cluster_df(x@StudySpecification, id_col): Could not find studentID column in the specification data  ate_read_loc <-     lmitt(readk ~ schoolk, STARspec, STARdata,           dichotomy= stark ==\"small\" ~.,           offset = cov_adj(y0hat_read, newdata = STARdata),           weights = \"ate\") #> Warning: Some covariance adjustments are NA; be careful of dropping these observations when fitting the ITT effect model show(ate_read_loc) #> `stark._schoolkinner-city`     stark._schoolksuburban  #>                   5.403909                   5.888685  #>        stark._schoolkrural        stark._schoolkurban  #>                   5.980288                   2.155538"},{"path":"www.github.com/reference/dot-add_mat_diag.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .add_mat_diag","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .add_mat_diag","text":"(Internal) Helper function design-based meat matrix calculation","code":""},{"path":"www.github.com/reference/dot-add_mat_diag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .add_mat_diag","text":"","code":".add_mat_diag(A, B)"},{"path":"www.github.com/reference/dot-add_mat_sqdif.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .add_mat_sqdif","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .add_mat_sqdif","text":"(Internal) Helper function design-based meat matrix calculation","code":""},{"path":"www.github.com/reference/dot-add_mat_sqdif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .add_mat_sqdif","text":"","code":".add_mat_sqdif(X, zobs, bid, b, upper = TRUE)"},{"path":"www.github.com/reference/dot-add_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .add_vec","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .add_vec","text":"(Internal) Helper function design-based meat matrix calculation","code":""},{"path":"www.github.com/reference/dot-add_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .add_vec","text":"","code":".add_vec(a, upper = TRUE)"},{"path":"www.github.com/reference/dot-aggregate_to_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Aggregate weights and outcomes to cluster level ‚Äî .aggregate_to_cluster","title":"(Internal) Aggregate weights and outcomes to cluster level ‚Äî .aggregate_to_cluster","text":"(Internal) Aggregate weights outcomes cluster level","code":""},{"path":"www.github.com/reference/dot-aggregate_to_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Aggregate weights and outcomes to cluster level ‚Äî .aggregate_to_cluster","text":"","code":".aggregate_to_cluster(x, ...)"},{"path":"www.github.com/reference/dot-aggregate_to_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Aggregate weights and outcomes to cluster level ‚Äî .aggregate_to_cluster","text":"x fitted teeMod model","code":""},{"path":"www.github.com/reference/dot-aggregate_to_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Aggregate weights and outcomes to cluster level ‚Äî .aggregate_to_cluster","text":"list data frame cluster weights, outcomes, treatments, block ids; treatment id column name; block id column name","code":""},{"path":"www.github.com/reference/dot-aggregate_to_cluster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Aggregate weights and outcomes to cluster level ‚Äî .aggregate_to_cluster","text":"aggregate individual weights outcomes cluster weighted sums","code":""},{"path":"www.github.com/reference/dot-align_and_extend_estfuns.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Align the dimensions and rows of direct adjustment and covariance adjustment model estimating equations matrices ‚Äî .align_and_extend_estfuns","title":"(Internal) Align the dimensions and rows of direct adjustment and covariance adjustment model estimating equations matrices ‚Äî .align_and_extend_estfuns","text":"(Internal) Align dimensions rows direct adjustment covariance adjustment model estimating equations matrices","code":""},{"path":"www.github.com/reference/dot-align_and_extend_estfuns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Align the dimensions and rows of direct adjustment and covariance adjustment model estimating equations matrices ‚Äî .align_and_extend_estfuns","text":"","code":".align_and_extend_estfuns(x, by = NULL, ...)"},{"path":"www.github.com/reference/dot-align_and_extend_estfuns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Align the dimensions and rows of direct adjustment and covariance adjustment model estimating equations matrices ‚Äî .align_and_extend_estfuns","text":"x fitted teeMod model character vector; indicates unit assignment columns generate ID's ; default NULL, uses unit assignment columns specified teeMod object's StudySpecification slot ... arguments passed methods","code":""},{"path":"www.github.com/reference/dot-align_and_extend_estfuns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Align the dimensions and rows of direct adjustment and covariance adjustment model estimating equations matrices ‚Äî .align_and_extend_estfuns","text":"list two matrices, one aligned contributions estimating equations direct adjustment model, aligned contributions covariance adjustment model.","code":""},{"path":"www.github.com/reference/dot-align_and_extend_estfuns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Align the dimensions and rows of direct adjustment and covariance adjustment model estimating equations matrices ‚Äî .align_and_extend_estfuns","text":".align_and_extend_estfuns() first extracts matrices contributions empirical estimating equations direct adjustment covariance adjustment models; , pads matrices zeros account units observation appear one model-fitting sample ; finally orders matrices units observation (unit observation-level ordering impossible, units assignment) aligned.","code":""},{"path":"www.github.com/reference/dot-apply_dichotomy.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Applies dichotomy to treatment ‚Äî .apply_dichotomy","title":"(Internal) Applies dichotomy to treatment ‚Äî .apply_dichotomy","text":"Given dichotomy formula data.frame treatment variable variables formula, returns vector containing 0, 1, NA.","code":""},{"path":"www.github.com/reference/dot-apply_dichotomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Applies dichotomy to treatment ‚Äî .apply_dichotomy","text":"","code":".apply_dichotomy(txt, dichotomy)"},{"path":"www.github.com/reference/dot-apply_dichotomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Applies dichotomy to treatment ‚Äî .apply_dichotomy","text":"txt named data.frame containing column treatment, produed treatment(myspecification), variables specified dichotomy. dichotomy formula specifying dichotomize non-binary treatment column txt (call evaluates formula). See Details section ett() att() help pages information specifying formula","code":""},{"path":"www.github.com/reference/dot-apply_dichotomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Applies dichotomy to treatment ‚Äî .apply_dichotomy","text":"vector binary treatments","code":""},{"path":"www.github.com/reference/dot-as_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert object to data.frame or produce meaningful error ‚Äî .as_data_frame","title":"Convert object to data.frame or produce meaningful error ‚Äî .as_data_frame","text":"Convert object data.frame produce meaningful error","code":""},{"path":"www.github.com/reference/dot-as_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert object to data.frame or produce meaningful error ‚Äî .as_data_frame","text":"","code":".as_data_frame(x)"},{"path":"www.github.com/reference/dot-as_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert object to data.frame or produce meaningful error ‚Äî .as_data_frame","text":"x object","code":""},{"path":"www.github.com/reference/dot-as_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert object to data.frame or produce meaningful error ‚Äî .as_data_frame","text":"x data.frame","code":""},{"path":"www.github.com/reference/dot-base_S3class_estfun.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Extract empirical estimating equations from a teeMod model using the S3 method associated with its .S3Class slot ‚Äî .base_S3class_estfun","title":"(Internal) Extract empirical estimating equations from a teeMod model using the S3 method associated with its .S3Class slot ‚Äî .base_S3class_estfun","text":"(Internal) Extract empirical estimating equations teeMod model using S3 method associated .S3Class slot","code":""},{"path":"www.github.com/reference/dot-base_S3class_estfun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Extract empirical estimating equations from a teeMod model using the S3 method associated with its .S3Class slot ‚Äî .base_S3class_estfun","text":"","code":".base_S3class_estfun(x)"},{"path":"www.github.com/reference/dot-base_S3class_estfun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Extract empirical estimating equations from a teeMod model using the S3 method associated with its .S3Class slot ‚Äî .base_S3class_estfun","text":"x fitted teeMod model","code":""},{"path":"www.github.com/reference/dot-base_S3class_estfun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Extract empirical estimating equations from a teeMod model using the S3 method associated with its .S3Class slot ‚Äî .base_S3class_estfun","text":"S3 method","code":""},{"path":"www.github.com/reference/dot-bin_txt.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Extracts treatment as binary vector ‚Äî .bin_txt","title":"(Internal) Extracts treatment as binary vector ‚Äî .bin_txt","text":"(Internal) Extracts treatment binary vector","code":""},{"path":"www.github.com/reference/dot-bin_txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Extracts treatment as binary vector ‚Äî .bin_txt","text":"","code":".bin_txt(spec, data = NULL, dichotomy = NULL)"},{"path":"www.github.com/reference/dot-bin_txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Extracts treatment as binary vector ‚Äî .bin_txt","text":"spec StudySpecification, used get treatment assignment information data dataframe unit assignment information , dichotomy provided, columns specified therein dichotomy Optional, formula. See Details section ett() att() help pages information specifying formula","code":""},{"path":"www.github.com/reference/dot-bin_txt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Extracts treatment as binary vector ‚Äî .bin_txt","text":"vector binary treatments","code":""},{"path":"www.github.com/reference/dot-bin_txt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Extracts treatment as binary vector ‚Äî .bin_txt","text":"dichotomy specified StudySpecification treatment variable consisting 0/1 NA, returns binary treatment. Otherwise (non-binary treatment lacks dichotomy) errors.","code":""},{"path":"www.github.com/reference/dot-check_by.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) A few checks to ensure by= is valid ‚Äî .check_by","title":"(Internal) A few checks to ensure by= is valid ‚Äî .check_by","text":"Thie ensures = argument proper type, named, consists unique entries.","code":""},{"path":"www.github.com/reference/dot-check_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) A few checks to ensure by= is valid ‚Äî .check_by","text":"","code":".check_by(by)"},{"path":"www.github.com/reference/dot-check_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) A few checks to ensure by= is valid ‚Äî .check_by","text":"named vector list connecting names unit assignment/unitid/cluster variables specification unit assignment/unitid/cluster variables data. Names represent variables StudySpecification; values represent variables data.","code":""},{"path":"www.github.com/reference/dot-check_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) A few checks to ensure by= is valid ‚Äî .check_by","text":"NULL errors found","code":""},{"path":"www.github.com/reference/dot-check_df_moderator_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Replace standard errors for moderator effect estimates with insufficient degrees of freedom with NA ‚Äî .check_df_moderator_estimates","title":"(Internal) Replace standard errors for moderator effect estimates with insufficient degrees of freedom with NA ‚Äî .check_df_moderator_estimates","text":"(Internal) Replace standard errors moderator effect estimates insufficient degrees freedom NA","code":""},{"path":"www.github.com/reference/dot-check_df_moderator_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Replace standard errors for moderator effect estimates with insufficient degrees of freedom with NA ‚Äî .check_df_moderator_estimates","text":"","code":".check_df_moderator_estimates(   vmat,   model,   cluster_cols,   model_data = quote(data),   envir = environment(formula(model)) )"},{"path":"www.github.com/reference/dot-check_df_moderator_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Replace standard errors for moderator effect estimates with insufficient degrees of freedom with NA ‚Äî .check_df_moderator_estimates","text":"vmat output .vcov_XXX() called input model argument first argument model fitted teeMod model cluster_cols character vector indicating column(s) defining cluster ID's model_data dataframe name dataframe used fit model envir environment get model_data model_data class name","code":""},{"path":"www.github.com/reference/dot-check_df_moderator_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Replace standard errors for moderator effect estimates with insufficient degrees of freedom with NA ‚Äî .check_df_moderator_estimates","text":"variance-covariance matrix NA's estimates lacking sufficient degrees freedom","code":""},{"path":"www.github.com/reference/dot-check_spec_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Perform checks on formula for creation of StudySpecification. ‚Äî .check_spec_formula","title":"(Internal) Perform checks on formula for creation of StudySpecification. ‚Äî .check_spec_formula","text":"Checks performed: Ensure presence exactly one unit_of_assignment(), cluster() unitid(). Disallow multiple block() multiple forcing() terms. Disallow forcing() unless RDD.","code":""},{"path":"www.github.com/reference/dot-check_spec_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Perform checks on formula for creation of StudySpecification. ‚Äî .check_spec_formula","text":"","code":".check_spec_formula(form, allow_forcing = FALSE)"},{"path":"www.github.com/reference/dot-check_spec_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Perform checks on formula for creation of StudySpecification. ‚Äî .check_spec_formula","text":"form formula passed .new_StudySpecification() allow_forcing Binary whether forcing() allowed (TRUE RDD, FALSE RCT Obs).","code":""},{"path":"www.github.com/reference/dot-check_spec_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Perform checks on formula for creation of StudySpecification. ‚Äî .check_spec_formula","text":"TRUE checks pass, otherwise errors.","code":""},{"path":"www.github.com/reference/dot-confint_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce confidence intervals for linear models ‚Äî .confint_lm","title":"Produce confidence intervals for linear models ‚Äî .confint_lm","text":"Produce confidence intervals linear models","code":""},{"path":"www.github.com/reference/dot-confint_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce confidence intervals for linear models ‚Äî .confint_lm","text":"","code":".confint_lm(object, parm, level = 0.95, ...)"},{"path":"www.github.com/reference/dot-confint_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce confidence intervals for linear models ‚Äî .confint_lm","text":"object fitted teeMod model parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level confidence level required. ... additional arguments pass vcov.teeMod()","code":""},{"path":"www.github.com/reference/dot-confint_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce confidence intervals for linear models ‚Äî .confint_lm","text":"matrix (vector) columns giving lower upper confidence limits parameter. labelled (1-level)/2 1 - (1-level)/2 % (default 2.5% 97.5%)","code":""},{"path":"www.github.com/reference/dot-confint_lm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Produce confidence intervals for linear models ‚Äî .confint_lm","text":".confint_lm() copy stats::confint.lm passes arguments ... vcov() call. called teeMod model, produces confidence intervals standard errors computed based desired formulation vcov_tee() call.","code":""},{"path":"www.github.com/reference/dot-convert_to_data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Ensures replacement column for StudySpecification is a data.frame. ‚Äî .convert_to_data.frame","title":"(Internal) Ensures replacement column for StudySpecification is a data.frame. ‚Äî .convert_to_data.frame","text":"Helper function StudySpecification replacers ensure replacement properly named data.frame","code":""},{"path":"www.github.com/reference/dot-convert_to_data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Ensures replacement column for StudySpecification is a data.frame. ‚Äî .convert_to_data.frame","text":"","code":".convert_to_data.frame(value, specification, type)"},{"path":"www.github.com/reference/dot-convert_to_data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Ensures replacement column for StudySpecification is a data.frame. ‚Äî .convert_to_data.frame","text":"value vector data.frame containing replacement. specification StudySpecification type One \"t\", \"f\", \"u\" \"b\"","code":""},{"path":"www.github.com/reference/dot-convert_to_data.frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Ensures replacement column for StudySpecification is a data.frame. ‚Äî .convert_to_data.frame","text":"data.frame containing named column(s)","code":""},{"path":"www.github.com/reference/dot-convert_to_data.frame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Ensures replacement column for StudySpecification is a data.frame. ‚Äî .convert_to_data.frame","text":"given replacement set values (e.g vector matrix), ensures replacement named data.frame. Input vector: Since named, vector can used replace existing component. existing component 1 column, uses name first column. Input matrix data.frame: unnamed replacing existing component, must columns original component. (less columns, uses name first columns.) named, can replace number columns.","code":""},{"path":"www.github.com/reference/dot-cov01_est.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .cov01_est","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .cov01_est","text":"(Internal) Helper function design-based meat matrix calculation","code":""},{"path":"www.github.com/reference/dot-cov01_est.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .cov01_est","text":"","code":".cov01_est(XX, zobs, bid)"},{"path":"www.github.com/reference/dot-cov01_est.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .cov01_est","text":"estimated upper lower bounds covariance matrix estimating function vectors treatment control","code":""},{"path":"www.github.com/reference/dot-cov01_est.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .cov01_est","text":"Young's elementary inequality used","code":""},{"path":"www.github.com/reference/dot-cov_mat_est.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .cov_mat_est","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .cov_mat_est","text":"(Internal) Helper function design-based meat matrix calculation","code":""},{"path":"www.github.com/reference/dot-cov_mat_est.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .cov_mat_est","text":"","code":".cov_mat_est(XXz, bidz)"},{"path":"www.github.com/reference/dot-cov_mat_est.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .cov_mat_est","text":"estimated upper lower bounds covariance matrix estimating function vectors either treatment control","code":""},{"path":"www.github.com/reference/dot-cov_mat_est.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .cov_mat_est","text":"Diagonal elements estimated sample variances -diagonal elements estimated using Young's elementary inequality","code":""},{"path":"www.github.com/reference/dot-estfun_DB_blockabsorb.html","id":null,"dir":"Reference","previous_headings":"","what":"Design-based estimating equations contributions ‚Äî .estfun_DB_blockabsorb","title":"Design-based estimating equations contributions ‚Äî .estfun_DB_blockabsorb","text":"Design-based estimating equations contributions","code":""},{"path":"www.github.com/reference/dot-estfun_DB_blockabsorb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Design-based estimating equations contributions ‚Äî .estfun_DB_blockabsorb","text":"","code":".estfun_DB_blockabsorb(x, by = NULL, ...)"},{"path":"www.github.com/reference/dot-estfun_DB_blockabsorb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Design-based estimating equations contributions ‚Äî .estfun_DB_blockabsorb","text":"x fitted teeMod object ... arguments passed methods","code":""},{"path":"www.github.com/reference/dot-estfun_DB_blockabsorb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Design-based estimating equations contributions ‚Äî .estfun_DB_blockabsorb","text":"\\(n\\times k\\) matrix","code":""},{"path":"www.github.com/reference/dot-estfun_DB_blockabsorb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Design-based estimating equations contributions ‚Äî .estfun_DB_blockabsorb","text":"calculate contributions empirical estimating equations teeMod model absorbed intercepts design-based perspective","code":""},{"path":"www.github.com/reference/dot-expand.model.frame_teeMod.html","id":null,"dir":"Reference","previous_headings":"","what":"Add new variables to a model frame from a teeMod object ‚Äî .expand.model.frame_teeMod","title":"Add new variables to a model frame from a teeMod object ‚Äî .expand.model.frame_teeMod","text":"variation expand.model.frame works teeMod objects","code":""},{"path":"www.github.com/reference/dot-expand.model.frame_teeMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add new variables to a model frame from a teeMod object ‚Äî .expand.model.frame_teeMod","text":"","code":".expand.model.frame_teeMod(   model,   extras,   envir = environment(formula(model)),   na.expand = FALSE )"},{"path":"www.github.com/reference/dot-expand.model.frame_teeMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add new variables to a model frame from a teeMod object ‚Äî .expand.model.frame_teeMod","text":"model teeMod object extras one-sided formula vector character strings describing new variables added envir environment evaluate things na.expand logical; see stats::expand.model.frame details","code":""},{"path":"www.github.com/reference/dot-expand.model.frame_teeMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add new variables to a model frame from a teeMod object ‚Äî .expand.model.frame_teeMod","text":"data.frame","code":""},{"path":"www.github.com/reference/dot-expand.model.frame_teeMod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add new variables to a model frame from a teeMod object ‚Äî .expand.model.frame_teeMod","text":"building teeMod object inside lmitt(), lot manipulation variables involved model time teeMod produced, neither outcome predictors actually fit model exist data passed call. (E.g. specific, user calls myda <- lmitt(y ~ 1, data = mydata), model.frame(myda) contain column names found mydata.) clone stats::expand.model.frame() one addition extracting model$call$data model, adds columns model.frame(model) object. ensures additional variables created lmitt() can found. Trivial modifications stats::expand.model.frame() include ensuring model teeMod object, using :: syntax appropriate.","code":""},{"path":"www.github.com/reference/dot-expand_txt.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Expand treatment variable from a StudySpecification to a dataframe with unit of assignment information ‚Äî .expand_txt","title":"(Internal) Expand treatment variable from a StudySpecification to a dataframe with unit of assignment information ‚Äî .expand_txt","text":"(Internal) Expand treatment variable StudySpecification dataframe unit assignment information","code":""},{"path":"www.github.com/reference/dot-expand_txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Expand treatment variable from a StudySpecification to a dataframe with unit of assignment information ‚Äî .expand_txt","text":"","code":".expand_txt(txt, data, spec)"},{"path":"www.github.com/reference/dot-expand_txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Expand treatment variable from a StudySpecification to a dataframe with unit of assignment information ‚Äî .expand_txt","text":"txt dataframe one column corresponding treatment. Can dichotomized stored spec data dataframe unit assignment information spec StudySpecification, used align unit assignment information txt","code":""},{"path":"www.github.com/reference/dot-fallback_data_search.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Fallback brute force method to locate data in the call stack. ‚Äî .fallback_data_search","title":"(Internal) Fallback brute force method to locate data in the call stack. ‚Äî .fallback_data_search","text":"try intelligent finding appropriate data. fails, may need brute force method just loops frames looks data object.","code":""},{"path":"www.github.com/reference/dot-fallback_data_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Fallback brute force method to locate data in the call stack. ‚Äî .fallback_data_search","text":"","code":".fallback_data_search()"},{"path":"www.github.com/reference/dot-fallback_data_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Fallback brute force method to locate data in the call stack. ‚Äî .fallback_data_search","text":"found, data.","code":""},{"path":"www.github.com/reference/dot-find_dichotomies.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find dichotomy formulas in the call stack ‚Äî .find_dichotomies","title":"(Internal) Find dichotomy formulas in the call stack ‚Äî .find_dichotomies","text":"(Internal) Find dichotomy formulas call stack","code":""},{"path":"www.github.com/reference/dot-find_dichotomies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find dichotomy formulas in the call stack ‚Äî .find_dichotomies","text":"","code":".find_dichotomies()"},{"path":"www.github.com/reference/dot-find_dichotomies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Find dichotomy formulas in the call stack ‚Äî .find_dichotomies","text":"list elements either formulas NULL, depending whether dichotomy argument found lmitt.formula() weights argument","code":""},{"path":"www.github.com/reference/dot-find_dichotomies.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Find dichotomy formulas in the call stack ‚Äî .find_dichotomies","text":".find_dichotomies() searches lmitt.formula() calls weights arguments dichotomy arguments.","code":""},{"path":"www.github.com/reference/dot-get_DB_covadj_bread.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Bread matrix of design-based variance ‚Äî .get_DB_covadj_bread","title":"(Internal) Bread matrix of design-based variance ‚Äî .get_DB_covadj_bread","text":"(Internal) Bread matrix design-based variance","code":""},{"path":"www.github.com/reference/dot-get_DB_covadj_bread.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Bread matrix of design-based variance ‚Äî .get_DB_covadj_bread","text":"","code":".get_DB_covadj_bread(x, ...)"},{"path":"www.github.com/reference/dot-get_DB_covadj_bread.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Bread matrix of design-based variance ‚Äî .get_DB_covadj_bread","text":"x fitted teeMod model","code":""},{"path":"www.github.com/reference/dot-get_DB_covadj_bread.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Bread matrix of design-based variance ‚Äî .get_DB_covadj_bread","text":"list bread matrices","code":""},{"path":"www.github.com/reference/dot-get_DB_covadj_bread.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Bread matrix of design-based variance ‚Äî .get_DB_covadj_bread","text":"Calculate bread matrix design-based variance estimate teeMod models covariance adjustment without absorbed effects","code":""},{"path":"www.github.com/reference/dot-get_DB_covadj_meat.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Meat matrix of design-based variance ‚Äî .get_DB_covadj_meat","title":"(Internal) Meat matrix of design-based variance ‚Äî .get_DB_covadj_meat","text":"(Internal) Meat matrix design-based variance","code":""},{"path":"www.github.com/reference/dot-get_DB_covadj_meat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Meat matrix of design-based variance ‚Äî .get_DB_covadj_meat","text":"","code":".get_DB_covadj_meat(x, ...)"},{"path":"www.github.com/reference/dot-get_DB_covadj_meat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Meat matrix of design-based variance ‚Äî .get_DB_covadj_meat","text":"x fitted teeMod model","code":""},{"path":"www.github.com/reference/dot-get_DB_covadj_meat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Meat matrix of design-based variance ‚Äî .get_DB_covadj_meat","text":"list meat matrix bounds","code":""},{"path":"www.github.com/reference/dot-get_DB_covadj_meat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Meat matrix of design-based variance ‚Äî .get_DB_covadj_meat","text":"Calculate upper lower bound estimates meat matrix design-based variance estimate teeMod models covariance adjustment without absorbed effects","code":""},{"path":"www.github.com/reference/dot-get_DB_covadj_se.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Design-based variance for models with covariance adjustment ‚Äî .get_DB_covadj_se","title":"(Internal) Design-based variance for models with covariance adjustment ‚Äî .get_DB_covadj_se","text":"(Internal) Design-based variance models covariance adjustment","code":""},{"path":"www.github.com/reference/dot-get_DB_covadj_se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Design-based variance for models with covariance adjustment ‚Äî .get_DB_covadj_se","text":"","code":".get_DB_covadj_se(x, ...)"},{"path":"www.github.com/reference/dot-get_DB_covadj_se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Design-based variance for models with covariance adjustment ‚Äî .get_DB_covadj_se","text":"x fitted teeMod model","code":""},{"path":"www.github.com/reference/dot-get_DB_covadj_se.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Design-based variance for models with covariance adjustment ‚Äî .get_DB_covadj_se","text":"design-based variance estimate main treatment effect estimate","code":""},{"path":"www.github.com/reference/dot-get_DB_covadj_se.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Design-based variance for models with covariance adjustment ‚Äî .get_DB_covadj_se","text":"Calculate design-based variance estimate teeMod models covariance adjustment without absorbed effects","code":""},{"path":"www.github.com/reference/dot-get_DB_wo_covadj_se.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Design-based variance for models without covariance adjustment ‚Äî .get_DB_wo_covadj_se","title":"(Internal) Design-based variance for models without covariance adjustment ‚Äî .get_DB_wo_covadj_se","text":"(Internal) Design-based variance models without covariance adjustment","code":""},{"path":"www.github.com/reference/dot-get_DB_wo_covadj_se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Design-based variance for models without covariance adjustment ‚Äî .get_DB_wo_covadj_se","text":"","code":".get_DB_wo_covadj_se(x, ...)"},{"path":"www.github.com/reference/dot-get_DB_wo_covadj_se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Design-based variance for models without covariance adjustment ‚Äî .get_DB_wo_covadj_se","text":"x fitted teeMod model","code":""},{"path":"www.github.com/reference/dot-get_DB_wo_covadj_se.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Design-based variance for models without covariance adjustment ‚Äî .get_DB_wo_covadj_se","text":"design-based variance estimate main treatment effect estimate","code":""},{"path":"www.github.com/reference/dot-get_DB_wo_covadj_se.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Design-based variance for models without covariance adjustment ‚Äî .get_DB_wo_covadj_se","text":"Calculate bread matrix design-based variance estimate teeMod models without covariance adjustment without absorbed effects","code":""},{"path":"www.github.com/reference/dot-get_appinv_atp.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Product of \\(A_{pp}^{-1} A_{\\tau p}^T\\) ‚Äî .get_appinv_atp","title":"(Internal) Product of \\(A_{pp}^{-1} A_{\\tau p}^T\\) ‚Äî .get_appinv_atp","text":"(Internal) Product \\(A_{pp}^{-1} A_{\\tau p}^T\\)","code":""},{"path":"www.github.com/reference/dot-get_appinv_atp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Product of \\(A_{pp}^{-1} A_{\\tau p}^T\\) ‚Äî .get_appinv_atp","text":"","code":".get_appinv_atp(x, ...)"},{"path":"www.github.com/reference/dot-get_appinv_atp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Product of \\(A_{pp}^{-1} A_{\\tau p}^T\\) ‚Äî .get_appinv_atp","text":"x fitted teeMod model","code":""},{"path":"www.github.com/reference/dot-get_appinv_atp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Product of \\(A_{pp}^{-1} A_{\\tau p}^T\\) ‚Äî .get_appinv_atp","text":"\\(s\\times k\\) matrix \\(A_{pp}^{-1} A_{\\tau p}^T\\)","code":""},{"path":"www.github.com/reference/dot-get_col_from_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Extract specified type from new data set ‚Äî .get_col_from_new_data","title":"(Internal) Extract specified type from new data set ‚Äî .get_col_from_new_data","text":"(Internal) Extract specified type new data set","code":""},{"path":"www.github.com/reference/dot-get_col_from_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Extract specified type from new data set ‚Äî .get_col_from_new_data","text":"","code":".get_col_from_new_data(   specification,   newdata,   type,   by = NULL,   implicitBlock = FALSE,   ... )"},{"path":"www.github.com/reference/dot-get_col_from_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Extract specified type from new data set ‚Äî .get_col_from_new_data","text":"specification StudySpecification newdata data.frame, may may one used create specification. must units assignment variable(s) (though = argument can used name differ), appropriately merge specification blocks, treatment forcings. type One \"t\", \"f\", \"b\". optional; named vector list connecting names unit assignment/unitid/cluster variables specification unit assignment/unitid/cluster variables data. Names represent variables StudySpecification; values represent variables data. needed variable names differ. implicitBlock StudySpecification include block, TRUE return constant 1 blocks type requests . ... Additional arguments merge().","code":""},{"path":"www.github.com/reference/dot-get_col_from_new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Extract specified type from new data set ‚Äî .get_col_from_new_data","text":"column(s) belonging requested type ","code":""},{"path":"www.github.com/reference/dot-get_data_from_model.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Locate data in call stack ‚Äî .get_data_from_model","title":"(Internal) Locate data in call stack ‚Äî .get_data_from_model","text":"Whenever function model (ate()/ett()/cov_adj()/assigned()) called without explicit data= argument, attempt extract data model .","code":""},{"path":"www.github.com/reference/dot-get_data_from_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Locate data in call stack ‚Äî .get_data_from_model","text":"","code":".get_data_from_model(which_fn, form = NULL, by = NULL)"},{"path":"www.github.com/reference/dot-get_data_from_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Locate data in call stack ‚Äî .get_data_from_model","text":"which_fn Identify calling function, \"weights\" \"assigned\", helps separate logic two functions. form Formula apply model.frame(). See details translation unit assignment/unitid/cluster ID names, passed weights.","code":""},{"path":"www.github.com/reference/dot-get_data_from_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Locate data in call stack ‚Äî .get_data_from_model","text":"data.frame","code":""},{"path":"www.github.com/reference/dot-get_data_from_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Locate data in call stack ‚Äî .get_data_from_model","text":"form specifies columns data needed. current use cases (ate()/ett() assigned()), unit assignment variables, e.g. form = ~ uoavar, enable merging UOA level variables model data. However, can easily expanded variables needed.","code":""},{"path":"www.github.com/reference/dot-get_phi_tilde.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Calculate grave{phi} ‚Äî .get_phi_tilde","title":"(Internal) Calculate grave{phi} ‚Äî .get_phi_tilde","text":"(Internal) Calculate grave{phi}","code":""},{"path":"www.github.com/reference/dot-get_phi_tilde.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Calculate grave{phi} ‚Äî .get_phi_tilde","text":"","code":".get_phi_tilde(x, ...)"},{"path":"www.github.com/reference/dot-get_phi_tilde.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Calculate grave{phi} ‚Äî .get_phi_tilde","text":"x fitted teeMod model","code":""},{"path":"www.github.com/reference/dot-get_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Locate a StudySpecification in the call stack ‚Äî .get_spec","title":"(Internal) Locate a StudySpecification in the call stack ‚Äî .get_spec","text":"assigned()/ate()/ett()/cov_adj() need StudySpecification operate. called model without specification= argument, function sees can find StudySpecification another functions.","code":""},{"path":"www.github.com/reference/dot-get_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Locate a StudySpecification in the call stack ‚Äî .get_spec","text":"","code":".get_spec(NULL_on_error = FALSE)"},{"path":"www.github.com/reference/dot-get_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Locate a StudySpecification in the call stack ‚Äî .get_spec","text":"NULL_on_error TRUE, returns NULL StudySpecification object found rather throwing error.","code":""},{"path":"www.github.com/reference/dot-get_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Locate a StudySpecification in the call stack ‚Äî .get_spec","text":"StudySpecification, NULL NULL_on_error TRUE StudySpecification found.","code":""},{"path":"www.github.com/reference/dot-get_spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Locate a StudySpecification in the call stack ‚Äî .get_spec","text":"Note never look inside assigned() (gets complicated formulas), weights cov_adj(). E.g. lm(y ~ assigned(), weights = ate(spec), offest = cov_adj(mod1)) lm(y ~ assigned(), weights = ate(), offest = cov_adj(mod1, specification = spec)) work, lm(y ~ assigned(spec), weights = ate(), offest = cov_adj(mod1)) fail.","code":""},{"path":"www.github.com/reference/dot-join_spec_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Expand unit of assignment level weights to the level of the data ‚Äî .join_spec_weights","title":"(Internal) Expand unit of assignment level weights to the level of the data ‚Äî .join_spec_weights","text":"Helper function called creation weights via ate() ett()","code":""},{"path":"www.github.com/reference/dot-join_spec_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Expand unit of assignment level weights to the level of the data ‚Äî .join_spec_weights","text":"","code":".join_spec_weights(weights, specification, target, data, dichotomy)"},{"path":"www.github.com/reference/dot-join_spec_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Expand unit of assignment level weights to the level of the data ‚Äî .join_spec_weights","text":"weights vector weights sorted according StudySpecification specification StudySpecification target One \"ate\" \"ett\" data New data dichotomy formula used specify dichotomy non-binary treatment variable. output WeightedStudySpecification object store dichotomy slot, unless NULL, case translated empty formula.","code":""},{"path":"www.github.com/reference/dot-join_spec_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Expand unit of assignment level weights to the level of the data ‚Äî .join_spec_weights","text":"WeightedStudySpecification","code":""},{"path":"www.github.com/reference/dot-make_PreSandwichLayer.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Get covariance adjustments and their gradient with respect to covariance adjustment model coefficients ‚Äî .make_PreSandwichLayer","title":"(Internal) Get covariance adjustments and their gradient with respect to covariance adjustment model coefficients ‚Äî .make_PreSandwichLayer","text":".make_PreSandwichLayer() takes fitted covariance adjustment model passed model argument generates adjustments outcomes observations newdata argument. also evaluates gradient adjustments taken respect coefficients coefficient estimates.","code":""},{"path":"www.github.com/reference/dot-make_PreSandwichLayer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Get covariance adjustments and their gradient with respect to covariance adjustment model coefficients ‚Äî .make_PreSandwichLayer","text":"","code":".make_PreSandwichLayer(model, newdata = NULL, ...)"},{"path":"www.github.com/reference/dot-make_PreSandwichLayer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Get covariance adjustments and their gradient with respect to covariance adjustment model coefficients ‚Äî .make_PreSandwichLayer","text":"model fitted model use generating covariance adjustment values newdata dataframe columns called model ... additional arguments pass model.frame model.matrix. include na.action, xlev, contrasts.arg: former fixed na.pass, latter two provided elements model argument.","code":""},{"path":"www.github.com/reference/dot-make_PreSandwichLayer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Get covariance adjustments and their gradient with respect to covariance adjustment model coefficients ‚Äî .make_PreSandwichLayer","text":"PreSandwichLayer object","code":""},{"path":"www.github.com/reference/dot-make_uoa_cluster_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a dataframe that links units of assignment with clusters ‚Äî .make_uoa_cluster_df","title":"Make a dataframe that links units of assignment with clusters ‚Äî .make_uoa_cluster_df","text":"Make dataframe links units assignment clusters","code":""},{"path":"www.github.com/reference/dot-make_uoa_cluster_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a dataframe that links units of assignment with clusters ‚Äî .make_uoa_cluster_df","text":"","code":".make_uoa_cluster_df(spec, cluster = NULL)"},{"path":"www.github.com/reference/dot-make_uoa_cluster_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a dataframe that links units of assignment with clusters ‚Äî .make_uoa_cluster_df","text":"spec StudySpecification object. cluster character vector column names use clusters. Columns must exist dataframe used create StudySpecification object. Defaults NULL, case column names specified unitid(), unit_of_assignment(), cluster() function StudySpecification formula used.","code":""},{"path":"www.github.com/reference/dot-make_uoa_cluster_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a dataframe that links units of assignment with clusters ‚Äî .make_uoa_cluster_df","text":"dataframe number rows coincides number distinct unit assignment cluster combinations (depending whether cluster less granular level assignment level) columns correspond unit assignment columns \"cluster\" column","code":""},{"path":"www.github.com/reference/dot-make_uoa_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Make ID's to pass to the cluster argument of vcov_tee() ‚Äî .make_uoa_ids","title":"Make ID's to pass to the cluster argument of vcov_tee() ‚Äî .make_uoa_ids","text":".make_uoa_ids() returns factor vector cluster ID's align order units observations' contributions estfun.teeMod(). ensure vcov_tee() calls sandwich::meatCL(), cluster argument aggregates correct contributions estimating equations within clusters.","code":""},{"path":"www.github.com/reference/dot-make_uoa_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make ID's to pass to the cluster argument of vcov_tee() ‚Äî .make_uoa_ids","text":"","code":".make_uoa_ids(x, vcov_type, cluster = NULL, ...)"},{"path":"www.github.com/reference/dot-make_uoa_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make ID's to pass to the cluster argument of vcov_tee() ‚Äî .make_uoa_ids","text":"x fitted teeMod object vcov_type string indicating model-based design-based covariance estimation. Currently, \"MB\", \"CR\", \"HC\" strings registered indicating model-based estimation. cluster character vector list; optional. Specifies column names appear covariance adjustment direct adjustment model dataframes. Defaults NULL, case unit assignment columns indicated StudySpecification used clustering. multiple clustering columns, concatenated together row separated \"_\". ... arguments passed methods","code":""},{"path":"www.github.com/reference/dot-make_uoa_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make ID's to pass to the cluster argument of vcov_tee() ‚Äî .make_uoa_ids","text":"vector length equal number unique units observation used fit two models. See Details estfun.teeMod() method determining uniqueness.","code":""},{"path":"www.github.com/reference/dot-merge_block_id_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Merge multiple block IDs ‚Äî .merge_block_id_cols","title":"(Internal) Merge multiple block IDs ‚Äî .merge_block_id_cols","text":"(Internal) Merge multiple block IDs","code":""},{"path":"www.github.com/reference/dot-merge_block_id_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Merge multiple block IDs ‚Äî .merge_block_id_cols","text":"","code":".merge_block_id_cols(df, ids)"},{"path":"www.github.com/reference/dot-merge_block_id_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Merge multiple block IDs ‚Äî .merge_block_id_cols","text":"df data frame ids vector block IDs, column names df","code":""},{"path":"www.github.com/reference/dot-merge_block_id_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Merge multiple block IDs ‚Äî .merge_block_id_cols","text":"data frame column contains unique block number IDs","code":""},{"path":"www.github.com/reference/dot-merge_block_id_cols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Merge multiple block IDs ‚Äî .merge_block_id_cols","text":"merge multiple block ID columns value combinations store new block ID column ids[1]","code":""},{"path":"www.github.com/reference/dot-merge_preserve_order.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Merge data.frames ensuring order of first data.frame is maintained ‚Äî .merge_preserve_order","title":"(Internal) Merge data.frames ensuring order of first data.frame is maintained ‚Äî .merge_preserve_order","text":"(Internal) Merge data.frames ensuring order first data.frame maintained","code":""},{"path":"www.github.com/reference/dot-merge_preserve_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Merge data.frames ensuring order of first data.frame is maintained ‚Äî .merge_preserve_order","text":"","code":".merge_preserve_order(x, ...)"},{"path":"www.github.com/reference/dot-merge_preserve_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Merge data.frames ensuring order of first data.frame is maintained ‚Äî .merge_preserve_order","text":"x data.frame whose ordering maintained ... Additional arguments merge(), particularly second data.frame = argument.","code":""},{"path":"www.github.com/reference/dot-merge_preserve_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Merge data.frames ensuring order of first data.frame is maintained ‚Äî .merge_preserve_order","text":"Merged data.frame ordering x.","code":""},{"path":"www.github.com/reference/dot-new_StudySpecification.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Create a new StudySpecification object. ‚Äî .new_StudySpecification","title":"(Internal) Create a new StudySpecification object. ‚Äî .new_StudySpecification","text":"Helper function create new StudySpecification. Called internally rct_spec(), rd_spec() obs_spec().","code":""},{"path":"www.github.com/reference/dot-new_StudySpecification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Create a new StudySpecification object. ‚Äî .new_StudySpecification","text":"","code":".new_StudySpecification(   form,   data,   type,   subset = NULL,   call = NULL,   na.fail = TRUE )"},{"path":"www.github.com/reference/dot-new_StudySpecification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Create a new StudySpecification object. ‚Äî .new_StudySpecification","text":"form Formula create StudySpecification, see help rcr_spec(), rd_spec() obs_spec() details. data data set type One \"RCT\", \"RD\", \"Obs\" subset subset information call call generating StudySpecification. na.fail error NA's (TRUE) remove (FALSE)?","code":""},{"path":"www.github.com/reference/dot-new_StudySpecification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Create a new StudySpecification object. ‚Äî .new_StudySpecification","text":"new StudySpecification object","code":""},{"path":"www.github.com/reference/dot-order_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Order observations used to fit a teeMod model and a prior covariance adjustment model ‚Äî .order_samples","title":"(Internal) Order observations used to fit a teeMod model and a prior covariance adjustment model ‚Äî .order_samples","text":"(Internal) Order observations used fit teeMod model prior covariance adjustment model","code":""},{"path":"www.github.com/reference/dot-order_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Order observations used to fit a teeMod model and a prior covariance adjustment model ‚Äî .order_samples","text":"","code":".order_samples(x, by = NULL, ...)"},{"path":"www.github.com/reference/dot-order_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Order observations used to fit a teeMod model and a prior covariance adjustment model ‚Äî .order_samples","text":"x fitted teeMod model character vector columns get ID's ordering . Default NULL, case unit assignment ID's used ordering. ... arguments passed methods","code":""},{"path":"www.github.com/reference/dot-order_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Order observations used to fit a teeMod model and a prior covariance adjustment model ‚Äî .order_samples","text":"list four named vectors. Q_not_C element holds ordering units observation direct adjustment sample covariance adjustment samples; Q_in_C C_in_Q, ordering units ; C_not_Q, ordering units covariance adjustment sample . Q_in_C C_in_Q differ names Q_in_C vector correspond row indices original matrix estimating equations direct adjustment model, names C_in_Q correspond row indices matrix estimating equations covariance adjustment model. Similarly, names Q_not_C C_not_Q correspond row indices direct adjustment covariance adjustment samples, respectively. Ultimately, order .make_uoa_ids() estfun.teeMod() given concatenating vectors stored Q_not_C, Q_in_C, C_not_q.","code":""},{"path":"www.github.com/reference/dot-order_samples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Order observations used to fit a teeMod model and a prior covariance adjustment model ‚Äî .order_samples","text":".order_samples() underpins ordering .make_uoa_ids() estfun.teeMod(). function orders outputs functions, also informs original matrices contributions estimating equations need indexed align units observations' contributions sets estimating equations. argument provided cov_adj(), used construct order .order_samples().","code":""},{"path":"www.github.com/reference/dot-prepare_spec_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .prepare_spec_matrix","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .prepare_spec_matrix","text":"(Internal) Helper function design-based meat matrix calculation","code":""},{"path":"www.github.com/reference/dot-prepare_spec_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .prepare_spec_matrix","text":"","code":".prepare_spec_matrix(x, ...)"},{"path":"www.github.com/reference/dot-prepare_spec_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .prepare_spec_matrix","text":"x fitted teeMod model","code":""},{"path":"www.github.com/reference/dot-prepare_spec_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Helper function for design-based meat matrix calculation ‚Äî .prepare_spec_matrix","text":"\\(m \\items (p+2)\\) matrix cluster sums design-based estimating equations scaled \\(\\sqrt{m_{b0}m_{b1}}/m_{b}\\). \\(m\\) number clusters, \\(p\\) number covariates used prior covariance adjustment (excluding intercept)","code":""},{"path":"www.github.com/reference/dot-remove_forcing.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Removes the forcing column entirely from a StudySpecification ‚Äî .remove_forcing","title":"(Internal) Removes the forcing column entirely from a StudySpecification ‚Äî .remove_forcing","text":"preparation converting RD StudySpecification another StudySpecification, strip forcing variable entirely. removed data (@structure @column_index), well formula stored @call.","code":""},{"path":"www.github.com/reference/dot-remove_forcing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Removes the forcing column entirely from a StudySpecification ‚Äî .remove_forcing","text":"","code":".remove_forcing(spec)"},{"path":"www.github.com/reference/dot-remove_forcing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Removes the forcing column entirely from a StudySpecification ‚Äî .remove_forcing","text":"spec StudySpecification","code":""},{"path":"www.github.com/reference/dot-remove_forcing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Removes the forcing column entirely from a StudySpecification ‚Äî .remove_forcing","text":"StudySpecification without forcing variable","code":""},{"path":"www.github.com/reference/dot-remove_forcing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Removes the forcing column entirely from a StudySpecification ‚Äî .remove_forcing","text":"Note output StudySpecification fail validity check (validObject()) due RD StudySpecification requiring forcing variable, change @type immediately.","code":""},{"path":"www.github.com/reference/dot-rename_model_frame_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Rename columns to strip function calls ‚Äî .rename_model_frame_columns","title":"(Internal) Rename columns to strip function calls ‚Äî .rename_model_frame_columns","text":"calling model.frame() formula input .new_StudySpecification(), names columns include function names, e.g. \"block(blockvar)\". function strips .","code":""},{"path":"www.github.com/reference/dot-rename_model_frame_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Rename columns to strip function calls ‚Äî .rename_model_frame_columns","text":"","code":".rename_model_frame_columns(modframe)"},{"path":"www.github.com/reference/dot-rename_model_frame_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Rename columns to strip function calls ‚Äî .rename_model_frame_columns","text":"modframe data.frame.","code":""},{"path":"www.github.com/reference/dot-rename_model_frame_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Rename columns to strip function calls ‚Äî .rename_model_frame_columns","text":"data.frame function calls removed","code":""},{"path":"www.github.com/reference/dot-sanitize_C_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Return ID's used to order observations in the covariance adjustment sample ‚Äî .sanitize_C_ids","title":"(Internal) Return ID's used to order observations in the covariance adjustment sample ‚Äî .sanitize_C_ids","text":"(Internal) Return ID's used order observations covariance adjustment sample","code":""},{"path":"www.github.com/reference/dot-sanitize_C_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Return ID's used to order observations in the covariance adjustment sample ‚Äî .sanitize_C_ids","text":"","code":".sanitize_C_ids(x, id_col = NULL, sorted = FALSE, ...)"},{"path":"www.github.com/reference/dot-sanitize_C_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Return ID's used to order observations in the covariance adjustment sample ‚Äî .sanitize_C_ids","text":"x SandwichLayer object id_col character vector list; optional. Specifies column names appear botn covariance adjustment direct adjustmet samples. Defaults NULL, case unit assignment columns SandwichLayer's StudySpecification slot used generate ID's. ... arguments passed methods","code":""},{"path":"www.github.com/reference/dot-sanitize_C_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Return ID's used to order observations in the covariance adjustment sample ‚Äî .sanitize_C_ids","text":"vector length equal number units observation used fit covariance adjustment model","code":""},{"path":"www.github.com/reference/dot-sanitize_Q_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Return ID's used to order observations in the direct adjustment sample ‚Äî .sanitize_Q_ids","title":"(Internal) Return ID's used to order observations in the direct adjustment sample ‚Äî .sanitize_Q_ids","text":"(Internal) Return ID's used order observations direct adjustment sample","code":""},{"path":"www.github.com/reference/dot-sanitize_Q_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Return ID's used to order observations in the direct adjustment sample ‚Äî .sanitize_Q_ids","text":"","code":".sanitize_Q_ids(x, id_col = NULL, ...)"},{"path":"www.github.com/reference/dot-sanitize_Q_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Return ID's used to order observations in the direct adjustment sample ‚Äî .sanitize_Q_ids","text":"x fitted teeMod model id_col character vector; optional. Specifies column(s) whose ID's returned. column must exist data created StudySpecification object. Default NULL, case unit assignment columns indicated specification used generate ID's. ... arguments passed methods","code":""},{"path":"www.github.com/reference/dot-sanitize_Q_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Return ID's used to order observations in the direct adjustment sample ‚Äî .sanitize_Q_ids","text":"vector length equal number units observation direct adjustment sample","code":""},{"path":"www.github.com/reference/dot-show_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) show helper for PreSandwichLayer/SandwichLayer ‚Äî .show_layer","title":"(Internal) show helper for PreSandwichLayer/SandwichLayer ‚Äî .show_layer","text":"(Internal) show helper PreSandwichLayer/SandwichLayer","code":""},{"path":"www.github.com/reference/dot-show_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) show helper for PreSandwichLayer/SandwichLayer ‚Äî .show_layer","text":"","code":".show_layer(object)"},{"path":"www.github.com/reference/dot-show_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) show helper for PreSandwichLayer/SandwichLayer ‚Äî .show_layer","text":"object PreSandwichLayer SandwichLayer","code":""},{"path":"www.github.com/reference/dot-show_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) show helper for PreSandwichLayer/SandwichLayer ‚Äî .show_layer","text":"object, invisibly","code":""},{"path":"www.github.com/reference/dot-specification_accessors_newdata_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Checks newdata/by argument for specification accessors ‚Äî .specification_accessors_newdata_validate","title":"(Internal) Checks newdata/by argument for specification accessors ‚Äî .specification_accessors_newdata_validate","text":"(Internal) Checks newdata/argument specification accessors","code":""},{"path":"www.github.com/reference/dot-specification_accessors_newdata_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Checks newdata/by argument for specification accessors ‚Äî .specification_accessors_newdata_validate","text":"","code":".specification_accessors_newdata_validate(newdata, by)"},{"path":"www.github.com/reference/dot-specification_accessors_newdata_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Checks newdata/by argument for specification accessors ‚Äî .specification_accessors_newdata_validate","text":"newdata newdata argument e.g. treatment(), blocks(), etc e.g. treatment(), blocks(), etc. See .check_by()","code":""},{"path":"www.github.com/reference/dot-specification_accessors_newdata_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Checks newdata/by argument for specification accessors ‚Äî .specification_accessors_newdata_validate","text":"Invisibly TRUE. Warns errors appropriate.","code":""},{"path":"www.github.com/reference/dot-update_by.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Use by to update StudySpecification with new variable names ‚Äî .update_by","title":"(Internal) Use by to update StudySpecification with new variable names ‚Äî .update_by","text":"Helper function used update variable names StudySpecification user passes = argument align variable names data sets.","code":""},{"path":"www.github.com/reference/dot-update_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Use by to update StudySpecification with new variable names ‚Äî .update_by","text":"","code":".update_by(specification, data, by)"},{"path":"www.github.com/reference/dot-update_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Use by to update StudySpecification with new variable names ‚Äî .update_by","text":"specification StudySpecification data Data set named vector list connecting names unit assignment/unitid/cluster variables specification unit assignment/unitid/cluster variables data. Names represent variables StudySpecification; values represent variables data.","code":""},{"path":"www.github.com/reference/dot-update_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Use by to update StudySpecification with new variable names ‚Äî .update_by","text":"StudySpecification updated variable names","code":""},{"path":"www.github.com/reference/dot-update_ca_model_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Add columns for merging covariance adjustment and direct adjustment samples to model formula ‚Äî .update_ca_model_formula","title":"(Internal) Add columns for merging covariance adjustment and direct adjustment samples to model formula ‚Äî .update_ca_model_formula","text":"(Internal) Add columns merging covariance adjustment direct adjustment samples model formula","code":""},{"path":"www.github.com/reference/dot-update_ca_model_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Add columns for merging covariance adjustment and direct adjustment samples to model formula ‚Äî .update_ca_model_formula","text":"","code":".update_ca_model_formula(model, by = NULL, specification = NULL)"},{"path":"www.github.com/reference/dot-update_ca_model_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Add columns for merging covariance adjustment and direct adjustment samples to model formula ‚Äî .update_ca_model_formula","text":"model model inherits glm, lm, robustbase::lmrob object optional; string named vector unique identifier columns data used create specification data used fit covariance adjustment model. Default NULL, case unit assignment columns used identification (even uniquely identify units observation). named vector provided, names represent variables data used create specification, values represent variables covariance adjustment data. specification StudySpecification object. Default NULL, case StudySpecification object sought higher call stack.","code":""},{"path":"www.github.com/reference/dot-update_ca_model_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Add columns for merging covariance adjustment and direct adjustment samples to model formula ‚Äî .update_ca_model_formula","text":"formula","code":""},{"path":"www.github.com/reference/dot-update_ca_model_formula.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Add columns for merging covariance adjustment and direct adjustment samples to model formula ‚Äî .update_ca_model_formula","text":"function typically used prior .get_data_from_model() incorporates information provided argument ensure necessary columns merging two samples included model.frame() calls.","code":""},{"path":"www.github.com/reference/dot-update_call_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Updates spec@call's formula with the currently defined variable names. ‚Äî .update_call_formula","title":"(Internal) Updates spec@call's formula with the currently defined variable names. ‚Äî .update_call_formula","text":"Helper function update call appropriate variable names modified. Called within StudySpecification replacers.","code":""},{"path":"www.github.com/reference/dot-update_call_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Updates spec@call's formula with the currently defined variable names. ‚Äî .update_call_formula","text":"","code":".update_call_formula(specification)"},{"path":"www.github.com/reference/dot-update_call_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Updates spec@call's formula with the currently defined variable names. ‚Äî .update_call_formula","text":"specification StudySpecification","code":""},{"path":"www.github.com/reference/dot-update_call_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Updates spec@call's formula with the currently defined variable names. ‚Äî .update_call_formula","text":"updated formula","code":""},{"path":"www.github.com/reference/dot-update_call_formula.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Updates spec@call's formula with the currently defined variable names. ‚Äî .update_call_formula","text":"return stuck specification via spec@call$formula <- .update_call_formula(spec)","code":""},{"path":"www.github.com/reference/dot-update_form_to_unit_of_assignment.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Rename cluster/unitid/uoa in a formula to unit_of_assignment for internal consistency ‚Äî .update_form_to_unit_of_assignment","title":"(Internal) Rename cluster/unitid/uoa in a formula to unit_of_assignment for internal consistency ‚Äî .update_form_to_unit_of_assignment","text":"Internally, always refer uoa/cluster/unitid \"unit_of_assignment\"","code":""},{"path":"www.github.com/reference/dot-update_form_to_unit_of_assignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Rename cluster/unitid/uoa in a formula to unit_of_assignment for internal consistency ‚Äî .update_form_to_unit_of_assignment","text":"","code":".update_form_to_unit_of_assignment(form)"},{"path":"www.github.com/reference/dot-update_form_to_unit_of_assignment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Rename cluster/unitid/uoa in a formula to unit_of_assignment for internal consistency ‚Äî .update_form_to_unit_of_assignment","text":"form formula passed .new_StudySpecification()","code":""},{"path":"www.github.com/reference/dot-update_form_to_unit_of_assignment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Rename cluster/unitid/uoa in a formula to unit_of_assignment for internal consistency ‚Äî .update_form_to_unit_of_assignment","text":"formula \"cluster\"/\"unitid\"/\"uoa\" replace \"unit_of_assignment\"","code":""},{"path":"www.github.com/reference/dot-update_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Replaces type columns in specification with new ‚Äî .update_structure","title":"(Internal) Replaces type columns in specification with new ‚Äî .update_structure","text":"Assumes .convert_to_data.frame() already called new","code":""},{"path":"www.github.com/reference/dot-update_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Replaces type columns in specification with new ‚Äî .update_structure","text":"","code":".update_structure(specification, new, type)"},{"path":"www.github.com/reference/dot-update_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Replaces type columns in specification with new ‚Äî .update_structure","text":"specification StudySpecification new named data.frame replacement, output .convert_to_data.frame(). type One \"t\", \"f\", \"u\" \"b\\\".","code":""},{"path":"www.github.com/reference/dot-update_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Replaces type columns in specification with new ‚Äî .update_structure","text":"updated StudySpecification","code":""},{"path":"www.github.com/reference/dot-validate_dichotomy.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Validate a dichotomy against other dichotomies found in the call stack ‚Äî .validate_dichotomy","title":"(Internal) Validate a dichotomy against other dichotomies found in the call stack ‚Äî .validate_dichotomy","text":"(Internal) Validate dichotomy dichotomies found call stack","code":""},{"path":"www.github.com/reference/dot-validate_dichotomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Validate a dichotomy against other dichotomies found in the call stack ‚Äî .validate_dichotomy","text":"","code":".validate_dichotomy(possible_dichotomy)"},{"path":"www.github.com/reference/dot-validate_dichotomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Validate a dichotomy against other dichotomies found in the call stack ‚Äî .validate_dichotomy","text":"possible_dichotomy list formula, former coming .find_dichotomies()","code":""},{"path":"www.github.com/reference/dot-validate_dichotomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Validate a dichotomy against other dichotomies found in the call stack ‚Äî .validate_dichotomy","text":"formula dichotomy NULL","code":""},{"path":"www.github.com/reference/dot-weights_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Worker function for weight calculation ‚Äî .weights_calc","title":"(Internal) Worker function for weight calculation ‚Äî .weights_calc","text":"Called ate() ett().","code":""},{"path":"www.github.com/reference/dot-weights_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Worker function for weight calculation ‚Äî .weights_calc","text":"","code":".weights_calc(specification, target, dichotomy, by, data)"},{"path":"www.github.com/reference/dot-weights_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Worker function for weight calculation ‚Äî .weights_calc","text":"specification StudySpecification object created one rct_spec(), rd_spec(), obs_spec(). target One \"ate\" \"ett\"; ate() ett() chooses automatically. dichotomy optional; formula defining dichotomy treatment variable already 0/1. See details help ate() ett() e.g. details. optional; named vector list connecting names unit assignment/ variables specification unit assignment/cluster variables data. Names represent variables StudySpecification; values represent variables data. needed variable names differ. data optionally data analysis performed . May excluded functions included weights argument model.","code":""},{"path":"www.github.com/reference/dot-weights_calc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Worker function for weight calculation ‚Äî .weights_calc","text":"WeightedStudySpecification object","code":""},{"path":"www.github.com/reference/estfun.teeMod.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract empirical estimating equations from a teeMod model fit ‚Äî estfun.teeMod","title":"Extract empirical estimating equations from a teeMod model fit ‚Äî estfun.teeMod","text":"S3method sandwich::estfun producing matrix contributions direct adjustment estimating equations.","code":""},{"path":"www.github.com/reference/estfun.teeMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract empirical estimating equations from a teeMod model fit ‚Äî estfun.teeMod","text":"","code":"# S3 method for class 'teeMod' estfun(x, ...)"},{"path":"www.github.com/reference/estfun.teeMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract empirical estimating equations from a teeMod model fit ‚Äî estfun.teeMod","text":"x fitted teeMod model ... arguments passed methods","code":""},{"path":"www.github.com/reference/estfun.teeMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract empirical estimating equations from a teeMod model fit ‚Äî estfun.teeMod","text":"\\(n\\times 2\\) matrix empirical estimating equations direct adjustment model fit. See Details definition \\(n\\).","code":""},{"path":"www.github.com/reference/estfun.teeMod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract empirical estimating equations from a teeMod model fit ‚Äî estfun.teeMod","text":"prior covariance adjustment model passed offset argument teeMod model using cov_adj(), estfun.teeMod() incorporates contributions estimating equations covariance adjustment model. covariance adjustment sample may fully overlap direct adjustment sample, case estfun.teeMod() returns matrix number rows number unique units observation used fit two models. Uniqueness determined matching units assignment used fit covariance adjustment model units assignment teeMod model's StudySpecification slot; units observation within units assignment match additional units add row count. Theby argument cov_adj() can provide column pair columns (named vector name specifies column direct adjustment sample value column covariance adjustment sample) uniquely specifies units observation sample. information can used align unit observation's contributions two sets estimating equations. argument provided units observation uniquely specified, contributions aligned unit assignment level. standard errors clustered finer , provide result unit observation's contributions aligned exactly.","code":""},{"path":"www.github.com/reference/glmrob_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract empirical estimating equations from a glmbrob model fit ‚Äî estfun.glmrob","title":"Extract empirical estimating equations from a glmbrob model fit ‚Äî estfun.glmrob","text":"Extract empirical estimating equations glmbrob model fit Extract bread matrix lmrob() fit","code":""},{"path":"www.github.com/reference/glmrob_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract empirical estimating equations from a glmbrob model fit ‚Äî estfun.glmrob","text":"","code":"# S3 method for class 'glmrob' estfun(x, ...)  # S3 method for class 'glmrob' bread(x, ...)"},{"path":"www.github.com/reference/glmrob_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract empirical estimating equations from a glmbrob model fit ‚Äî estfun.glmrob","text":"x fitted lmrob object ... arguments passed methods","code":""},{"path":"www.github.com/reference/glmrob_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract empirical estimating equations from a glmbrob model fit ‚Äî estfun.glmrob","text":"matrix, estimating functions evaluated data points fitted parameters matrix, inverse Hessian loss evaluated fitted parameters","code":""},{"path":"www.github.com/reference/has_binary_treatment.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether treatment stored in a StudySpecification object is binary ‚Äî has_binary_treatment","title":"Check whether treatment stored in a StudySpecification object is binary ‚Äî has_binary_treatment","text":"Check whether treatment stored StudySpecification object binary","code":""},{"path":"www.github.com/reference/has_binary_treatment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether treatment stored in a StudySpecification object is binary ‚Äî has_binary_treatment","text":"","code":"has_binary_treatment(spec)"},{"path":"www.github.com/reference/has_binary_treatment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether treatment stored in a StudySpecification object is binary ‚Äî has_binary_treatment","text":"spec StudySpecification object","code":""},{"path":"www.github.com/reference/has_binary_treatment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether treatment stored in a StudySpecification object is binary ‚Äî has_binary_treatment","text":"logical vector length 1","code":""},{"path":"www.github.com/reference/identical_StudySpecifications.html","id":null,"dir":"Reference","previous_headings":"","what":"Test equality of two StudySpecification objects ‚Äî identical_StudySpecifications","title":"Test equality of two StudySpecification objects ‚Äî identical_StudySpecifications","text":"Check whether two StudySpecification objects identical.","code":""},{"path":"www.github.com/reference/identical_StudySpecifications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test equality of two StudySpecification objects ‚Äî identical_StudySpecifications","text":"","code":"identical_StudySpecifications(x, y)"},{"path":"www.github.com/reference/identical_StudySpecifications.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test equality of two StudySpecification objects ‚Äî identical_StudySpecifications","text":"x StudySpecification object. y StudySpecification object.","code":""},{"path":"www.github.com/reference/identical_StudySpecifications.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test equality of two StudySpecification objects ‚Äî identical_StudySpecifications","text":"Logical, x y identical?","code":""},{"path":"www.github.com/reference/identify_small_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify fine strata ‚Äî identify_small_blocks","title":"Identify fine strata ‚Äî identify_small_blocks","text":"Identify blocks StudySpecification exactly one treated one control unit assignment.","code":""},{"path":"www.github.com/reference/identify_small_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify fine strata ‚Äî identify_small_blocks","text":"","code":"identify_small_blocks(spec)"},{"path":"www.github.com/reference/identify_small_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify fine strata ‚Äî identify_small_blocks","text":"spec StudySpecification object.","code":""},{"path":"www.github.com/reference/identify_small_blocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify fine strata ‚Äî identify_small_blocks","text":"Logical vector length given number blocks StudySpecification","code":""},{"path":"www.github.com/reference/lmitt.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Model for Intention To Treat ‚Äî lmitt","title":"Linear Model for Intention To Treat ‚Äî lmitt","text":"Generates linear model object estimate treatment effect, proper estimation variances accounting study specification.","code":""},{"path":"www.github.com/reference/lmitt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Model for Intention To Treat ‚Äî lmitt","text":"","code":"lmitt(obj, specification, data, ...)  # S3 method for class 'formula' lmitt(   obj,   specification,   data,   absorb = FALSE,   offset = NULL,   weights = NULL,   ... )  # S3 method for class 'lm' lmitt(obj, specification = NULL, ...)"},{"path":"www.github.com/reference/lmitt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Model for Intention To Treat ‚Äî lmitt","text":"obj formula lm object. See Details. specification StudySpecification used. Alternatively, formula creating specification (type passed first argument rd_spec(), rct_spec(), obs_spec()). formula includes forcing() element, RD specification created. Otherwise observational specification created. RCT specification must created manually using rct_spec(). data data.frame passed lm(). ... Additional arguments passed lm(). One argument dichotomy, can used dichotomize non-binary treatment variable specification. See Details section ett() att() help pages information specifying formula. absorb TRUE, fixed effects included blocks identified StudySpecification. Excluded FALSE. Default FALSE. estimates fixed effects suppressed returned object. offset Offset kind passed lm(). Ideally, output cov_adj(). weights weights generated? Options \"ate\" \"ett\". Alternatively, output manually run ate() ett() can used.","code":""},{"path":"www.github.com/reference/lmitt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear Model for Intention To Treat ‚Äî lmitt","text":"teeMod model.","code":""},{"path":"www.github.com/reference/lmitt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear Model for Intention To Treat ‚Äî lmitt","text":"first argument lmitt() formula specifying outcome left hand side. right hand side formula can following: 1: Estimates main treatment effect. subgroup variable: Estimates treatment effect within level subgrouping variable. continuous moderator: Estimates main treatment effect well treatment moderator interaction. moderator automatically centered. Alternatively, obj can pre-created lm object. modification made formula object. See help .lmitt() details conversion. Note although StudySpecification creation functions (e.g. rct_spec()) take optional subset= argument used creation StudySpecification, subset= argument passed lm() lmitt(). subset= argument creating StudySpecification restricts data used generate StudySpecification, direct impact future lm() lmitt() calls using StudySpecification. (can indirectly impact excluding particular units assignment receiving treatment assignment thus complete case analysis removes model.) hand, subset= argument lm() lmitt() refers subsetting data argument passed lm() lmitt(). avoid variable name collision, treatment variable defined specification \".\" appended . example, request main treatment effect (formula ~ 1) treatment variable named \"txt\", can obtain estimate returned teeMod object via $coefficients[\"txt.\"]. lmitt() produce message StudySpecification passed block information utilized model. Note error, oversight. disable message, run options(\"propertee_message_on_unused_blocks\" = FALSE).","code":""},{"path":"www.github.com/reference/lmitt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear Model for Intention To Treat ‚Äî lmitt","text":"","code":"data(simdata) spec <- rct_spec(z ~ unit_of_assignment(uoa1, uoa2), data = simdata) mod1 <- lmitt(y ~ 1, data = simdata, specification = spec, weights = \"ate\") mod2 <- lmitt(y ~ as.factor(o), data = simdata, specification = spec, weights = \"ate\") mod3 <- lmitt(y ~ 1, data = simdata,               specification = z ~ uoa(uoa1, uoa2) + forcing(force))"},{"path":"www.github.com/reference/lmrob_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate matrix of estimating equations for lmrob() fit ‚Äî estfun.lmrob","title":"Generate matrix of estimating equations for lmrob() fit ‚Äî estfun.lmrob","text":"Generate matrix estimating equations lmrob() fit Extract bread matrix lmrob() fit","code":""},{"path":"www.github.com/reference/lmrob_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate matrix of estimating equations for lmrob() fit ‚Äî estfun.lmrob","text":"","code":"# S3 method for class 'lmrob' estfun(x, ...)  # S3 method for class 'lmrob' bread(x, ...)"},{"path":"www.github.com/reference/lmrob_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate matrix of estimating equations for lmrob() fit ‚Äî estfun.lmrob","text":"x lmrob object produced using MM/SM estimator chain ... Additional arguments passed bread","code":""},{"path":"www.github.com/reference/lmrob_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate matrix of estimating equations for lmrob() fit ‚Äî estfun.lmrob","text":"\\(n\\times \\)(p+1) matrix first column corresponds scale estimate remaining \\(p\\) colums correspond coefficients \\(p\\times \\)(p+1) matrix first column corresponds scale estimate remaining \\(p\\) colums correspond coefficients","code":""},{"path":"www.github.com/reference/lmrob_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate matrix of estimating equations for lmrob() fit ‚Äî estfun.lmrob","text":"part workaround issue robustbase code affecting sandwich covariance estimation. issue question issue #6471, robustbase project R-Forge. function contributes providing sandwich estimates covariance-adjusted standard errors robust linear covariance adjustment models. part workaround issue robustbase code affecting sandwich covariance estimation. issue question issue #6471, robustbase project R-Forge. function contributes providing sandwich estimates covariance-adjusted standard errors robust linear covariance adjustment models.","code":""},{"path":"www.github.com/reference/lmrob_methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate matrix of estimating equations for lmrob() fit ‚Äî estfun.lmrob","text":"Ben B. Hansen","code":""},{"path":"www.github.com/reference/lsoSynth.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthethic Regression Discontinuity Data ‚Äî lsoSynth","title":"Synthethic Regression Discontinuity Data ‚Äî lsoSynth","text":"data example randomly simulated using synthpop package R based data originally collected Lindo, Sanders, Oreopoulos (2010).","code":""},{"path":"www.github.com/reference/lsoSynth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthethic Regression Discontinuity Data ‚Äî lsoSynth","text":"","code":"lsoSynth"},{"path":"www.github.com/reference/lsoSynth.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthethic Regression Discontinuity Data ‚Äî lsoSynth","text":"data.frame 40,403 rows 11 columns. R lhsgrade_pct nextGPA probation_year1 totcredits_year1 male loc_campus1 loc_campus2 bpl_north_america english age_at_entry","code":""},{"path":"www.github.com/reference/lsoSynth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthethic Regression Discontinuity Data ‚Äî lsoSynth","text":"See \"Regression Discontinuity StudySpecifications\" vignette propertee website details original data, link code used generate synthethic data, detailed example.","code":""},{"path":"www.github.com/reference/michigan_school_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Intervention data from a pair-matched study of schools in Michigan ‚Äî michigan_school_pairs","title":"Intervention data from a pair-matched study of schools in Michigan ‚Äî michigan_school_pairs","text":"Schools matched pairs triplets approximating subset participating schools Pane et al. (2014) Michigan","code":""},{"path":"www.github.com/reference/michigan_school_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intervention data from a pair-matched study of schools in Michigan ‚Äî michigan_school_pairs","text":"","code":"michigan_school_pairs"},{"path":"www.github.com/reference/michigan_school_pairs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Intervention data from a pair-matched study of schools in Michigan ‚Äî michigan_school_pairs","text":"data.frame 14 rows 3 columns.","code":""},{"path":"www.github.com/reference/michigan_school_pairs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Intervention data from a pair-matched study of schools in Michigan ‚Äî michigan_school_pairs","text":"Pane, John F., et al. \"Effectiveness cognitive tutor algebra scale.\" Educational Evaluation Policy Analysis 36.2 (2014): 127-144.","code":""},{"path":"www.github.com/reference/sandwich_elements_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Estimate components of the sandwich covariance matrix returned by vcov_tee() ‚Äî .get_a22_inverse","title":"(Internal) Estimate components of the sandwich covariance matrix returned by vcov_tee() ‚Äî .get_a22_inverse","text":"(Internal) Estimate components sandwich covariance matrix returned vcov_tee()","code":""},{"path":"www.github.com/reference/sandwich_elements_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Estimate components of the sandwich covariance matrix returned by vcov_tee() ‚Äî .get_a22_inverse","text":"","code":".get_a22_inverse(x, ...)  .get_a11_inverse(x)  .get_a21(x)  .get_tilde_a22_inverse(x, ...)  .get_tilde_a21(x)"},{"path":"www.github.com/reference/sandwich_elements_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Estimate components of the sandwich covariance matrix returned by vcov_tee() ‚Äî .get_a22_inverse","text":"x fitted teeMod model ... arguments passed bread method","code":""},{"path":"www.github.com/reference/sandwich_elements_calc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Estimate components of the sandwich covariance matrix returned by vcov_tee() ‚Äî .get_a22_inverse","text":".get_a22_inverse()/.get_tilde_a22_inverse(): \\(2\\times 2\\) matrix corresponding intercept treatment variable direct adjustment model .get_a11_inverse(): \\(p\\times p\\) matrix \\(p\\) dimension covariance adjustment model, including intercept .get_a21()/.get_tilde_a21(): \\(2\\times p\\) matrix number rows given intercept treatment variable direct adjustment model, number columns given dimension covariance adjustment model","code":""},{"path":"www.github.com/reference/sandwich_elements_calc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Estimate components of the sandwich covariance matrix returned by vcov_tee() ‚Äî .get_a22_inverse","text":".get_a22_inverse()/.get_tilde_a22_inverse(): \\(A_{22}^{-1}\\) \"bread\" sandwich covariance matrix returned vcov_tee() whether one fit prior covariance adjustment model . .get_a11_inverse(): \\(A_{11}^{-1}\\) \"bread\" sandwich covariance matrix covariance adjustment model. matrix contributes meat matrix direct adjustment sandwich covariance matrix. .get_a21()/.get_tilde_a21(): \\(A_{21}\\) gradient estimating equations direct adjustment model taken respect covariance adjustment model parameters. matrix crossproduct prediction gradient units observation \\(\\mathcal{Q}\\) model matrix direct adjustment model.","code":""},{"path":"www.github.com/reference/show-StudySpecification-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a StudySpecification ‚Äî show,StudySpecification-method","title":"Show a StudySpecification ‚Äî show,StudySpecification-method","text":"Display information StudySpecification object","code":""},{"path":"www.github.com/reference/show-StudySpecification-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a StudySpecification ‚Äî show,StudySpecification-method","text":"","code":"# S4 method for class 'StudySpecification' show(object)"},{"path":"www.github.com/reference/show-StudySpecification-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a StudySpecification ‚Äî show,StudySpecification-method","text":"object StudySpecification object, usually result call rct_spec(), obs_spec(), rd_spec().","code":""},{"path":"www.github.com/reference/show-StudySpecification-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a StudySpecification ‚Äî show,StudySpecification-method","text":"object, invisibly.","code":""},{"path":"www.github.com/reference/show-WeightedStudySpecification-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a WeightedStudySpecification ‚Äî show,WeightedStudySpecification-method","title":"Show a WeightedStudySpecification ‚Äî show,WeightedStudySpecification-method","text":"Prints weights WeightedStudySpecification","code":""},{"path":"www.github.com/reference/show-WeightedStudySpecification-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a WeightedStudySpecification ‚Äî show,WeightedStudySpecification-method","text":"","code":"# S4 method for class 'WeightedStudySpecification' show(object)"},{"path":"www.github.com/reference/show-WeightedStudySpecification-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a WeightedStudySpecification ‚Äî show,WeightedStudySpecification-method","text":"object WeightedStudySpecification object","code":""},{"path":"www.github.com/reference/show-WeightedStudySpecification-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a WeightedStudySpecification ‚Äî show,WeightedStudySpecification-method","text":"invisible copy object","code":""},{"path":"www.github.com/reference/show-teeMod-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a teeMod ‚Äî show,teeMod-method","title":"Show a teeMod ‚Äî show,teeMod-method","text":"Display information teeMod object","code":""},{"path":"www.github.com/reference/show-teeMod-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a teeMod ‚Äî show,teeMod-method","text":"","code":"# S4 method for class 'teeMod' show(object)"},{"path":"www.github.com/reference/show-teeMod-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a teeMod ‚Äî show,teeMod-method","text":"object teeMod object, usually result call lmitt().","code":""},{"path":"www.github.com/reference/show-teeMod-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a teeMod ‚Äî show,teeMod-method","text":"object, invisibly.","code":""},{"path":"www.github.com/reference/simdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated data ‚Äî simdata","title":"Simulated data ‚Äî simdata","text":"Simulated data use propertee package unit assignment level treatment assignment","code":""},{"path":"www.github.com/reference/simdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated data ‚Äî simdata","text":"","code":"simdata"},{"path":"www.github.com/reference/simdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated data ‚Äî simdata","text":"data.frame 100 rows 7 columns. uoa1 First level unit assignment ID uoa2 Second level unit assignment ID bid Block ID force Forcing variable z Binary treatment indicator o 4-level ordered treatment variable dose Dose treatment variable x predictor y outcome","code":""},{"path":"www.github.com/reference/specification_data_concordance.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for variable agreement within units of assignment ‚Äî specification_data_concordance","title":"Check for variable agreement within units of assignment ‚Äî specification_data_concordance","text":"Useful debugging purposes ensure concordance variables StudySpecification data.","code":""},{"path":"www.github.com/reference/specification_data_concordance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for variable agreement within units of assignment ‚Äî specification_data_concordance","text":"","code":"specification_data_concordance(   specification,   data,   by = NULL,   warn_on_nonexistence = TRUE )"},{"path":"www.github.com/reference/specification_data_concordance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for variable agreement within units of assignment ‚Äî specification_data_concordance","text":"specification StudySpecification object data new data set, presumably used create specification. optional; named vector list connecting names variables specification variables data. Names represent variables specification; values represent variables data. needed variable names differ. warn_on_nonexistence default TRUE. variable exist data, flagged? FALSE, silently move variable exist data.","code":""},{"path":"www.github.com/reference/specification_data_concordance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for variable agreement within units of assignment ‚Äî specification_data_concordance","text":"invisibly TRUE warnings produced, FALSE warnings produced.","code":""},{"path":"www.github.com/reference/specification_data_concordance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check for variable agreement within units of assignment ‚Äî specification_data_concordance","text":"Consider following scenario: StudySpecification generated dataset, \"data1\", includes block variable \"b1\". Within unique unit assignment/unitid/cluster \"data1\", must case \"b1\" constant. (Otherwise creation StudySpecification fail.) Next, model fit includes weights generated StudySpecification, dataset \"data2\". \"data2\", block variable \"b1\" also exists, due issue data cleaning, agree \"b1\" \"data1\". cause errors, either directly (via actual error messages) simply produce nonsense results. specification_data_concordance() specificationed help debug scenarios providing information whether variables data used creation specification (\"data1\" example) new dataset, data, (\"data2\" example) inconsistencies.","code":""},{"path":"www.github.com/reference/specification_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Table of elements from a StudySpecification ‚Äî specification_table","title":"Table of elements from a StudySpecification ‚Äî specification_table","text":"Produces table (1-dimensional, 2-dimensional y specified) elements StudySpecification.","code":""},{"path":"www.github.com/reference/specification_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table of elements from a StudySpecification ‚Äî specification_table","text":"","code":"specification_table(   specification,   x,   y = NULL,   sort = FALSE,   decreasing = TRUE,   use_var_names = FALSE,   ... )  stable(   specification,   x,   y = NULL,   sort = FALSE,   decreasing = TRUE,   use_var_names = FALSE,   ... )"},{"path":"www.github.com/reference/specification_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table of elements from a StudySpecification ‚Äî specification_table","text":"specification StudySpecification object x One \"treatment\", \"unit assignment\", (synonym \"uoa\"), \"block\". Abbreviations accepted. \"unit assignment\" can replaced \"unitid\" \"cluster\" StudySpecification created element. y Optionally, another string similar x. 1-dimensional table produced y left default, NULL. sort Ignored y NULL. FALSE (default), one-way table sorted according \"names\" levels. set TRUE, one-way table sorted according values. decreasing sort TRUE, choose whether sort descending (TRUE, default) ascending (FALSE). use_var_names TRUE, name dimensions table returned variable names. FALSE (default), name function (e.g. \"treatment\" \"blocks\"). Passing dnn argument ... (argument table()) overrides whatever requested . ... additional arguments table()","code":""},{"path":"www.github.com/reference/specification_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table of elements from a StudySpecification ‚Äî specification_table","text":"table requested variables.","code":""},{"path":"www.github.com/reference/specification_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table of elements from a StudySpecification ‚Äî specification_table","text":"","code":"data(simdata) spec <- obs_spec(z ~ unit_of_assignment(uoa1, uoa2) + block(bid),                   data = simdata) specification_table(spec, \"treatment\") #> treatment #> 0 1  #> 6 4  specification_table(spec, \"treatment\", \"block\", sort = TRUE, use_var_names = TRUE) #>    z #> bid 0 1 #>   1 3 1 #>   2 2 1 #>   3 1 2"},{"path":"www.github.com/reference/specificationconversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert StudySpecification between types ‚Äî as_rct_spec","title":"Convert StudySpecification between types ‚Äî as_rct_spec","text":"Convert StudySpecification observational study, randomized control trial, regression discontinuity (created obs_spec, rct_spec rd_spec respectively).","code":""},{"path":"www.github.com/reference/specificationconversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert StudySpecification between types ‚Äî as_rct_spec","text":"","code":"as_rct_spec(StudySpecification, ..., loseforcing = FALSE)  as_obs_spec(StudySpecification, ..., loseforcing = FALSE)  as_rd_spec(StudySpecification, data, ..., forcing)"},{"path":"www.github.com/reference/specificationconversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert StudySpecification between types ‚Äî as_rct_spec","text":"StudySpecification StudySpecification convert ... Ignored. loseforcing converting RD another StudySpecification type error avoid losing forcing variable. Setting loseforcing = TRUE allows conversion automatically drop forcing variable. Default FALSE. data converting RD requires adding forcing variable, requires access original data. forcing converting RD requires adding forcing variable. entered formula passed update, e.g. forcing = . ~ . + forcing(forcevar).","code":""},{"path":"www.github.com/reference/specificationconversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert StudySpecification between types ‚Äî as_rct_spec","text":"StudySpecification updated type","code":""},{"path":"www.github.com/reference/specificationconversion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert StudySpecification between types ‚Äî as_rct_spec","text":"","code":"spec <- rct_spec(z ~ unit_of_assignment(uoa1, uoa2), data = simdata) spec #> Randomized Control Trial #>  #>  Structure          Variables  #>  ---------          ---------  #>  Treatment          z          #>  Unit of Assignment uoa1, uoa2 #>  as_obs_spec(spec) #> Observational Study #>  #>  Structure          Variables  #>  ---------          ---------  #>  Treatment          z          #>  Unit of Assignment uoa1, uoa2 #>  as_rd_spec(spec, simdata, forcing = ~ . + forcing(force)) #> Regression Discontinuity StudySpecification #>  #>  Structure          Variables  #>  ---------          ---------  #>  Treatment          z          #>  Unit of Assignment uoa1, uoa2 #>  Forcing            force      #>  spec2 <- rd_spec(o ~ uoa(uoa1, uoa2) + forcing(force), data = simdata) spec2 #> Regression Discontinuity StudySpecification #>  #>  Structure          Variables  #>  ---------          ---------  #>  Treatment          o          #>  Unit of Assignment uoa1, uoa2 #>  Forcing            force      #>  # as_rct_spec(spec2) # this will produce an error as_rct_spec(spec2, loseforcing = TRUE) #> Randomized Control Trial #>  #>  Structure          Variables  #>  ---------          ---------  #>  Treatment          o          #>  Unit of Assignment uoa1, uoa2 #>"},{"path":"www.github.com/reference/studentdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Student data ‚Äî schooldata","title":"Student data ‚Äî schooldata","text":"example data sets stored two levels.","code":""},{"path":"www.github.com/reference/studentdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Student data ‚Äî schooldata","text":"","code":"schooldata  studentdata"},{"path":"www.github.com/reference/studentdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Student data ‚Äî schooldata","text":"Two data.frames, one school-level data (schooldata) including treatment assignment second student-level data (studentdata). schoolata: schoolid Unique school ID variable. treatment school intervention group? state State school . pct_disadvantage Percent student body flagged \"disadvantaged\". studentdata: id Unique student ID. schoolid Unique school ID variable. grade Student's grade, 3-5. gpa Student GPA prior year. math Standarized math score (100). object class data.frame 8713 rows 5 columns.","code":""},{"path":"www.github.com/reference/studentdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Student data ‚Äî schooldata","text":"hypothetical data, schools randomly assignment treatment status, unit analysis students. Thus two data sets, one encoding school information (including treatment status) one encoding student information (include treatment status).","code":""},{"path":"www.github.com/reference/studentdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Student data ‚Äî schooldata","text":"","code":"soec <- obs_spec(treatment ~ uoa(schoolid), data = schooldata)  # Treatment effect mod1 <- lmitt(math ~ 1, specification = soec, data = studentdata)  # Treatment effect by grade mod2 <- lmitt(math ~ as.factor(grade), specification = soec, data = studentdata)"},{"path":"www.github.com/reference/teeMod_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing teeMod objects ‚Äî summary.teeMod","title":"Summarizing teeMod objects ‚Äî summary.teeMod","text":"summary() method class teeMod","code":""},{"path":"www.github.com/reference/teeMod_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing teeMod objects ‚Äî summary.teeMod","text":"","code":"# S3 method for class 'teeMod' summary(object, vcov.type = \"CR0\", ...)  # S3 method for class 'summary.teeMod' print(   x,   digits = max(3L, getOption(\"digits\") - 3L),   signif.stars = getOption(\"show.signif.stars\"),   ... )"},{"path":"www.github.com/reference/teeMod_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing teeMod objects ‚Äî summary.teeMod","text":"object teeMod object vcov.type string indicating desired variance estimator. See vcov_tee() details accepted types. ... Additional arguments vcov_tee(), desired finite sample heteroskedasticity-robust standard error adjustment. x summary.teeMod object digits number significant digits use printing. signif.stars logical. ‚ÄòTRUE‚Äô, ‚Äòsignificance stars‚Äô printed coefficient.","code":""},{"path":"www.github.com/reference/teeMod_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing teeMod objects ‚Äî summary.teeMod","text":"object class summary.teeMod","code":""},{"path":"www.github.com/reference/teeMod_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarizing teeMod objects ‚Äî summary.teeMod","text":"teeMod object fit SandwichLayer offset, usual stats::summary.lm() output enhanced use covariance-adjusted sandwich standard errors, t-test values recalculated reflect new standard errors.","code":""},{"path":"www.github.com/reference/var_estimators.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance/Covariance for teeMod objects ‚Äî vcov_tee","title":"Variance/Covariance for teeMod objects ‚Äî vcov_tee","text":"Compute robust sandwich variance estimates optional covariance adjustment","code":""},{"path":"www.github.com/reference/var_estimators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance/Covariance for teeMod objects ‚Äî vcov_tee","text":"","code":"vcov_tee(x, type = \"CR0\", cluster = NULL, ...)  .vcov_DB0(x, ...)"},{"path":"www.github.com/reference/var_estimators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance/Covariance for teeMod objects ‚Äî vcov_tee","text":"x fitted teeMod model type string indicating desired variance estimator. See Details supported variance estimators cluster string character vector column names indicating columns cluster standard errors . prior covariance adjustment, columns must appear covariance adjustment direct adjustment samples. Default NULL, uses unit assignment columns StudySpecification slot teeMod model. ... arguments passed internal variance estimation function.","code":""},{"path":"www.github.com/reference/var_estimators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variance/Covariance for teeMod objects ‚Äî vcov_tee","text":"\\(2\\times 2\\) matrix corresponding intercept treatment variable direct adjustment model","code":""},{"path":"www.github.com/reference/var_estimators.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Variance/Covariance for teeMod objects ‚Äî vcov_tee","text":"Supported type include: \"MB0\", \"HC0\", \"CR0\" model-based HC0 standard errors \"MB1\", \"HC1\", \"CR1\" model-based standard errors HC1 corrections based direct adjustment estimate .e., \\(n/(n - 2)\\) \"MB1\" \"HC1\", \"CR1\", \\(g\\cdot(n-1)/((g-1)\\cdot(n-2))\\), \\(g\\) number clusters direct adjustment sample. \"DB0\" design-based HC0 variance estimates create type, simply define function .vcov_XXX. type = \"XXX\" now use method. method return matrix appropriate dimension, attribute type = \"XXX\". design-based variance estimates can calculated teeMod models satisfying following requirements: model uses rct_spec StudySpecification model estimates main treatment effect Inverse probability weighting incorporated","code":""},{"path":"www.github.com/reference/vcov.teeMod.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute variance-covariance matrix for fitted teeMod model ‚Äî vcov.teeMod","title":"Compute variance-covariance matrix for fitted teeMod model ‚Äî vcov.teeMod","text":"S3method stats::vcov computes standard errors teeMod models using vcov_tee().","code":""},{"path":"www.github.com/reference/vcov.teeMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute variance-covariance matrix for fitted teeMod model ‚Äî vcov.teeMod","text":"","code":"# S3 method for class 'teeMod' vcov(object, ...)"},{"path":"www.github.com/reference/vcov.teeMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute variance-covariance matrix for fitted teeMod model ‚Äî vcov.teeMod","text":"object fitted teeMod model ... additional arguments vcov_tee().","code":""},{"path":"www.github.com/reference/vcov.teeMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute variance-covariance matrix for fitted teeMod model ‚Äî vcov.teeMod","text":"\\(2\\times 2\\) matrix corresponding intercept treatment variable direct adjustment model","code":""},{"path":"www.github.com/reference/vcov.teeMod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute variance-covariance matrix for fitted teeMod model ‚Äî vcov.teeMod","text":"vcov.teeMod() wraps around vcov_tee(), additional arguments passed ... passed vcov_tee() call. See documentation vcov_tee() information necessary arguments.","code":""},{"path":"www.github.com/reference/weights-WeightedStudySpecification-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Weights from WeightedStudySpecification ‚Äî weights,WeightedStudySpecification-method","title":"Extract Weights from WeightedStudySpecification ‚Äî weights,WeightedStudySpecification-method","text":"WeightedStudySpecification object contains numeric vector additional slots, extracts numeric vector.","code":""},{"path":"www.github.com/reference/weights-WeightedStudySpecification-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Weights from WeightedStudySpecification ‚Äî weights,WeightedStudySpecification-method","text":"","code":"# S4 method for class 'WeightedStudySpecification' weights(object, ...)"},{"path":"www.github.com/reference/weights-WeightedStudySpecification-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Weights from WeightedStudySpecification ‚Äî weights,WeightedStudySpecification-method","text":"object WeightedStudySpecification object ... Ignored","code":""},{"path":"www.github.com/reference/weights-WeightedStudySpecification-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Weights from WeightedStudySpecification ‚Äî weights,WeightedStudySpecification-method","text":"numeric vector weights","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"bug-fixes-0-5-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"propertee 0.5.1","text":"Variance estimation routine fixes miscalculations case covariance adjustment rows omitted lmitt() fit due NA‚Äôs covariates treatment assignment","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"major-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"propertee 0.5.0","text":"*_design now *_spec (e.g.¬†rct_design now rct_spec) Design objects now StudySpecification objects design= argument lmitt() now specification=.","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"new-features-0-4-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"propertee 0.4.1","text":"Passing absorb = TRUE lmitt without specifying block proceeds entire sample single block.","code":""},{"path":"www.github.com/news/index.html","id":"bug-fixes-0-4-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"propertee 0.4.1","text":"Fixed bug use dichotomy moderator variables lmitt() lead errors due long formula.","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"new-features-0-4-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"propertee 0.4.0","text":"lmitt(), weights calculation functions ate() ett(), assignment vector generation function assigned() now accept dichotomy argument can used studies time-varying treatment assignment. Design object, unlike , carry information dichotomization. Instead, information stored reflecting units assigned treatment (assigned treatment) leveraged create inverse probability assignment weights assignment indicators datasets longitudinal data study units.","code":""},{"path":"www.github.com/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"propertee 0.4.0","text":"Standard error calculations longer error column used uniquely identify rows covariance adjustment effect estimation sample distinguished information Design alone","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"bug-fixes-0-3-10","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"propertee 0.3.10","text":"Linking unit assignments clusters variance estimation longer errors Design objects created tibble cov_adj() error covariance adjustment models fit robustbase::glmrob()","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"bug-fixes-0-3-9","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"propertee 0.3.9","text":"Scaling constants updated estfun.teeMod() account previously missing factor sqrt(n / n_C) applied contributions covariance adjustment model estimating equations","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"breaking-changes-0-3-8","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"propertee 0.3.8","text":"model-based standard errors clustered level assignment called blocked design, vcov_tee() clusters units assignment small blocks, blocks one treated control unit, together.","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"breaking-changes-0-3-7","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"propertee 0.3.7","text":"vcov_tee() scales estimating equations using different constants ","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"bug-fixes-0-3-6","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"propertee 0.3.6","text":"Previous procedure aligning contributions estimating equations first-stage second-stage models failed column(s) used alignment NA‚Äôs. Outputs vcov_tee() liable change call call result. fixed.","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"improvements-0-3-5","dir":"Changelog","previous_headings":"","what":"Improvements","title":"propertee 0.3.5","text":"Diagonal elements vcov_tee() matrices lacking sufficient degrees freedom estimation returned NA‚Äôs rather numeric zeros. deviation sandwich package aims provide clarity results may otherwise appear negative diagonal elements vcov matrix","code":""},{"path":"www.github.com/news/index.html","id":"bug-fixes-0-3-5","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"propertee 0.3.5","text":"lmitt() called blocked design absorb=TRUE, block-centered assignment , applicable, moderator assignment:moderator interaction columns, longer centered grand mean column. ensures blocks satisfy positivity assignment variable (positivity within factor level) contribute effect estimation lmitt() now accepts references formula objects","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"improvements-0-3-4","dir":"Changelog","previous_headings":"","what":"Improvements","title":"propertee 0.3.4","text":"Computational performance estfun.teeMod improved","code":""},{"path":"www.github.com/news/index.html","id":"bug-fixes-0-3-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"propertee 0.3.4","text":"errors due --hood duplication moderator variable absorb=TRUE estimates corrected case observations stratum 0 weights due treated control units assignment existing stratum","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"added-features-0-3-3","dir":"Changelog","previous_headings":"","what":"Added Features","title":"propertee 0.3.3","text":"vcov_tee() can accept user-created variance estimation functions start prefix .vcov_; type argument take rest function name input Variance estimation robust GLM‚Äôs (models fit using robustbase::glmrob) now accommodated HC1 variance estimates now accommodated","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"added-features-0-3-2","dir":"Changelog","previous_headings":"","what":"Added Features","title":"propertee 0.3.2","text":"Effect estimation continuous moderator variables now supported","code":""},{"path":"www.github.com/news/index.html","id":"non-breaking-changes-0-3-2","dir":"Changelog","previous_headings":"","what":"Non-Breaking Changes","title":"propertee 0.3.2","text":"vcov_tee() return NA‚Äôs entries covariance matrix lack sufficient degrees freedom estimate. Informative warnings accompany matrix, indicating standard errors NA‚Äôd .","code":""},{"path":"www.github.com/news/index.html","id":"bug-fixes-0-3-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"propertee 0.3.2","text":"Functions generating weights, ate() ett(), return weights 0 rather infinity blocks contain treated units control units. Prior covariate adjustment fits previously incorporated variance estimation differently depending whether one created SandwichLayer object calling lmitt() called cov_adj() offset argument lmitt() call. corrected, ways return variance estimates. Covariate adjustment models admit rectangular bread matrices, produced robustbase::lmrob, now accommodated given reformulated estimating equations versions v0.1.1 later. contrasts error raised model.matrix() certain cov_adj() calls resolved.","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"breaking-changes-0-3-1","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"propertee 0.3.1","text":"now order teeMod objects‚Äô matrix estimating equations based user-specified ID columns unit assignment ID‚Äôs. stats::update function can longer called teeMod objects.","code":""},{"path":"www.github.com/news/index.html","id":"non-breaking-changes-0-3-1","dir":"Changelog","previous_headings":"","what":"Non-Breaking Changes","title":"propertee 0.3.1","text":"teeMod objects now lmitt_call slots. summary calls teeMod objects accept vcov.type arguments specify desired standard error calculation shown output. Acceptable types follow documentation vcov_tee. Shown printed teeMod objects return comprehensible labels ITT effect outputs.","code":""},{"path":"www.github.com/news/index.html","id":"r-version-compatibility-0-3-1","dir":"Changelog","previous_headings":"","what":"R Version Compatibility","title":"propertee 0.3.1","text":"Now compatible R 4.3. Particularly, advise users working R 4.3 avoid expand.model.frame calls teeMod objects instead use internal function .expand.model.frame_teeMod necessary.","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"breaking-changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"propertee 0.2.1","text":"Stratum fixed effects subgroup moderating effects can now accounted via absorb argument. Previous versions properly support functionality. Valid standard errors absorption, however, confirmed.","code":""},{"path":[]},{"path":"www.github.com/news/index.html","id":"breaking-changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"propertee 0.1.1","text":"reformulated estimating equations used derive standard errors. estimation settings accommodate, testing revealed differences standard error estimates previous current estimating equations, assure case possible situations.","code":""},{"path":"www.github.com/news/index.html","id":"propertee-001","dir":"Changelog","previous_headings":"","what":"propertee 0.0.1","title":"propertee 0.0.1","text":"Compatible R 4.2.3 Introduces functionality direct adjusted design-informed standard errors accommodating covariance adjustment model-based setting Cluster-robust standard errors can estimated using HC0 estimator","code":""}]
