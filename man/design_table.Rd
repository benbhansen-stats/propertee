% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dtable.R
\name{design_table}
\alias{design_table}
\alias{dtable}
\title{Table of elements from a \code{Design}}
\usage{
design_table(
  design,
  x,
  y = NULL,
  sort = FALSE,
  decreasing = TRUE,
  use_var_names = FALSE,
  treatment_binary = TRUE,
  ...
)

dtable(
  design,
  x,
  y = NULL,
  sort = FALSE,
  decreasing = TRUE,
  use_var_names = FALSE,
  treatment_binary = TRUE,
  ...
)
}
\arguments{
\item{design}{A \code{Design} object}

\item{x}{One of "treatment", "unit of assignment", (synonym "uoa"), "block".
Abbreviations are accepted. "unit of assignment" can be replaced by
"unitid" or "cluster" if the \code{Design} was created with that element.}

\item{y}{Optionally, another string similar to \code{x}. A 1-dimensional
table is produced if \code{y} is left at its default, \code{NULL}.}

\item{sort}{Ignored if \code{y} is not \code{NULL}. If \code{FALSE}
(default), one-way table is sorted according to "names" of levels. If set
to \code{TRUE}, one-way table is sorted according to values.}

\item{decreasing}{If \code{sort} is \code{TRUE}, choose whether to sort
descending (\code{TRUE}, default) or ascending (\code{FALSE}).}

\item{use_var_names}{If \code{TRUE}, name dimensions of table returned by
variable names. If \code{FALSE} (default), name by their function (e.g.
"treatment" or "blocks"). Passing the \code{dnn} argument in \code{...}
(an argument of \code{\link[=table]{table()}}) overrides whatever is requested here.}

\item{treatment_binary}{Should the treatment (if requested) be dichotomized
of \code{design} contains a \code{dichotomy}? Ignored if \code{design}
does not contain a \code{dichotomy}, or if neither \code{x} or \code{y} is
"treatment".}

\item{...}{additional arguments \code{\link[=table]{table()}}}
}
\value{
A table of the requested variables.
}
\description{
Produces a table (1-dimensional, or 2-dimensional if \code{y}
is specified) of the elements of the \code{Design}.
}
\examples{
data(simdata)
des <- obs_design(z ~ unit_of_assignment(uoa1, uoa2) + block(bid),
                  data = simdata)
design_table(des, "treatment")
design_table(des, "treatment", "block", sort = TRUE, use_var_names = TRUE)
}
