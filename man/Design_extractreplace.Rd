% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DesignAccessors.R
\name{treatment}
\alias{treatment}
\alias{treatment,Design-method}
\alias{treatment<-}
\alias{treatment<-,Design-method}
\alias{units_of_assignment}
\alias{units_of_assignment,Design-method}
\alias{units_of_assignment<-}
\alias{units_of_assignment<-,Design-method}
\alias{clusters}
\alias{clusters,Design-method}
\alias{clusters<-}
\alias{clusters<-,Design-method}
\alias{unitids}
\alias{unitids,Design-method}
\alias{unitids<-}
\alias{unitids<-,Design-method}
\alias{blocks}
\alias{blocks,Design-method}
\alias{blocks<-}
\alias{blocks<-,Design-method}
\alias{forcings}
\alias{forcings,Design-method}
\alias{forcings<-}
\alias{forcings<-,Design-method}
\title{Accessors and Replacers for \code{Design} objects}
\usage{
treatment(x, ...)

\S4method{treatment}{Design}(x, binary = FALSE, ...)

treatment(x) <- value

\S4method{treatment}{Design}(x) <- value

units_of_assignment(x)

\S4method{units_of_assignment}{Design}(x)

units_of_assignment(x) <- value

\S4method{units_of_assignment}{Design}(x) <- value

clusters(x)

\S4method{clusters}{Design}(x)

clusters(x) <- value

\S4method{clusters}{Design}(x) <- value

unitids(x)

\S4method{unitids}{Design}(x)

unitids(x) <- value

\S4method{unitids}{Design}(x) <- value

blocks(x)

\S4method{blocks}{Design}(x)

blocks(x) <- value

\S4method{blocks}{Design}(x) <- value

forcings(x)

\S4method{forcings}{Design}(x)

forcings(x) <- value

\S4method{forcings}{Design}(x) <- value
}
\arguments{
\item{x}{\code{Design} object}

\item{...}{Ignored.}

\item{binary}{Logical; if \code{FALSE} (default), return a \code{data.frame}
containing the named treatment variable. If \code{TRUE} and \code{x} has a
formula in \code{@dichotomy}, return a \code{data.frame} containing a
binary treatment variable with the name \code{"z__"}. Errors on
\code{TRUE} if treatment is non-binary \code{@dichotomy} is \code{NULL} .}

\item{value}{Replacement. Either a \code{vector}/\code{matrix} of
appropriate dimension, or a named \code{data.frame} if renaming variable
as well.}
}
\value{
\code{data.frame} containing treatment variable
}
\description{
For \code{treatment()}, when argument \code{binary} is \code{FALSE}, the
treatment variable passed into the \code{Design} is returned as a one-column
\code{data.frame}. If \code{binary = TRUE} is passed, and the \code{Design}
either has a binary treatment variable, or has a \code{dichotomy}, a binary
one-column \code{data.frame} will be returned. If the \code{Design} does not
have access to binary treatment (non-binary treatment and no
\code{dichotomy} specified), this will error.
}
\details{
The one-column \code{data.frame} returned by \code{treatment()} is named as
entered in the \code{Design} creation, but if a \code{dichotomy} is in the
\code{Design}, the column name is \code{"__z"}.
}
