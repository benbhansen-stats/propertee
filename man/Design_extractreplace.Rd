% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DesignAccessors.R
\name{treatment}
\alias{treatment}
\alias{treatment,Design-method}
\alias{treatment<-}
\alias{treatment<-,Design-method}
\alias{units_of_assignment}
\alias{units_of_assignment,Design-method}
\alias{units_of_assignment<-}
\alias{units_of_assignment<-,Design-method}
\alias{clusters}
\alias{clusters,Design-method}
\alias{clusters<-}
\alias{clusters<-,Design-method}
\alias{unitids}
\alias{unitids,Design-method}
\alias{unitids<-}
\alias{unitids<-,Design-method}
\alias{blocks}
\alias{blocks,Design-method}
\alias{blocks<-}
\alias{blocks<-,Design-method}
\alias{forcings}
\alias{forcings,Design-method}
\alias{forcings<-}
\alias{forcings<-,Design-method}
\title{Accessors and Replacers for \code{Design} objects}
\usage{
treatment(x, binary = FALSE, newdata = NULL, by = NULL, ...)

\S4method{treatment}{Design}(x, binary = FALSE, newdata = NULL, by = NULL, ...)

treatment(x) <- value

\S4method{treatment}{Design}(x) <- value

units_of_assignment(x, newdata = NULL, by = NULL)

\S4method{units_of_assignment}{Design}(x, newdata = NULL, by = NULL)

units_of_assignment(x) <- value

\S4method{units_of_assignment}{Design}(x) <- value

clusters(x, newdata = NULL, by = NULL)

\S4method{clusters}{Design}(x, newdata = NULL, by = NULL)

clusters(x) <- value

\S4method{clusters}{Design}(x) <- value

unitids(x)

\S4method{unitids}{Design}(x)

unitids(x) <- value

\S4method{unitids}{Design}(x) <- value

blocks(x, newdata = NULL, by = NULL)

\S4method{blocks}{Design}(x, newdata = NULL, by = NULL)

blocks(x) <- value

\S4method{blocks}{Design}(x) <- value

forcings(x, newdata = NULL, by = NULL)

\S4method{forcings}{Design}(x, newdata = NULL, by = NULL)

forcings(x) <- value

\S4method{forcings}{Design}(x) <- value
}
\arguments{
\item{x}{\code{Design} object}

\item{binary}{if \code{FALSE} (default), return a \code{data.frame}
containing the named treatment variable. If \code{TRUE} and \code{x} has a
formula in \code{@dichotomy}, return a \code{data.frame} containing a
binary treatment variable with the name \code{"z__"}. Errors on
\code{TRUE} if treatment is non-binary \code{@dichotomy} is \code{NULL}.
If \code{"ifany"}, returns a binary treatment if possible (if treatment is
already binary, or there's a valid \code{@dichotomy}), otherwise return
original treatment.}

\item{newdata}{optional; an additional \code{data.frame}. If passed, and the
unit of assignment variable is found in \code{newdata}, then the requested
variable type for each unit of \code{newdata} is returned. See \code{by}
argument if the name of the unit of assignment differs.}

\item{by}{optional; named vector or list connecting names of unit of
assignment/unitid/cluster variables in \code{x} to unit of
assignment/unitid/cluster variables in \code{data}. Names represent
variables in the Design; values represent variables in the data. Only
needed if variable names differ.}

\item{...}{ignored.}

\item{value}{replacement. Either a \code{vector}/\code{matrix} of
appropriate dimension, or a named \code{data.frame} if renaming variable
as well.}
}
\value{
\code{data.frame} containing requested variable, or an updated
\code{Design}.
}
\description{
Allows access to the elements which define a \code{Design}, enabling their
extraction or replacement.
}
\details{
For \code{treatment()}, when argument \code{binary} is \code{FALSE}, the
treatment variable passed into the \code{Design} is returned as a one-column
\code{data.frame}. If \code{binary = TRUE} is passed, and the \code{Design}
either has a binary treatment variable, or has a \code{dichotomy}, a binary
one-column \code{data.frame} will be returned. If the \code{Design} does not
have access to binary treatment (non-binary treatment and no
\code{dichotomy} specified), passing \code{binary = TRUE} will error.

\code{binary = "ifany"} is the most permissible; returning the dichotomized
treatment variable if \code{@dichotomy} exists, otherwise returning the
original treatment without error.

The one-column \code{data.frame} returned by \code{treatment()} is named as
entered in the \code{Design} creation, but if a \code{dichotomy} is in the
\code{Design}, the column name is \code{"__z"}.
}
\examples{
data(simdata)
des <- obs_design(z ~ unit_of_assignment(cid1, cid2), data = simdata)
blocks(des) # empty
blocks(des) <- data.frame(blks = c(1, 1, 2, 2, 3, 3, 4, 4, 5, 5))
blocks(des)
}
