% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WeightedStudySpecification.R
\name{+,WeightedStudySpecification,numeric-method}
\alias{+,WeightedStudySpecification,numeric-method}
\alias{+,numeric,WeightedStudySpecification-method}
\alias{-,WeightedStudySpecification,numeric-method}
\alias{-,numeric,WeightedStudySpecification-method}
\alias{*,WeightedStudySpecification,numeric-method}
\alias{*,numeric,WeightedStudySpecification-method}
\alias{/,WeightedStudySpecification,numeric-method}
\alias{/,numeric,WeightedStudySpecification-method}
\title{\code{WeightedStudySpecification} Operations}
\usage{
\S4method{+}{WeightedStudySpecification,numeric}(e1, e2)

\S4method{+}{numeric,WeightedStudySpecification}(e1, e2)

\S4method{-}{WeightedStudySpecification,numeric}(e1, e2)

\S4method{-}{numeric,WeightedStudySpecification}(e1, e2)

\S4method{*}{WeightedStudySpecification,numeric}(e1, e2)

\S4method{*}{numeric,WeightedStudySpecification}(e1, e2)

\S4method{/}{WeightedStudySpecification,numeric}(e1, e2)

\S4method{/}{numeric,WeightedStudySpecification}(e1, e2)
}
\arguments{
\item{e1, e2}{\code{WeightedStudySpecification} or \code{numeric} objects}
}
\value{
a \code{WeightedStudySpecification} object
}
\description{
Algebraic operators on \code{WeightedStudySpecification}
objects and numeric vectors. \code{WeightedStudySpecification}s do not
support addition or subtraction.
}
\details{
These are primarily used to either combine weights via
multiplication, or to invert weights. Addition and subtraction are not
supported and will produce errors.
}
\examples{
data(schooldata)
data(studentdata)
spec <- rct_spec(treatment ~ unitid(schoolid) + block(state), schooldata)
wt <- ate(spec, data = schooldata)
wt.subset <- wt[seq_len(4)]
identical(subset(wt, c(rep(TRUE, 4), rep(FALSE, nrow(schooldata)-4))),
          wt.subset)
show(wt.subset)
weights(wt.subset)
wt2 <- ett(spec, data = schooldata)
wt2.subset <- wt2[seq_len(4)]
can_add <- tryCatch(wt.subset + wt2.subset, error = function(e) FALSE)
can_add
can_multiply <- tryCatch(wt.subset * wt2.subset, error = function(e) FALSE)
can_multiply
can_divide <- tryCatch(wt.subset / wt2.subset, error = function(e) FALSE)
can_divide
other.wt <- c(1, 1, 0, 1)
can_multiply2 <- tryCatch(wt.subset * other.wt, error = function(e) FALSE)
can_multiply2
can_divide2 <- tryCatch(other.wt / wt.subset, error = function(e) FALSE)
can_divide2
}
