% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DesignUtilities.R
\name{is_dichotomized}
\alias{is_dichotomized}
\alias{has_binary_treatment}
\title{Check if Design has binary treatment}
\usage{
is_dichotomized(des)

has_binary_treatment(des)
}
\arguments{
\item{des}{A design}
}
\value{
\code{TRUE} if \code{des} has a \code{dichotomy}; \code{FALSE}
otherwise
}
\description{
These functions determine if a Design is dichotomized
(\code{is_dichotomized()}) or has access to a binary treatment variable
(\code{has_binary_treatment()}).
}
\details{
\code{is_dichotomized()} checks for the the presence of a
\code{@dichotomy} slot in the Design, either passed directly into the
various \code{*_design()} Design creators, or added afterwards with
\code{dichotomy(my_design) <-}.

\code{has_binary_treatment()} returns \code{TRUE} if the treatment is
numeric with only values of 0/1, or \code{TRUE}/\code{FALSE}, or \code{NA},
if the Design has a \code{dichotomy}.

Note that if the treatment given into a Design is already binary
(exclusively measured as encoding only 0's and 1's, or is \code{logical}),
then \code{has_binary_treatment()} would return \code{TRUE} while
\code{is_dichotomized()} would return false. Therefore, if your goal is to
identify whether we can obtain a binary treatment, use
\code{has_binary_treatment()}.
}
