% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DesignUtilities.R
\name{is_dichotomized}
\alias{is_dichotomized}
\alias{has_binary_treatment}
\alias{is_binary_or_dichotomized}
\title{Check if \code{Design} has access to a binary treatment}
\usage{
is_dichotomized(des)

has_binary_treatment(des)

is_binary_or_dichotomized(des)
}
\arguments{
\item{des}{a \code{Design} object}
}
\value{
Logical; see details.
}
\description{
These functions determine if a \code{Design} is dichotomized
(\code{is_dichotomized()}) or has access to a binary treatment variable
(\code{has_binary_treatment()}) or has either
(\code{is_binary_or_dichotomized()}).
}
\details{
\code{is_dichotomized()} checks for the the presence of a \code{@dichotomy}
slot in the \code{Design}, either passed directly into the various
\code{*_design()} \code{Design} creators, or added afterwards with
\code{dichotomy(my_design)<-}.

\code{has_binary_treatment()} returns \code{TRUE} if the treatment is
numeric with only values of \code{0} and \code{1}, or is logical. It also
allows \code{NA} in the treatment.

\code{is_binary_or_dichotomized} returns \code{TRUE} if either
\code{is_dichotomized()} and \code{has_binary_treatment()} return
\code{TRUE}.
}
\examples{
data(simdata)
des1 <- rct_design(z ~ uoa(cid1, cid2), data = simdata)
des2 <- rct_design(o ~ uoa(cid1, cid2), data = simdata)
des3 <- rct_design(o ~ uoa(cid1, cid2), data = simdata,
                   dichotomy = o >= 3 ~ .)

if (is_binary_or_dichotomized(des1)) {
  wt <- ate(des1, data = simdata)
}
if (is_binary_or_dichotomized(des2)) {
  wt <- ate(des2, data = simdata) # would fail but won't be run
}
if (is_binary_or_dichotomized(des3)) {
  wt <- ate(des3, data = simdata)
}

}
