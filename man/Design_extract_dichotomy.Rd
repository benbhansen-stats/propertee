% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DesignAccessors.R
\name{dichotomy}
\alias{dichotomy}
\alias{dichotomy,Design-method}
\alias{dichotomy<-}
\alias{dichotomy<-,Design-method}
\title{Extract or replace \code{dichotomy}}
\usage{
dichotomy(x)

\S4method{dichotomy}{Design}(x)

dichotomy(x) <- value

\S4method{dichotomy}{Design}(x) <- value
}
\arguments{
\item{x}{a \code{Design} object}

\item{value}{replacement \code{dichotomy} formula, or \code{NULL} to remove}
}
\value{
The accessor returns the dichomization formula. (\code{NULL} if
\code{x} has no \code{dichotomy}.) The replacer returns a \code{Design} with
the \code{dichomization} replaced with \code{x}.
}
\description{
Used to add, modify, or extract the \code{dichotomy} attached
to a \code{Design}.
}
\details{
A \code{dichotomy} is specified by a \code{formula} consisting of a
conditional statement on both the left-hand side (identifying treatment
levels associated with "treatment") and the right hand side (identifying
treatment levels associated with "control"). For example, if your
treatment variable was called \code{dose} and doses above 250 are
considered treatment, you might write:

\code{dichotomy(des) <- dose > 250 ~ dose <= 250}

The period (\code{.}) can be used to assign all other units of assignment.
For example, we could have written the same treatment regime as either

\code{dichotomy(des) <- dose > 250 ~ .}

or

\code{dichotomy(des) <- . ~ dose <= 250}

The \code{dichotomy} formula supports Relational Operators (see
\link{Comparison}), Logical Operators (see \link{Logic}), and \code{\%in\%} (see
\code{\link[=match]{match()}}).

The conditionals need not assign all values of treatment to control or
treatment, for example, \code{dose > 300 ~ dose < 200} does not assign
\code{200 <= dose <= 300} to either treatment or control. This would be
equivalent to manually generating a binary variable with \code{NA}
whenever \code{dose} is between 200 and 300. Units not assigned to
treatment or control will be maintained in the \code{Design} for proper
standard error calculations.

Note that you can specify a conditional logic treatment directly in the
\code{Design} creation (e.g. \code{rct_design(dose > 250 ~
  unitOfAssignment(...}) but we would strongly suggest instead passing the
treatment variable directly and using \code{dichotomy}. Otherwise changing
the dichotomy will require re-creating the Design, instead of simply using
\code{dichotomy(design) <-} or passing \code{dichotomy} to \code{ate()} or
\code{ett()}.
}
\examples{
data(simdata)
des1 <- rct_design(dose ~ uoa(cid1, cid2), data = simdata)
des2 <- rct_design(dose ~ uoa(cid1, cid2), data = simdata,
                   dichotomy = dose > 250 ~ .)
dichotomy(des1)
dichotomy(des2)
dichotomy(des1) <- dose > 250 ~ .
}
\seealso{
\code{\link[=treatment]{treatment()}} for extracting the treatment variable, using
\code{binary = TRUE} argument to apply the dichotomy before extracting.
}
