% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lmitt.R
\name{lmitt}
\alias{lmitt}
\alias{lmitt.formula}
\alias{lmitt.lm}
\title{Linear Model for Intention To Treat}
\usage{
lmitt(obj, specification, data, ...)

\method{lmitt}{formula}(
  obj,
  specification,
  data,
  absorb = FALSE,
  offset = NULL,
  weights = NULL,
  ...
)

\method{lmitt}{lm}(obj, specification = NULL, ...)
}
\arguments{
\item{obj}{A \code{formula} or a \code{lm} object. See Details.}

\item{specification}{The \code{StudySpecification} to be used.
Alternatively, a formula creating a specification (of the type of that
would be passed as the first argument to \code{\link[=rd_spec]{rd_spec()}}, \code{\link[=rct_spec]{rct_spec()}}, or
\code{\link[=obs_spec]{obs_spec()}}). If the formula includes a \code{\link[=forcing]{forcing()}} element, an RD
specification is created. Otherwise an observational specification is
created. An RCT specification must be created manually using \code{\link[=rct_spec]{rct_spec()}}.}

\item{data}{A \code{data.frame} such as would be passed into \code{\link[=lm]{lm()}}.}

\item{...}{Additional arguments passed to \code{\link[=lm]{lm()}}. One such argument is
\code{dichotomy}, which can be used to dichotomize a non-binary treatment
variable in \code{specification}. See the Details section of the
\code{ett()} or \code{att()} help pages for information on specifying this
formula.}

\item{absorb}{If \code{TRUE}, fixed effects are included for blocks
identified in the \code{StudySpecification}. Excluded in \code{FALSE}.
Default is \code{FALSE}. The estimates of these fixed effects are
suppressed from the returned object.}

\item{offset}{Offset of the kind which would be passed into \code{\link[=lm]{lm()}}. Ideally,
this should be the output of \code{\link[=cov_adj]{cov_adj()}}.}

\item{weights}{Which weights should be generated? Options are \code{"ate"}
or \code{"ett"}. Alternatively, the output of a manually run \code{ate()}
or \code{ett()} can be used.}
}
\value{
\code{teeMod} model.
}
\description{
Generates a linear model object to estimate a treatment effect,
with proper estimation of variances accounting for the study
specification.
}
\details{
The first argument to \code{\link[=lmitt]{lmitt()}} should be a formula specifying the
outcome on the left hand side. The right hand side of the formula can be
any of the following:

\itemize{
\item \code{1}: Estimates a main treatment effect.
\item a subgroup variable: Estimates a treatment effect within each level
of your subgrouping variable.
\item a continuous moderator: Estimates a main treatment effect as well as
a treatment by moderator interaction. The moderator is not
automatically centered.
}

Alternatively, \code{obj} can be a pre-created \code{lm} object. No
modification is made to the formula of the object. See the help for
\code{as.lmitt()} for details of this conversion.

The \code{\link[=lmitt]{lmitt()}} function's \code{subset=} argument governs
the subsetting of \code{data} prior to model fitting, just as with \code{\link[=lm]{lm()}}.
Functions such as \code{\link[=rct_spec]{rct_spec()}} that create \code{StudySpecification}s
also take an optional \code{subset=} argument, but its role differs
from that of the \code{subset=} argument of \code{\link[=lm]{lm()}} or \code{\link[=lmitt]{lmitt()}}. The \code{subset=}
argument when creating a \code{StudySpecification} restricts the data used
to generate the \code{StudySpecification}, but has no direct impact on the
future \code{lm()} or \code{lmitt()} calls using that
\code{StudySpecification}. (It can have an indirect impact by excluding
particular units from receiving a treatment assignment or weight. When
treatment assignments or weights are reconstructed from the \code{StudySpecification},
these units will receive NAs, and will be excluded from the \code{lm()}
or \code{lmitt()} fit under typical \code{na.action} settings.)

To avoid variable name collision, the treatment variable defined in the
\code{specification} will have a "\code{.}" appended to it. For example, if
you request a main treatment effect (with a formula of \code{~ 1}) with a
treatment variable named "txt", you can obtain its estimate from the
returned \code{teeMod} object via \code{$coefficients["txt."]}.

\code{\link[=lmitt]{lmitt()}} will produce a message if the \code{StudySpecification} passed in
has block information that is not being used to inform weights or a block
fixed effect adjustment. This is not an error, but it often represents an
oversight on the part of the analyst. To disable this
message, run \code{options("propertee_message_on_unused_blocks" = FALSE)}.
}
\examples{
data(simdata)
spec <- rct_spec(z ~ unit_of_assignment(uoa1, uoa2), data = simdata)
mod1 <- lmitt(y ~ 1, data = simdata, specification = spec, weights = "ate")
mod2 <- lmitt(y ~ as.factor(o), data = simdata, specification = spec, weights = "ate")
mod3 <- lmitt(y ~ 1, data = simdata,
              specification = z ~ uoa(uoa1, uoa2) + forcing(force))
}
