% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lmitt.R
\name{lmitt}
\alias{lmitt}
\alias{lmitt.formula}
\alias{lmitt.lm}
\title{Linear Model for Intention To Treat}
\usage{
lmitt(obj, design, data, ...)

\method{lmitt}{formula}(obj, design, data, absorb = FALSE, offset = NULL, weights = NULL, ...)

\method{lmitt}{lm}(obj, design = NULL, ...)
}
\arguments{
\item{obj}{A \code{formula} or a \code{lm} object. See details.}

\item{design}{The \code{Design} to be used. Alternatively, a formula
creating a design (of the type of that would be passed as the first
argument to \code{rd_design()}, \code{rct_design()}, or
\code{obs_design()}).}

\item{data}{Data frame such as would be passed into \code{lm()}.}

\item{...}{Additional arguments passed to \code{lm()}.}

\item{absorb}{If \code{TRUE}, fixed effects are included for units of
assignemnt/clusters identified in the \code{Design}. Excluded in
\code{FALSE}. Default is \code{FALSE}.}

\item{offset}{Offset of the kind which would be passed into \code{lm()}. To
utilize flexida's functionality, the output of \code{cov_adj()}.}

\item{weights}{Weight of the kind which would be passed into \code{lm()}. To
utilize flexida's functionality, the output of \code{ate()} or
\code{ett()}, or the strings \code{"ate"}/\code{"ett"}.}
}
\value{
\code{DirectAdjusted} model.
}
\description{
Generates a linear model object which allows proper estimation of variances
accounting for the study design.
}
\details{
The first argument to \code{lmitt}, \code{obj}, specifies a linear
regression model. The formula is specified exactly how it would be in
\code{lm()}, with one deviation. Rather than including the treatment
variable by name, the helper function \code{assigned()} should be used in
its place. For example, if your outcome is \code{y}, you could call
\code{lmitt(y ~ assigned(), design = ...)}.

If the formula does \emph{not} contain at least one \code{assigned()}, the
right hand side of the formula will be treated as a series of
strataification variables. This means that a formula such as \code{y ~ x +
q} will be replaced with \code{y ~ x:assigned() + q:assigned()} such that
\code{lmitt} will estimate the treatment effect within each level of both
\code{x} and \code{q}. If \code{assigned()} is found anywhere on the right
hand side of \code{obj}, this modification is \emph{not} made.

Any additional arguments to \code{lm()} can be passed into \code{...}. See
the help for \code{lm()} for a list of possible argument. Most commonly used
in this scenario would be \code{weights=} to pass \code{ate()} or
\code{ett()}, or \code{offset=} to pass \code{cov_adj()}.

Alternatively, \code{obj} can be a pre-created \code{lm} object. No
modification is made to the formula of the object. See the help for
\code{as.lmitt()} for details of this conversion.

Note that although the \code{Design} creation functions (e.g.
\code{rct_design()}) take an optional \code{subset=} argument used in the
creation of the \code{Design}, this is \bold{not} the same as the
\code{subset=} argument passed to \code{lm()} or \code{lmitt()}. The
\code{subset=} argument when creating a \code{Design} restricts the data
used to generate the \code{Design}, but has no direct impact on the future
\code{lm()} or \code{lmitt()} calls using that \code{Design}. (It can
indirectly have an impact by excluding particular clusters/units of
assignment from recieving a treatment assignment and thus complete case
analysis removes them from the model.)

On the other hand, the \code{subset=} argument in \code{lm()} or
\code{lmitt()} refers only to subsetting the \code{data} argument passed
into \code{lm()} or \code{lmitt()}.
}
