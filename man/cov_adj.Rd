% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cov_adj.R
\name{cov_adj}
\alias{cov_adj}
\title{Covariance Adjustment for Treatment Estimation}
\usage{
cov_adj(model, newdata = NULL, design = NULL, by = NULL)
}
\arguments{
\item{model}{Any model that inherits from a \code{glm}, \code{lm}, or
\code{robustbase::lmrob} object}

\item{newdata}{Optional; a data.frame of new data}

\item{design}{Optional \code{Design}. If not provided, the function will
search through the call stack to find one.}

\item{by}{optional; vector or list connecting names of cluster/unit of
assignment variables in \code{design} to cluster/unit of assignment
variables in the covariance adjustment data. If a named vector, names should
represent variables in the \code{Design} object and values should represent
variables in the data. Only needed if: 1) columns not related to the design should
be used for merging the covariance adjustment and quasiexperimental samples, or
2) the column names differ between the datasets used to fit both models.}
}
\value{
\code{SandwichLayer} or \code{PreSandwichLayer} object; the former if
\code{design} is provided or a \code{design} can be found in the call stack, otherwise
the latter. The values represent the covariance adjustments for the
observations in \code{newdata}, if \code{newdata} is provided or found as an argument to
\code{lmitt.formula}, or the fitted values from \code{model}. The length of the
output of \code{cov_adj()} varies depending on this logic.
}
\description{
Prior to obtaining predicted values, \code{cov_adj()} tries to identify the
treatment variable (as specified in the \code{design}) and replace it with
the reference level. If the treatment is binary, this is \code{FALSE}. If
treatment is numeric, it is the smallest non-negative value (note that this
means for 0/1 binary, it uses a 0). Factor treatments are not currently
supported, but if we add them, it will use the first \code{level()} of the
factor, you may change this by using \code{relevel()} to adjust.
}
\examples{
data(STARdata)
STARdata$treatment <- STARdata$stark == "small"
STARdata$treatment[is.na(STARdata$treatment)] <- FALSE
STARdata$studentid <- as.character(seq_len(nrow(STARdata)))

covariance_y0_read <- lm(readk ~ gender + ethnicity + lunchk +
                                 ladderk + experiencek + tethnicityk,
                         data = STARdata, subset = !treatment)

STARdata_design <- rct_design(treatment ~ cluster(studentid), data = STARdata)
STARdata_ate    <- ate(STARdata_design, data = STARdata)
STARdata_ett    <- ett(STARdata_design, data = STARdata)

ett_read <- lm(readk ~ treatment,
               offset = cov_adj(covariance_y0_read, newdata = STARdata),
               data = STARdata,
               weights = STARdata_ett)
coef(ett_read)

ate_read <- lm(readk ~ treatment,
               offset = cov_adj(covariance_y0_read, newdata = STARdata),
               data = STARdata,
               weights = STARdata_ate)
coef(ate_read)

ate_read_eth <- lm(readk ~ treatment * ethnicity,
                   offset = cov_adj(covariance_y0_read, newdata = STARdata),
                   data = STARdata,
                   weights = STARdata_ate)
coef(ate_read_eth)
}
