% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DesignConverters.R
\name{as_rct_design}
\alias{as_rct_design}
\alias{as_obs_design}
\alias{as_rd_design}
\title{Convert \code{Design} between types}
\usage{
as_rct_design(Design, ..., loseforcing = FALSE)

as_obs_design(Design, ..., loseforcing = FALSE)

as_rd_design(Design, data, ..., forcing)
}
\arguments{
\item{Design}{\code{Design} to convert}

\item{...}{No addiitonal options at present}

\item{loseforcing}{Converting from RD to another \code{Design} type will
error to avoid losing the forcing variable. Setting \code{loseforcing =
  TRUE} allows the conversion to automatically drop the forcing variable.
Default \code{FALSE}.}

\item{data}{Converting to an RD requires adding a \code{forcing} variable,
which requires access to the original data.}

\item{forcing}{Converting to an RD requires adding a \code{forcing}
variable. This should be entered as the update to a formula, e.g.
\code{"~ . + forcing(forcevar)"}.}
}
\value{
\code{Design} of the updated type
}
\description{
These functions convert a \code{Design} between RD, RCT and Obs types.
Converting to RD requires the addition of a forcing variable (see
\code{forcing=} argument), while converting from RD requires consenting to
dropping the forcing variable (see \code{loseforcing=} argument).
}
\examples{
des <- rct_design(z ~ cluster(cid1, cid2), data = simdata)
des
as_obs_design(des)
as_rd_design(des, simdata, forcing = ~ . + forcing(force))
des2 <- rd_design(o ~ unitid(cid1, cid2) + forcing(force), data = simdata)
des2
# as_rct_design(des2) # this will produce an error
as_rct_design(des2, loseforcing = TRUE)
}
