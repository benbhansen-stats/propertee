% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Design.R
\name{design_data_concordance}
\alias{design_data_concordance}
\title{Check for variable agreement within units of assignment}
\usage{
design_data_concordance(design, data, by = NULL, warn_on_nonexistence = TRUE)
}
\arguments{
\item{design}{A Design object}

\item{data}{Data set, presumably not the same used to create \code{design}.}

\item{by}{optional; named vector or list connecting names of variables in
\code{design} to variables in \code{data}. Names represent variables in
\code{design}; values represent variables in \code{data}. Only needed if
variable names differ.}

\item{warn_on_nonexistence}{Default \code{TRUE}. If a variable does not
exist in \code{data}, should this be flagged? If \code{FALSE}, silently
move on if a variable doesn't exist in \code{data}.}
}
\value{
Invisibly \code{TRUE} if no warnings are produced, \code{FALSE} if
any warnings are produced.
}
\description{
Useful for debugging purposes to ensure that there is concordance between
variables in the \code{Design} and data.
}
\details{
Consider the following scenario: A \code{Design} is generated from some
dataset, "data1", which includes a block variable "b1". Within each unique
cluster/unit of assignment of "data1", it must be the case that "b1" is
constant. (Otherwise the creation of the \code{Design} will fail.)

Next, a model is fit which includes weights generated from the
\code{Design}, but on dataset "data2". In "data2", the block variable "b1"
also exists, but due to some issue with data cleaning, does not agree with
"b1" in "data1".

This could cause errors, either directly (via actual error messages) or
simply produce nonsense results. \code{design_data_concordance()} is designed to
help debug these scenarios but providing information on whether variables in
both "data1" (used in the creation of the \code{Design}) and "data2" (some
new dataset passed to \code{design_data_concordance()}) have any
inconsistencies.
}
